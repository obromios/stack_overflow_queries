
+BRAKEMAN REPORT+

Application path: /Users/Chris/Documents/Sites/golf_mentor
Rails version: 4.2.7.1
Brakeman version: 3.3.5
Started at 2016-08-17 09:28:52 +1000
Duration: 29.354903 seconds
Checks run: BasicAuth, BasicAuthTimingAttack, ContentTag, CreateWith, CrossSiteScripting, DefaultRoutes, Deserialize, DetailedExceptions, DigestDoS, DynamicFinders, EscapeFunction, Evaluation, Execute, FileAccess, FileDisclosure, FilterSkipping, ForgerySetting, HeaderDoS, I18nXSS, JRubyXML, JSONEncoding, JSONParsing, LinkTo, LinkToHref, MailTo, MassAssignment, MimeTypeDoS, ModelAttrAccessible, ModelAttributes, ModelSerialize, NestedAttributes, NestedAttributesBypass, NumberToCurrency, QuoteTableName, Redirect, RegexDoS, Render, RenderDoS, RenderInline, ResponseSplitting, RouteDoS, SQL, SQLCVEs, SSLVerify, SafeBufferManipulation, SanitizeMethods, SelectTag, SelectVulnerability, Send, SendFile, SessionManipulation, SessionSettings, SimpleFormat, SingleQuotes, SkipBeforeFilter, StripTags, SymbolDoSCVE, TranslateBug, UnsafeReflection, ValidationRegex, WithoutProtection, XMLDoS, YAMLParsing


+SUMMARY+

+-------------------+-------+
| Scanned/Reported  | Total |
+-------------------+-------+
| Controllers       | 58    |
| Models            | 39    |
| Templates         | 471   |
| Errors            | 2     |
| Security Warnings | 1 (0) |
+-------------------+-------+

+----------------------+-------+
| Warning Type         | Total |
+----------------------+-------+
| Cross Site Scripting | 1     |
+----------------------+-------+

+CONTROLLERS+
+---------------------------------------+------------------------+---------------------------+-------------------------------------------------------------->>
| Name                                  | Parent                 | Includes                  | Routes                                                       >>
+---------------------------------------+------------------------+---------------------------+-------------------------------------------------------------->>
| AccountsController                    | ApplicationController  |                           | cancel, cancel_create, guarantee, payment_success, paypal_dum>>
| AnnouncementsController               | ApplicationController  |                           | create, destroy, new                                         >>
| ApplicationController                 | ActionController::Base | SessionsHelper, EnvAccess | [None]                                                       >>
| ArticlesController                    | ApplicationController  |                           | index                                                        >>
| BookingsController                    | ApplicationController  |                           | create, destroy, edit, index, new, show, update              >>
| CentralsController                    | ApplicationController  |                           | home, pricing, teachers, teachers_tour, tour                 >>
| ChallengesController                  | ApplicationController  |                           | create, edit, new, show, show_sample, update                 >>
| ClubsController                       | ApplicationController  |                           | club_distances, create, create_speed, destroy_all, edit, hybr>>
| CommentsController                    | ApplicationController  |                           | create                                                       >>
| ContactsController                    | ApplicationController  |                           | create, destroy, edit, new, show, update                     >>
| CouponsController                     | ApplicationController  |                           | help, send_from_pro, send_from_pro_create                    >>
| DetailsController                     | ApplicationController  |                           | edit, help, show, update                                     >>
| DrillsController                      | ApplicationController  |                           | create, destroy, edit, help, index, new, print, show, update >>
| Eclubs::InvitesController             | ApplicationController  |                           | create, new                                                  >>
| Eclubs::MembersController             | ApplicationController  |                           | accept, destroy, show                                        >>
| EclubsController                      | ApplicationController  |                           | create, destroy, edit, index, new, update                    >>
| GoalsController                       | ApplicationController  |                           | destroy, edit, editHelp, index, print_show, show, update     >>
| GraphsController                      | ApplicationController  |                           | duration_update                                              >>
| HandicapsController                   | ApplicationController  |                           | calculate, faq, new, print                                   >>
| Ios::SessionsController               | ApplicationController  |                           | create, new                                                  >>
| Ios::UsersController                  | ApplicationController  |                           | create, new                                                  >>
| LandingsController                    | ApplicationController  |                           | index                                                        >>
| LinkagesController                    | ApplicationController  |                           | blogs, create, curios, destroy, edit, golf, index, links, mis>>
| MentalGamesController                 | ApplicationController  |                           | counter, counter_elapsed_update, edit, faq, level_explanation>>
| Microposts::GamesController           | ApplicationController  |                           | create, destroy, edit, help, new, update                     >>
| Microposts::LessonsController         | ApplicationController  |                           | create, destroy, edit, help, new, update                     >>
| Microposts::PracticesController       | ApplicationController  |                           | create, destroy, edit, help, new, update                     >>
| MicropostsController                  | ApplicationController  |                           | index                                                        >>
| OldAdmin::AccountsController          | ApplicationController  |                           | TLevel, TVerify, destroy, edit, index, show, update          >>
| OldAdmin::AdwordsController           | ApplicationController  |                           | index, opted_in_subscribers, opted_in_users                  >>
| OldAdmin::ArticlesController          | ApplicationController  |                           | create, destroy, edit, index, new, show, update              >>
| OldAdmin::BroadcastMessagesController | ApplicationController  |                           | create, destroy, edit, index, new, show, update              >>
| OldAdmin::ChallengesController        | ApplicationController  |                           | destroy, index, show                                         >>
| OldAdmin::CommentsController          | ApplicationController  |                           | create, destroy, edit, index, new, show, update              >>
| OldAdmin::CouponsController           | ApplicationController  |                           | create, destroy, edit, index, new, send_coupon, send_coupon_c>>
| OldAdmin::DashboardsController        | ApplicationController  |                           | club_distances, index, members_counts, members_summary, membe>>
| OldAdmin::MentalGamesController       | ApplicationController  |                           | destroy, index, show, update                                 >>
| OldAdmin::ProUsersController          | ApplicationController  |                           | create, destroy, edit, index, new, show, update              >>
| OldAdmin::ProfessionalsController     | ApplicationController  |                           | create, destroy, edit, index, index_students, new, show, upda>>
| OldAdmin::ProfilesController          | ApplicationController  |                           | index, optOutAll, show                                       >>
| OldAdmin::SubscribersController       | ApplicationController  |                           | create, destroy, edit, index, new, show, toggle_optOutAll, up>>
| OldAdmin::TipsController              | ApplicationController  |                           | create, destroy, edit, index, move, new, show, update        >>
| OldAdmin::UsersController             | ApplicationController  |                           | attempts, create, destroy, edit, index, index_dormant, index_>>
| PagesController                       | ApplicationController  | EnvAccess                 | about, beginner_golf, boot_example, contact_us, fb_improve_go>>
| PasswordResetsController              | ApplicationController  |                           | create, edit, new, sets, update                              >>
| PlansController                       | ApplicationController  |                           | create, edit, editHelp, new, newHelp, show, update           >>
| ProUsersController                    | ApplicationController  |                           | create, dashboard, edit, faq, founders_message, help, new, up>>
| ProfessionalsController               | ApplicationController  |                           | create, edit, help, new, show, show_for_student, update      >>
| ProfilesController                    | ApplicationController  |                           | destroy, edit, email_preferences, optOutAll, privacy_preferen>>
| QuestionairesController               | ApplicationController  |                           | after_survey, after_survey_create, edit, update              >>
| RelationshipsController               | ApplicationController  |                           | [None]                                                       >>
| ReportsController                     | ApplicationController  |                           | report, report_overall, report_overall_sample, report_sample >>
| ReviewsController                     | ApplicationController  |                           | affiliate_test, bunkers, effective_swing, enjoying, exercises>>
| SessionsController                    | ApplicationController  |                           | create, destroy, new                                         >>
| SetupsController                      | ApplicationController  |                           | commitment, commitmentPrint, focus, focusHelp, key_info, key_>>
| StudentsController                    | ApplicationController  |                           | add_drill, create, create_from_coupon, myhome, new, new_from_>>
| SubscribersController                 | ApplicationController  |                           | create, google_optOutAll, google_opt_out, learn_golf, new, op>>
| UsersController                       | ApplicationController  |                           | create, destroy, edit, google_optOutAll, google_opt_out, gtes>>
+---------------------------------------+------------------------+---------------------------+-------------------------------------------------------------->>


+TEMPLATES+

accounts/_not_paid_up

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] pluralize(@account.free_time_left.ceil, "day") |
| [Escaped Output] upgrade_button("silver")                       |
| [Escaped Output] upgrade_button("gold")                         |
| [Escaped Output] upgrade_button("platinum")                     |
| [Escaped Output] paypal_logo                                    |
| [Escaped Output] commission_warning                             |
+-----------------------------------------------------------------+

accounts/_not_paid_up.["Template:accounts/subscriptionShow"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] pluralize(@account.free_time_left.ceil, "day") |
| [Escaped Output] upgrade_button("silver")                       |
| [Escaped Output] upgrade_button("gold")                         |
| [Escaped Output] upgrade_button("platinum")                     |
| [Escaped Output] paypal_logo                                    |
| [Escaped Output] commission_warning                             |
+-----------------------------------------------------------------+

accounts/_paid_up

+--------------------------------------------+
| Output                                     |
+--------------------------------------------+
| [Escaped Output] @account.fee              |
| [Escaped Output] fee_period_text(@account) |
+--------------------------------------------+

accounts/_paid_up.["Template:accounts/subscriptionShow"]

+--------------------------------------------+
| Output                                     |
+--------------------------------------------+
| [Escaped Output] @account.fee              |
| [Escaped Output] fee_period_text(@account) |
+--------------------------------------------+

accounts/cancel

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(@user)                                                                                                    >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Cancellation", :class => "ordinary_button", :id => "refund_button")                                                   >>
| [Escaped Output] simple_form_for(@feedback, :url => cancel_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:response, refund_reasons,>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/cancel.["AccountsController#cancel"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(current_user)                                                                                             >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Cancellation", :class => "ordinary_button", :id => "refund_button")                                                   >>
| [Escaped Output] simple_form_for(Feedback.new(:name => "Cancel"), :url => cancel_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:res>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/cancel.["AccountsController#cancel_create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(current_user)                                                                                             >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Cancellation", :class => "ordinary_button", :id => "refund_button")                                                   >>
| [Escaped Output] simple_form_for(Feedback.new(params[:feedback]), :url => cancel_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:res>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/guarantee

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] Account::Days_guarantee                |
| [Escaped Output] link_to("contact us", contact_us_path) |
| [Escaped Output] Account::Days_guarantee                |
| [Escaped Output] link_to("contact us", contact_us_path) |
+---------------------------------------------------------+

accounts/guarantee.["AccountsController#guarantee"]

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] 0                                      |
| [Escaped Output] link_to("contact us", contact_us_path) |
| [Escaped Output] 0                                      |
| [Escaped Output] link_to("contact us", contact_us_path) |
+---------------------------------------------------------+

accounts/payment_error

+-----------------------------------------------+
| Output                                        |
+-----------------------------------------------+
| [Escaped Output] link_to("myhome", root_path) |
+-----------------------------------------------+

accounts/payment_success

+---------------------------------------------+
| Output                                      |
+---------------------------------------------+
| [Escaped Output] link_to("here", root_path) |
+---------------------------------------------+

accounts/payment_success.["AccountsController#payment_success"]

+---------------------------------------------+
| Output                                      |
+---------------------------------------------+
| [Escaped Output] link_to("here", root_path) |
+---------------------------------------------+

accounts/paypal_dummy

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] params[:price]                                                              |
| [Escaped Output] params[:code]                                                               |
| [Escaped Output] link_to("Cancel Payment", subscriptionCancel_path)                          |
| [Escaped Output] link_to("Payment Success", payment_success_account_path(:id => "xUyt7503")) |
+----------------------------------------------------------------------------------------------+

accounts/paypal_dummy.["AccountsController#paypal_dummy"]

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] params[:price]                                                              |
| [Escaped Output] params[:code]                                                               |
| [Escaped Output] link_to("Cancel Payment", subscriptionCancel_path)                          |
| [Escaped Output] link_to("Payment Success", payment_success_account_path(:id => "xUyt7503")) |
+----------------------------------------------------------------------------------------------+

accounts/pro_user_subscription_show

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] @pro_user.name                                 |
| [Escaped Output] @pro_user.email                                |
| [Escaped Output] pluralize(@account.free_time_left.ceil, "day") |
+-----------------------------------------------------------------+

accounts/pro_user_subscription_show.["AccountsController#subscriptionShow"]

+-----------------------------------------------------------------------------+
| Output                                                                      |
+-----------------------------------------------------------------------------+
| [Escaped Output] current_user.name                                          |
| [Escaped Output] current_user.email                                         |
| [Escaped Output] pluralize(current_user.account.free_time_left.ceil, "day") |
+-----------------------------------------------------------------------------+

accounts/refund

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(@user)                                                                                                    >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Refund", :class => "ordinary_button", :id => "refund_button")                                                         >>
| [Escaped Output] simple_form_for(@feedback, :url => refund_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:response, refund_reasons,>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/refund.["AccountsController#refund"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(current_user)                                                                                             >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Refund", :class => "ordinary_button", :id => "refund_button")                                                         >>
| [Escaped Output] simple_form_for(Feedback.new(:name => "Refund"), :url => refund_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:res>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/refund.["AccountsController#refund_create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] refund_text_if_in_trial_period(current_user)                                                                                             >>
| [Escaped Output] f.collection_radio_buttons(:response, refund_reasons, :first, :last, :item_wrapper_tag => :div)                                          >>
| [Escaped Output] f.input(:comment, :label => "Detailed Comment:", :as => :text, :wrapper_html => ({ :id => "refund_comment" }))                           >>
| [Escaped Output] f.submit("Initiate Refund", :class => "ordinary_button", :id => "refund_button")                                                         >>
| [Escaped Output] simple_form_for(Feedback.new(params[:feedback]), :url => refund_create_account_path) do; [Escaped Output] f.collection_radio_buttons(:res>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/subscription

+----------------------------------------------------------------+
| Output                                                         |
+----------------------------------------------------------------+
| [Escaped Output] @account.current_offer                        |
| [Escaped Output] paypal_live_699_subscribe.html_safe           |
| [Escaped Output] paypal_sandbox_699_subscribe.html_safe        |
| [Escaped Output] render(partial => "shared/pricing_table", {}) |
+----------------------------------------------------------------+

accounts/subscriptionCancel

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.radio_button(:attempt_to_pay, "Changed Mind")                                                                                          >>
| [Escaped Output] f.label(:attempt_to_pay, "I changed my mind")                                                                                            >>
| [Escaped Output] f.radio_button(:attempt_to_pay, "Too Complex")                                                                                           >>
| [Escaped Output] f.label(:attempt_to_pay, "The checkout process was too complex")                                                                         >>
| [Escaped Output] f.radio_button(:attempt_to_pay, "Dislike PayPal")                                                                                        >>
| [Escaped Output] f.label(:attempt_to_pay, "I did not want to use or sign-up to Paypal")                                                                   >>
| [Escaped Output] f.radio_button(:attempt_to_pay, "Not Sure")                                                                                              >>
| [Escaped Output] f.label(:attempt_to_pay, "Some other reason")                                                                                            >>
| [Escaped Output] f.submit("Submit", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@account, :url => subscriptionUpdate_path) do; [Escaped Output] f.radio_button(:attempt_to_pay, "Changed Mind");[Escaped Output]>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Try Again", subscriptionShow_path, :class => "side_menu_link")                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

accounts/subscriptionShow

+----------------------------------------------------------------+
| Output                                                         |
+----------------------------------------------------------------+
| [Escaped Output] @user.name                                    |
| [Escaped Output] @user.email                                   |
| [Escaped Output] @account.status                               |
| [Escaped Output] render(partial => "paid_up", {})              |
| [Escaped Output] render(partial => "not_paid_up", {})          |
| [Escaped Output] render(partial => "shared/pricing_table", {}) |
| [Escaped Output] cancellation_text_if_needed(@user)            |
+----------------------------------------------------------------+

announcements/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:body, "Text for Announcement")                                                                                                  >>
| [Escaped Output] f.text_area(:body)                                                                                                                       >>
| [Escaped Output] f.label(:audience)                                                                                                                       >>
| [Escaped Output] f.select(:audience, :with => (Announcement::Audience.map.with_index do; [a.capitalize, i]; end))                                         >>
| [Escaped Output] f.label(:expiry)                                                                                                                         >>
| [Escaped Output] f.date_field(:expiry)                                                                                                                    >>
| [Escaped Output] f.button("Update", :class => "btn btn-primary", :data => spin_when_loading)                                                              >>
| [Escaped Output] form_for(@announcement) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] f.label>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

announcements/new.["AnnouncementsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:body, "Text for Announcement")                                                                                    >>
| [Escaped Output] FormBuilder.new.text_area(:body)                                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:audience)                                                                                                         >>
| [Escaped Output] FormBuilder.new.select(:audience, :with => (["everyone", "signed_in_only", "visitor_only", "app_only", "exclude_app"].map.with_index do; >>
| [Escaped Output] FormBuilder.new.label(:expiry)                                                                                                           >>
| [Escaped Output] FormBuilder.new.date_field(:expiry)                                                                                                      >>
| [Escaped Output] FormBuilder.new.button("Update", :class => "btn btn-primary", :data => spin_when_loading)                                                >>
| [Escaped Output] form_for(Announcement.new(params[:announcement])) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilde>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

announcements/new.["AnnouncementsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:body, "Text for Announcement")                                                                                    >>
| [Escaped Output] FormBuilder.new.text_area(:body)                                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:audience)                                                                                                         >>
| [Escaped Output] FormBuilder.new.select(:audience, :with => (["everyone", "signed_in_only", "visitor_only", "app_only", "exclude_app"].map.with_index do; >>
| [Escaped Output] FormBuilder.new.label(:expiry)                                                                                                           >>
| [Escaped Output] FormBuilder.new.date_field(:expiry)                                                                                                      >>
| [Escaped Output] FormBuilder.new.button("Update", :class => "btn btn-primary", :data => spin_when_loading)                                                >>
| [Escaped Output] form_for(Announcement.new(:expiry => 1.day.from_now)) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

articles/index

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] article.title                                                                                                                            >>
| [Escaped Output] text_links_if_admin(article).html_safe                                                                                                   >>
| [Escaped Output] article.description.html_safe                                                                                                            >>
| [Escaped Output] article.id                                                                                                                               >>
| [Escaped Output] comment.name                                                                                                                             >>
| [Escaped Output] simple_format(comment.your_comment)                                                                                                      >>
| [Escaped Output] datePretty(article.created_at)                                                                                                           >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "shared/comment_fields", { :f => f })                                                                                  >>
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@comment) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(parti>>
| [Escaped Output] link_to("Comments (#{article.approved_count})", articles_path(article, :anchor => ("comment_#{article.id}")), :class => "btn btn-primary >>
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                                                        >>
| [Escaped Output] @anchor                                                                                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

articles/index.["ArticlesController#index"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] article.title                                                                                                                            >>
| [Escaped Output] text_links_if_admin(article).html_safe                                                                                                   >>
| [Escaped Output] article.description.html_safe                                                                                                            >>
| [Escaped Output] article.id                                                                                                                               >>
| [Escaped Output] (Unresolved Model).new.name                                                                                                              >>
| [Escaped Output] simple_format((Unresolved Model).new.your_comment)                                                                                       >>
| [Escaped Output] datePretty(article.created_at)                                                                                                           >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "shared/comment_fields", { :f => FormBuilder.new })                                                                    >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(Article.find(params[:format]).comments.build) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormB>>
| [Escaped Output] link_to("Comments (#{article.approved_count})", articles_path(article, :anchor => ("comment_#{article.id}")), :class => "btn btn-primary >>
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                                                        >>
| [Escaped Output] @anchor                                                                                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

articles/index.["CommentsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] article.title                                                                                                                            >>
| [Escaped Output] text_links_if_admin(article).html_safe                                                                                                   >>
| [Escaped Output] article.description.html_safe                                                                                                            >>
| [Escaped Output] article.id                                                                                                                               >>
| [Escaped Output] (Unresolved Model).new.name                                                                                                              >>
| [Escaped Output] simple_format((Unresolved Model).new.your_comment)                                                                                       >>
| [Escaped Output] datePretty(article.created_at)                                                                                                           >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "shared/comment_fields", { :f => FormBuilder.new })                                                                    >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(Article.find(params[:comment][:article_id].to_i).comments.build(params[:comment])) do; [Escaped Output] render(partial => "share>>
| [Escaped Output] link_to("Comments (#{article.approved_count})", articles_path(article, :anchor => ("comment_#{article.id}")), :class => "btn btn-primary >>
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                                                        >>

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:day)                                                                                                                            >>
| [Escaped Output] f.input(:slot)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@booking) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:day);[Escaped Output] f.input(:slot);[Escap>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/_form.["BookingsController#create", "Template:bookings/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:day)                                                                                                                            >>
| [Escaped Output] f.input(:slot)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(Booking.new(booking_params)) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:day);[Escaped Output] f.>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/_form.["BookingsController#edit", "Template:bookings/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:day)                                                                                                                            >>
| [Escaped Output] f.input(:slot)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(Booking.find(params[:id])) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:day);[Escaped Output] f.in>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/_form.["BookingsController#new", "Template:bookings/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:day)                                                                                                                            >>
| [Escaped Output] f.input(:slot)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(Booking.new) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:day);[Escaped Output] f.input(:slot);[Es>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/_form.["Template:bookings/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:day)                                                                                                                            >>
| [Escaped Output] f.input(:slot)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@booking) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:day);[Escaped Output] f.input(:slot);[Escap>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

bookings/edit

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Show", @booking)      |
| [Escaped Output] link_to("Back", bookings_path) |
+-------------------------------------------------+

bookings/edit.["BookingsController#edit"]

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})              |
| [Escaped Output] link_to("Show", Booking.find(params[:id])) |
| [Escaped Output] link_to("Back", bookings_path)             |
+-------------------------------------------------------------+

bookings/index

+--------------------------------------------------------------------------------------------------------------+
| Output                                                                                                       |
+--------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                      |
| [Escaped Output] link_to("<", :date => @date.prev_week)                                                      |
| [Escaped Output] @date.beginning_of_week.us_format                                                           |
| [Escaped Output] link_to(">", :date => @date.next_week)                                                      |
| [Escaped Output] show_details(date, slot_num)                                                                |
| [Escaped Output] calendar(@date) do; [Escaped Output] show_details(date, slot_num); end                      |
| [Escaped Output] link_to("New booking", new_booking_path)                                                    |
| [Escaped Output] booking.day                                                                                 |
| [Escaped Output] booking.slot                                                                                |
| [Escaped Output] link_to("Show", booking)                                                                    |
| [Escaped Output] link_to("Edit", edit_booking_path(booking))                                                 |
| [Escaped Output] link_to("Destroy", booking, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Booking", new_booking_path)                                                    |
+--------------------------------------------------------------------------------------------------------------+

bookings/index.["BookingsController#index"]

+-----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                      |
+-----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                     |
| [Escaped Output] link_to("<", :date => (Date.parse(params[:date]) or Date.today).prev_week)                                 |
| [Escaped Output] (Date.parse(params[:date]) or Date.today).beginning_of_week.us_format                                      |
| [Escaped Output] link_to(">", :date => (Date.parse(params[:date]) or Date.today).next_week)                                 |
| [Escaped Output] show_details(date, slot_num)                                                                               |
| [Escaped Output] calendar((Date.parse(params[:date]) or Date.today)) do; [Escaped Output] show_details(date, slot_num); end |
| [Escaped Output] link_to("New booking", new_booking_path)                                                                   |
| [Escaped Output] Booking.new.day                                                                                            |
| [Escaped Output] Booking.new.slot                                                                                           |
| [Escaped Output] link_to("Show", Booking.new)                                                                               |
| [Escaped Output] link_to("Edit", edit_booking_path(Booking.new))                                                            |
| [Escaped Output] link_to("Destroy", Booking.new, :method => :delete, :data => ({ :confirm => "Are you sure?" }))            |
| [Escaped Output] link_to("New Booking", new_booking_path)                                                                   |
+-----------------------------------------------------------------------------------------------------------------------------+

bookings/new

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Back", bookings_path) |
+-------------------------------------------------+

bookings/new.["BookingsController#new"]

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Back", bookings_path) |
+-------------------------------------------------+

bookings/show

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] notice                                       |
| [Escaped Output] @booking.day                                 |
| [Escaped Output] @booking.slot                                |
| [Escaped Output] link_to("Edit", edit_booking_path(@booking)) |
| [Escaped Output] link_to("Back", bookings_path)               |
+---------------------------------------------------------------+

bookings/show.["BookingsController#show"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] notice                                                        |
| [Escaped Output] Booking.find(params[:id]).day                                 |
| [Escaped Output] Booking.find(params[:id]).slot                                |
| [Escaped Output] link_to("Edit", edit_booking_path(Booking.find(params[:id]))) |
| [Escaped Output] link_to("Back", bookings_path)                                |
+--------------------------------------------------------------------------------+

centrals/_teachers_signup

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] ProUser::Free_period                                                              |
| [Escaped Output] link_to("Try it Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------------+

centrals/_teachers_signup.["Template:centrals/teachers"]

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] ProUser::Free_period                                                              |
| [Escaped Output] link_to("Try it Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------------+

centrals/home

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] tour_central_path                                                                                                |
| [Escaped Output] FreePeriod                                                                                                       |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary", :id => "try-it-now")                 |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive"), signup_path) |
| [Escaped Output] FreePeriod                                                                                                       |
| [Escaped Output] FreePeriod                                                                                                       |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary")                                      |
+-----------------------------------------------------------------------------------------------------------------------------------+

centrals/home.["CentralsController#home"]

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] tour_central_path                                                                                                |
| [Escaped Output] 10                                                                                                               |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary", :id => "try-it-now")                 |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive"), signup_path) |
| [Escaped Output] 10                                                                                                               |
| [Escaped Output] 10                                                                                                               |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary")                                      |
+-----------------------------------------------------------------------------------------------------------------------------------+

centrals/pricing

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] upgrade_price("silver")                                                     |
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] upgrade_price("gold")                                                       |
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] upgrade_price("platinum")                                                   |
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] upgrade_from_premium_cost                                                   |
| [Escaped Output] render(partial => "pro_users/pricing", {})                                  |
| [Escaped Output] link_to("www.thegolfmentor.com/teacher", teacher_path, :target => "_blank") |
| [Escaped Output] help_path                                                                   |
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------+

centrals/pricing.["CentralsController#pricing"]

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] 10                                                                          |
| [Escaped Output] upgrade_price("silver")                                                     |
| [Escaped Output] 10                                                                          |
| [Escaped Output] upgrade_price("gold")                                                       |
| [Escaped Output] 10                                                                          |
| [Escaped Output] upgrade_price("platinum")                                                   |
| [Escaped Output] 10                                                                          |
| [Escaped Output] upgrade_from_premium_cost                                                   |
| [Escaped Output] render(partial => "pro_users/pricing", {})                                  |
| [Escaped Output] link_to("www.thegolfmentor.com/teacher", teacher_path, :target => "_blank") |
| [Escaped Output] help_path                                                                   |
| [Escaped Output] 10                                                                          |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------+

centrals/teachers

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] teachers_tour_central_path                                                                                               |
| [Escaped Output] ProUser::Free_period                                                                                                     |
| [Escaped Output] link_to("Try it Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                        |
| [Escaped Output] link_to(image_tag("circle_of_teaching.jpg", :alt => "Circle of Teaching\t", :id => "teaching_cycle"), new_pro_user_path) |
| [Escaped Output] ProUser::Free_period                                                                                                     |
| [Escaped Output] render(partial => "teachers_signup", {})                                                                                 |
+-------------------------------------------------------------------------------------------------------------------------------------------+

centrals/teachers.["CentralsController#teachers"]

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] teachers_tour_central_path                                                                                               |
| [Escaped Output] ProUser::Free_period                                                                                                     |
| [Escaped Output] link_to("Try it Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                        |
| [Escaped Output] link_to(image_tag("circle_of_teaching.jpg", :alt => "Circle of Teaching\t", :id => "teaching_cycle"), new_pro_user_path) |
| [Escaped Output] ProUser::Free_period                                                                                                     |
| [Escaped Output] render(partial => "teachers_signup", {})                                                                                 |
+-------------------------------------------------------------------------------------------------------------------------------------------+

centrals/teachers_tour

+-------------------------------------------------------------------------------------------------------------+
| Output                                                                                                      |
+-------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How does it work for a teacher?", "#teacher")                                     |
| [Escaped Output] link_to("How much extra time will this take?", "#extra_time")                              |
| [Escaped Output] link_to("How much does it cost?", "#cost")                                                 |
| [Escaped Output] link_to("Why do students improve quicker?", "#quicker")                                    |
| [Escaped Output] link_to("How does it work for students?", "#student")                                      |
| [Escaped Output] link_to("Can I try out the student's experience?", "#experience")                          |
| [Escaped Output] Account::Pro_Free_Period                                                                   |
| [Escaped Output] txt_if_gt_free_period                                                                      |
| [Escaped Output] render(partial => "pro_users/pricing", {})                                                 |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive") |
| [Escaped Output] link_to("here", users_path, :method => "post")                                             |
| [Escaped Output] render(partial => "teachers_signup", {})                                                   |
+-------------------------------------------------------------------------------------------------------------+

centrals/teachers_tour.["CentralsController#teachers_tour"]

+-------------------------------------------------------------------------------------------------------------+
| Output                                                                                                      |
+-------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How does it work for a teacher?", "#teacher")                                     |
| [Escaped Output] link_to("How much extra time will this take?", "#extra_time")                              |
| [Escaped Output] link_to("How much does it cost?", "#cost")                                                 |
| [Escaped Output] link_to("Why do students improve quicker?", "#quicker")                                    |
| [Escaped Output] link_to("How does it work for students?", "#student")                                      |
| [Escaped Output] link_to("Can I try out the student's experience?", "#experience")                          |
| [Escaped Output] Account::Pro_Free_Period                                                                   |
| [Escaped Output] txt_if_gt_free_period                                                                      |
| [Escaped Output] render(partial => "pro_users/pricing", {})                                                 |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive") |
| [Escaped Output] link_to("here", users_path, :method => "post")                                             |
| [Escaped Output] render(partial => "teachers_signup", {})                                                   |
+-------------------------------------------------------------------------------------------------------------+

centrals/tour

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] FreePeriod                                                                  |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------+

centrals/tour.["CentralsController#tour"]

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] 10                                                                          |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary") |
+----------------------------------------------------------------------------------------------+

challenges/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@challenge.errors.count, "error")                                                                                              >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] f.label(:level)                                                                                                                          >>
| [Escaped Output] f.number_field(:level)                                                                                                                   >>
| [Escaped Output] f.label(:shot)                                                                                                                           >>
| [Escaped Output] f.text_field(:shot)                                                                                                                      >>
| [Escaped Output] f.label(:completion_date)                                                                                                                >>
| [Escaped Output] f.datetime_select(:completion_date)                                                                                                      >>
| [Escaped Output] f.label(:status)                                                                                                                         >>
| [Escaped Output] f.text_field(:status)                                                                                                                    >>
| [Escaped Output] f.label(:description)                                                                                                                    >>
| [Escaped Output] f.text_area(:description)                                                                                                                >>
| [Escaped Output] f.submit                                                                                                                                 >>
| [Escaped Output] form_for(@challenge) do; if @challenge.errors.any? then; [Escaped Output] pluralize(@challenge.errors.count, "error"); @challenge.errors.>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

challenges/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/current_challenge", {})                                                                                        >>
| [Escaped Output] radio_button_tag(:choice, "Completed", false)                                                                                            >>
| [Escaped Output] label_tag(:choice_completed, "I have finished this challenge")                                                                           >>
| [Escaped Output] radio_button_tag(:choice, "Deferred", false)                                                                                             >>
| [Escaped Output] label_tag(:choice_deferred, "I want to try a different challenge")                                                                       >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag(@challenge, :method => :put) do; [Escaped Output] radio_button_tag(:choice, "Completed", false);[Escaped Output] label_tag(:choi>>
| [Escaped Output] tutorial_information.html_safe                                                                                                           >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")                                    >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

challenges/edit.["ChallengesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/current_challenge", {})                                                                                        >>
| [Escaped Output] radio_button_tag(:choice, "Completed", false)                                                                                            >>
| [Escaped Output] label_tag(:choice_completed, "I have finished this challenge")                                                                           >>
| [Escaped Output] radio_button_tag(:choice, "Deferred", false)                                                                                             >>
| [Escaped Output] label_tag(:choice_deferred, "I want to try a different challenge")                                                                       >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag(Challenge.find(params[:id]), :method => :put) do; [Escaped Output] radio_button_tag(:choice, "Completed", false);[Escaped Output>>
| [Escaped Output] tutorial_information.html_safe                                                                                                           >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")                                    >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

challenges/index

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] challenge.level                                                                               |
| [Escaped Output] challenge.shot                                                                                |
| [Escaped Output] challenge.completion_date                                                                     |
| [Escaped Output] challenge.status                                                                              |
| [Escaped Output] challenge.description                                                                         |
| [Escaped Output] link_to("Show", challenge)                                                                    |
| [Escaped Output] link_to("Edit", edit_challenge_path(challenge))                                               |
| [Escaped Output] link_to("Destroy", challenge, :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Challenge", new_challenge_path)                                                  |
+----------------------------------------------------------------------------------------------------------------+

challenges/new

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("here", (focusHelp_path + "#faq"))                                                            |
| [Escaped Output] render(partial => "shared/challenges_text", {})                                                       |
| [Escaped Output] form_tag(@challenge) do; [Escaped Output] render(partial => "shared/challenges_text", {}); end        |
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                    |
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                              |
+------------------------------------------------------------------------------------------------------------------------+

challenges/new.["ChallengesController#create"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("here", (focusHelp_path + "#faq"))                                                            |
| [Escaped Output] render(partial => "shared/challenges_text", {})                                                       |
| [Escaped Output] form_tag(@challenge) do; [Escaped Output] render(partial => "shared/challenges_text", {}); end        |
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                    |
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                              |
+------------------------------------------------------------------------------------------------------------------------+

challenges/new.["ChallengesController#new"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("here", (focusHelp_path + "#faq"))                                                            |
| [Escaped Output] render(partial => "shared/challenges_text", {})                                                       |
| [Escaped Output] form_tag(Challenge.new) do; [Escaped Output] render(partial => "shared/challenges_text", {}); end     |
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                    |
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                              |
+------------------------------------------------------------------------------------------------------------------------+

challenges/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/current_challenge", {})                                                                                        >>
| [Escaped Output] tutorial_information.html_safe                                                                                                           >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")                                    >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link");[Escaped Output] link_to("Challenge>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

challenges/show.["ChallengesController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/current_challenge", {})                                                                                        >>
| [Escaped Output] tutorial_information.html_safe                                                                                                           >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")                                    >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link");[Escaped Output] link_to("Challenge>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

challenges/show_sample

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/current_challenge", {})                           |
| [Escaped Output] tutorial_information.html_safe                                              |
| [Escaped Output] link_to("Next Screen Shot", reportSample_path, :class => "btn btn-primary") |
+----------------------------------------------------------------------------------------------+

challenges/show_sample.["ChallengesController#show_sample"]

+----------------------------------------------------------------------------------------------+
| Output                                                                                       |
+----------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/current_challenge", {})                           |
| [Escaped Output] tutorial_information.html_safe                                              |
| [Escaped Output] link_to("Next Screen Shot", reportSample_path, :class => "btn btn-primary") |
+----------------------------------------------------------------------------------------------+

clubs/_fields

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] f.input(:shape, :label => "Type", :collection => (Club::Shapes)) |
| [Escaped Output] f.input(:number, :collection => Club.numbers)                    |
| [Escaped Output] f.input(:distance, :required => true)                            |
| [Escaped Output] f.hidden_field(:units, :value => (@units))                       |
+-----------------------------------------------------------------------------------+

clubs/_fields.["ClubsController#create", "Template:clubs/new", "Template:clubs/_form"]

+-------------------------------------------------------------------------------------------------------+
| Output                                                                                                |
+-------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:shape, :label => "Type", :collection => (["wood", "hybrid", "iron"]))       |
| [Escaped Output] f.input(:number, :collection => Club.numbers)                                        |
| [Escaped Output] f.input(:distance, :required => true)                                                |
| [Escaped Output] f.hidden_field(:units, :value => ((Club.new(params[:club]).units.to_sym or :yards))) |
+-------------------------------------------------------------------------------------------------------+

clubs/_fields.["ClubsController#new", "Template:clubs/new", "Template:clubs/_form"]

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:shape, :label => "Type", :collection => (["wood", "hybrid", "iron"])) |
| [Escaped Output] f.input(:number, :collection => Club.numbers)                                  |
| [Escaped Output] f.input(:distance, :required => true)                                          |
| [Escaped Output] f.hidden_field(:units, :value => calc_params_units)                            |
+-------------------------------------------------------------------------------------------------+

clubs/_fields.["Template:clubs/_form"]

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] f.input(:shape, :label => "Type", :collection => (Club::Shapes)) |
| [Escaped Output] f.input(:number, :collection => Club.numbers)                    |
| [Escaped Output] f.input(:distance, :required => true)                            |
| [Escaped Output] f.hidden_field(:units, :value => (@units))                       |
+-----------------------------------------------------------------------------------+

clubs/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(@club) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_form.["ClubsController#create", "Template:clubs/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(Club.new(params[:club])) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_form.["ClubsController#edit", "Template:clubs/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(Club.find(params[:id])) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_form.["ClubsController#new", "Template:clubs/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(Club.new) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });[Escaped Ou>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_form.["Template:clubs/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(@club) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_modal_new_user

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FreePeriod                                                                                                                               >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:name, "Name")                                                                                                                   >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:email, "Email")                                                                                                                 >>
| [Escaped Output] f.email_field(:email)                                                                                                                    >>
| [Escaped Output] f.label(:password)                                                                                                                       >>
| [Escaped Output] f.password_field(:password)                                                                                                              >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] f.submit("Join Now", :class => "btn btn-cta btn-cta-primary")                                                                            >>
| [Escaped Output] form_for(@user, :url => users_path, :html => ({ :method => :post })) do; [Escaped Output] render(partial => "shared/error_messages", { :o>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_modal_new_user.["Template:clubs/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] 10                                                                                                                                       >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:name, "Name")                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email, "Email")                                                                                                   >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :class => "btn btn-cta btn-cta-primary")                                                              >>
| [Escaped Output] form_for(@user, :url => users_path, :html => ({ :method => :post })) do; [Escaped Output] render(partial => "shared/error_messages", { :o>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_table

+-----------------------------------------------+
| Output                                        |
+-----------------------------------------------+
| [Escaped Output] @units                       |
| [Escaped Output] @units                       |
| [Escaped Output] convert_club(row[:name])     |
| [Escaped Output] loft_duo(row[:lofts])        |
| [Escaped Output] distance_trio(row[:males])   |
| [Escaped Output] distance_trio(row[:females]) |
+-----------------------------------------------+

clubs/_table.["ClubsController#club_distances", "Template:clubs/club_distances"]

+-----------------------------------------------------+
| Output                                              |
+-----------------------------------------------------+
| [Escaped Output] (params[:units] or "yards").to_sym |
| [Escaped Output] (params[:units] or "yards").to_sym |
| [Escaped Output] convert_club(row[:name])           |
| [Escaped Output] loft_duo(row[:lofts])              |
| [Escaped Output] distance_trio(row[:males])         |
| [Escaped Output] distance_trio(row[:females])       |
+-----------------------------------------------------+

clubs/_table.["ClubsController#hybrid_distances", "Template:clubs/hybrid_distances"]

+-----------------------------------------------------+
| Output                                              |
+-----------------------------------------------------+
| [Escaped Output] (params[:units] or "yards").to_sym |
| [Escaped Output] (params[:units] or "yards").to_sym |
| [Escaped Output] convert_club(row[:name])           |
| [Escaped Output] loft_duo(row[:lofts])              |
| [Escaped Output] distance_trio(row[:males])         |
| [Escaped Output] distance_trio(row[:females])       |
+-----------------------------------------------------+

clubs/_table.["Template:clubs/club_distances"]

+-----------------------------------------------+
| Output                                        |
+-----------------------------------------------+
| [Escaped Output] @units                       |
| [Escaped Output] @units                       |
| [Escaped Output] convert_club(row[:name])     |
| [Escaped Output] loft_duo(row[:lofts])        |
| [Escaped Output] distance_trio(row[:males])   |
| [Escaped Output] distance_trio(row[:females]) |
+-----------------------------------------------+

clubs/_toggle_units

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Yards", url_for(params.merge(:units => :yards, :anchor => "club_table")), :class => ("btn-sm btn-info toggle_link_left #{active_>>
| [Escaped Output] link_to("Metres", url_for(params.merge(:units => :metres, :anchor => "club_table")), :class => ("btn-sm btn-info round_right toggle_link_>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/_toggle_units.["ClubsController#club_distances", "Template:clubs/club_distances"]

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Yards", url_for(params), :class => ("btn-sm btn-info toggle_link_left #{active_yards}"))                |
| [Escaped Output] link_to("Metres", url_for(params), :class => ("btn-sm btn-info round_right toggle_link_right #{active_metres}")) |
+-----------------------------------------------------------------------------------------------------------------------------------+

clubs/_toggle_units.["Template:clubs/club_distances"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Yards", url_for(params.merge(:units => :yards, :anchor => "club_table")), :class => ("btn-sm btn-info toggle_link_left #{active_>>
| [Escaped Output] link_to("Metres", url_for(params.merge(:units => :metres, :anchor => "club_table")), :class => ("btn-sm btn-info round_right toggle_link_>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/club_distances

+---------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                          |
+---------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @units                                                                                                         |
| [Escaped Output] h1_insert("Golf Club Distances")                                                                               |
| [Escaped Output] link_to("here", club_distance_calculator_path(:units => (@units)))                                             |
| [Escaped Output] distance_units(@units)                                                                                         |
| [Escaped Output] render(partial => "toggle_units", {})                                                                          |
| [Escaped Output] render(partial => "table", {})                                                                                 |
| [Escaped Output] link_to("Display Hybrid Distances", hybrids_path(:units => (@units)), :class => "btn btn-primary ebm10")       |
| [Escaped Output] link_to("join now", signup_path)                                                                               |
| [Escaped Output] FreePeriod                                                                                                     |
| [Escaped Output] link_to("distance calculator", club_distance_calculator_path(:units => (@units)))                              |
| [Escaped Output] link_to("hybrid distances", hybrids_path(:units => (@units)))                                                  |
| [Escaped Output] link_to("Join Now", signup_path(:referral => "club_distances"), :class => "btn btn-cta btn-cta-primary")       |
| [Escaped Output] link_to("Distance Calculator", club_distance_calculator_path(:units => (@units)), :class => "btn btn-primary") |
| [Escaped Output] link_to("Hybrid Distances", hybrids_path(:units => (@units)), :class => "btn btn-primary")                     |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                          |
| [Escaped Output] render(partial => "shared/sidebars/standard_core_ad", { :object => (@sidebar) })                               |
+---------------------------------------------------------------------------------------------------------------------------------+

clubs/club_distances.["ClubsController#club_distances"]

+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] (params[:units] or "yards").to_sym                                                                                                       |
| [Escaped Output] h1_insert("Golf Club Distances")                                                                                                         |
| [Escaped Output] link_to("here", club_distance_calculator_path(:units => (params[:units] or "yards").to_sym))                                             |
| [Escaped Output] distance_units((params[:units] or "yards").to_sym)                                                                                       |
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    |
| [Escaped Output] render(partial => "table", {})                                                                                                           |
| [Escaped Output] link_to("Display Hybrid Distances", hybrids_path(:units => (params[:units] or "yards").to_sym), :class => "btn btn-primary ebm10")       |
| [Escaped Output] link_to("join now", signup_path)                                                                                                         |
| [Escaped Output] 10                                                                                                                                       |
| [Escaped Output] link_to("distance calculator", club_distance_calculator_path(:units => (params[:units] or "yards").to_sym))                              |
| [Escaped Output] link_to("hybrid distances", hybrids_path(:units => (params[:units] or "yards").to_sym))                                                  |
| [Escaped Output] link_to("Join Now", signup_path(:referral => "club_distances"), :class => "btn btn-cta btn-cta-primary")                                 |
| [Escaped Output] link_to("Distance Calculator", club_distance_calculator_path(:units => (params[:units] or "yards").to_sym), :class => "btn btn-primary") |
| [Escaped Output] link_to("Hybrid Distances", hybrids_path(:units => (params[:units] or "yards").to_sym), :class => "btn btn-primary")                     |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    |
| [Escaped Output] render(partial => "shared/sidebars/standard_core_ad", { :object => (@sidebar) })                                                         |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+

clubs/edit

+---------------------------------------------------------------------------------------------------------+
| Output                                                                                                  |
+---------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                 |
| [Escaped Output] @units                                                                                 |
| [Escaped Output] render(partial => "form", {})                                                          |
| [Escaped Output] render(partial => "modal_new_user", {})                                                |
| [Escaped Output] content_for(:modals) do; [Escaped Output] render(partial => "modal_new_user", {}); end |
+---------------------------------------------------------------------------------------------------------+

clubs/edit.["ClubsController#edit"]

+---------------------------------------------------------------------------------------------------------+
| Output                                                                                                  |
+---------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                 |
| [Escaped Output] calc_params_units                                                                      |
| [Escaped Output] render(partial => "form", {})                                                          |
| [Escaped Output] render(partial => "modal_new_user", {})                                                |
| [Escaped Output] content_for(:modals) do; [Escaped Output] render(partial => "modal_new_user", {}); end |
+---------------------------------------------------------------------------------------------------------+

clubs/hybrid_distances

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] distance_units(@units)                                                                                                                   >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] render(partial => "table", {})                                                                                                           >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});sidebar ||= nil;[Escaped Output] render(p>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/hybrid_distances.["ClubsController#hybrid_distances"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] distance_units((params[:units] or "yards").to_sym)                                                                                       >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] render(partial => "table", {})                                                                                                           >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});sidebar ||= nil;[Escaped Output] render(p>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/index

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] csrf_meta_tags                                                                                                                           >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] csrf_meta_tags; end                                                                              >>
| [Escaped Output] distance_units(@units)                                                                                                                   >>
| [Escaped Output] @speed.round                                                                                                                             >>
| [Escaped Output] speed_units(@units)                                                                                                                      >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] club.shape.capitalize                                                                                                                    >>
| [Escaped Output] club.number                                                                                                                              >>
| [Escaped Output] club.description                                                                                                                         >>
| [Escaped Output] club.loft                                                                                                                                >>
| [Escaped Output] club.distance.round                                                                                                                      >>
| [Escaped Output] link_to("Edit", edit_club_path(club))                                                                                                    >>
| [Escaped Output] link_to("Reset", destroy_all_clubs_path, :method => :delete, :data => ({ :confirm => "This will reset all your clubs. Are you sure?" }), >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});sidebar ||= nil;[Escaped Output] render(p>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/index.["ClubsController#index"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] csrf_meta_tags                                                                                                                           >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] csrf_meta_tags; end                                                                              >>
| [Escaped Output] distance_units(calc_params_units)                                                                                                        >>
| [Escaped Output] @speed.round                                                                                                                             >>
| [Escaped Output] speed_units(calc_params_units)                                                                                                           >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] club.shape.capitalize                                                                                                                    >>
| [Escaped Output] club.number                                                                                                                              >>
| [Escaped Output] club.description                                                                                                                         >>
| [Escaped Output] club.loft                                                                                                                                >>
| [Escaped Output] club.distance.round                                                                                                                      >>
| [Escaped Output] link_to("Edit", edit_club_path(club))                                                                                                    >>
| [Escaped Output] link_to("Reset", destroy_all_clubs_path, :method => :delete, :data => ({ :confirm => "This will reset all your clubs. Are you sure?" }), >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});sidebar ||= nil;[Escaped Output] render(p>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] @units                                                                                                                                   >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] render(partial => "form", {})                                                                                                            >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/new.["ClubsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] (Club.new(params[:club]).units.to_sym or :yards)                                                                                         >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] render(partial => "form", {})                                                                                                            >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/new.["ClubsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] calc_params_units                                                                                                                        >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] render(partial => "form", {})                                                                                                            >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/new_speed

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] @units                                                                                                                                   >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(@club, :url => create_speed_clubs_path, :method => :post) do; [Escaped Output] f.error_notification;[Escaped Output] rend>>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/new_speed.["ClubsController#new_speed"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] calc_params_units                                                                                                                        >>
| [Escaped Output] render(partial => "toggle_units", {})                                                                                                    >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:button, "Update", :class => "btn btn-primary", :name => "commit", :data => spin_when_loading)                                  >>
| [Escaped Output] simple_form_for(Club.new, :url => create_speed_clubs_path, :method => :post) do; [Escaped Output] f.error_notification;[Escaped Output] r>>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

clubs/show

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] notice                                 |
| [Escaped Output] @club.description                      |
| [Escaped Output] @club.shape                            |
| [Escaped Output] @club.loft                             |
| [Escaped Output] @club.distance                         |
| [Escaped Output] @club.user                             |
| [Escaped Output] link_to("Edit", edit_club_path(@club)) |
| [Escaped Output] link_to("Back", clubs_path)            |
+---------------------------------------------------------+

contacts/_status_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] c.input(:status, :collection => contact_status_list, :required => false, :include_blank => false, :input_html => ({ :id => ("contact_sele>>
| [Escaped Output] c.submit("Update", :id => ("contact_submit_#{contact.id}"))                                                                              >>
| [Escaped Output] simple_form_for(contact, :url => update_status_contact_path(contact), :html => ({ :class => "form-inline", :id => ("form_#{contact.id}") >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/_status_form.["Template:pro_users/_contacts"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] c.input(:status, :collection => contact_status_list, :required => false, :include_blank => false, :input_html => ({ :id => ("contact_sele>>
| [Escaped Output] c.submit("Update", :id => ("contact_submit_#{contact.id}"))                                                                              >>
| [Escaped Output] simple_form_for(contact, :url => update_status_contact_path(contact), :html => ({ :class => "form-inline", :id => ("form_#{contact.id}") >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/edit

+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact) }) })                                              |
| [Escaped Output] form_for(@contact) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact) }) }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                      |
| [Escaped Output] link_to("Help - Contacts", help_details_path, :class => "side_menu_link")                                                             |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------+

contacts/edit.["ContactsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => current_user.contacts.find_by_id(params[:id]) }) })>>
| [Escaped Output] form_for(current_user.contacts.find_by_id(params[:id])) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => Fo>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help - Contacts", help_details_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/new

+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                 |
+--------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact) }) })                                              |
| [Escaped Output] form_for(@contact) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact) }) }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                      |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------------------------+

contacts/new.["ContactsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => current_user.contacts.build(params[:contact]) }) })>>
| [Escaped Output] form_for(current_user.contacts.build(params[:contact])) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => Fo>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/new.["ContactsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => Contact.new }) })                                  >>
| [Escaped Output] form_for(Contact.new) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => Contact.>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact), :disabled => true }) })                              >>
| [Escaped Output] form_for(@contact) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@contact), :disabled => >>
| [Escaped Output] link_to("Edit Contact", edit_contact_path(@contact), :class => "side_menu_link")                                                         >>
| [Escaped Output] link_to("Convert to Student", new_student_path(:contact_id => (@contact)), :class => "side_menu_link")                                   >>
| [Escaped Output] link_to("Delete Contact", @contact, :method => :delete, :data => ({ :confirm => ("Delete #{@contact.name}?") }), :class => "side_menu_lin>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

contacts/show.["ContactsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => current_user.contacts.find_by_id(params[:id]), :dis>>
| [Escaped Output] form_for(current_user.contacts.find_by_id(params[:id])) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => Fo>>
| [Escaped Output] link_to("Edit Contact", edit_contact_path(current_user.contacts.find_by_id(params[:id])), :class => "side_menu_link")                    >>
| [Escaped Output] link_to("Convert to Student", new_student_path(:contact_id => current_user.contacts.find_by_id(params[:id])), :class => "side_menu_link")>>
| [Escaped Output] link_to("Delete Contact", current_user.contacts.find_by_id(params[:id]), :method => :delete, :data => ({ :confirm => ("Delete #{current_u>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

coupons/help

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] current_user.name                                                       |
| [Escaped Output] @code                                                                   |
| [Escaped Output] link_to("here")                                                         |
| [Escaped Output] link_to("Back", send_from_pro_coupons_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")        |
+------------------------------------------------------------------------------------------+

coupons/help.["CouponsController#help"]

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] current_user.name                                                       |
| [Escaped Output] @code                                                                   |
| [Escaped Output] link_to("here")                                                         |
| [Escaped Output] link_to("Back", send_from_pro_coupons_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")        |
+------------------------------------------------------------------------------------------+

coupons/send_from_pro

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] Account::Pro_Free_Period                                                                                                                 >>
| [Escaped Output] link_to("Help", help_coupons_path)                                                                                                       >>
| [Escaped Output] pluralize(@coupon.errors.count, "error")                                                                                                 >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] f.label(:name, "First Name")                                                                                                             >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:email)                                                                                                                          >>
| [Escaped Output] f.text_field(:email)                                                                                                                     >>
| [Escaped Output] f.submit("Send Coupon", :class => "wider_button round")                                                                                  >>
| [Escaped Output] form_for(@coupon, :url => send_from_pro_create_coupons_path) do; if @coupon.errors.any? then; [Escaped Output] pluralize(@coupon.errors.c>>
| [Escaped Output] link_to("Help", help_coupons_path, :title => "help_send_coupon", :class => "side_menu_link")                                             >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

coupons/send_from_pro.["CouponsController#send_from_pro"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] Account::Pro_Free_Period                                                                                                                 >>
| [Escaped Output] link_to("Help", help_coupons_path)                                                                                                       >>
| [Escaped Output] pluralize(Coupon.new.errors.count, "error")                                                                                              >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name, "First Name")                                                                                               >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit("Send Coupon", :class => "wider_button round")                                                                    >>
| [Escaped Output] form_for(Coupon.new, :url => send_from_pro_create_coupons_path) do; if Coupon.new.errors.any? then; [Escaped Output] pluralize(Coupon.new>>
| [Escaped Output] link_to("Help", help_coupons_path, :title => "help_send_coupon", :class => "side_menu_link")                                             >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

coupons/send_from_pro.["CouponsController#send_from_pro_create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] Account::Pro_Free_Period                                                                                                                 >>
| [Escaped Output] link_to("Help", help_coupons_path)                                                                                                       >>
| [Escaped Output] pluralize(Coupon.new(params[:coupon]).errors.count, "error")                                                                             >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name, "First Name")                                                                                               >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit("Send Coupon", :class => "wider_button round")                                                                    >>
| [Escaped Output] form_for(Coupon.new(params[:coupon]), :url => send_from_pro_create_coupons_path) do; if Coupon.new(params[:coupon]).errors.any? then; [Es>>
| [Escaped Output] link_to("Help", help_coupons_path, :title => "help_send_coupon", :class => "side_menu_link")                                             >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

details/_fields

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(detail.errors.count, "error")                                                                  |
| [Escaped Output] msg                                                                                                      |
| [Escaped Output] f.label(:first_name)                                                                                     |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => disabled)                                            |
| [Escaped Output] f.label(:family_name)                                                                                    |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => disabled)                                           |
| [Escaped Output] f.label(:club)                                                                                           |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => disabled) |
| [Escaped Output] f.label(:telephone)                                                                                      |
| [Escaped Output] f.text_field(:telephone, :disabled => disabled)                                                          |
| [Escaped Output] f.label(:email)                                                                                          |
| [Escaped Output] f.text_field(:email, :disabled => disabled)                                                              |
| [Escaped Output] f.label(:status)                                                                                         |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => disabled)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                           |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => disabled)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                           |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => disabled)                                  |
| [Escaped Output] f.label(:city)                                                                                           |
| [Escaped Output] f.text_field(:city, :disabled => disabled)                                                               |
| [Escaped Output] f.label(:state)                                                                                          |
| [Escaped Output] f.text_field(:state, :disabled => disabled)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                       |
| [Escaped Output] f.text_field(:zip_code, :disabled => disabled)                                                           |
| [Escaped Output] f.label(:country)                                                                                        |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                      |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                          |
+---------------------------------------------------------------------------------------------------------------------------+

details/_fields.["ContactsController#create", "Template:contacts/new"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(current_user.contacts.build(params[:contact]).errors.count, "error")                        |
| [Escaped Output] msg                                                                                                   |
| [Escaped Output] f.label(:first_name)                                                                                  |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                            |
| [Escaped Output] f.label(:family_name)                                                                                 |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                           |
| [Escaped Output] f.label(:club)                                                                                        |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => false) |
| [Escaped Output] f.label(:telephone)                                                                                   |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                          |
| [Escaped Output] f.label(:email)                                                                                       |
| [Escaped Output] f.text_field(:email, :disabled => false)                                                              |
| [Escaped Output] f.label(:status)                                                                                      |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                        |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                        |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:city)                                                                                        |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                               |
| [Escaped Output] f.label(:state)                                                                                       |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                    |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                           |
| [Escaped Output] f.label(:country)                                                                                     |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                   |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                       |
+------------------------------------------------------------------------------------------------------------------------+

details/_fields.["ContactsController#new", "Template:contacts/new"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(Contact.new.errors.count, "error")                                                          |
| [Escaped Output] msg                                                                                                   |
| [Escaped Output] f.label(:first_name)                                                                                  |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                            |
| [Escaped Output] f.label(:family_name)                                                                                 |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                           |
| [Escaped Output] f.label(:club)                                                                                        |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => false) |
| [Escaped Output] f.label(:telephone)                                                                                   |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                          |
| [Escaped Output] f.label(:email)                                                                                       |
| [Escaped Output] f.text_field(:email, :disabled => false)                                                              |
| [Escaped Output] f.label(:status)                                                                                      |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                        |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                        |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:city)                                                                                        |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                               |
| [Escaped Output] f.label(:state)                                                                                       |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                    |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                           |
| [Escaped Output] f.label(:country)                                                                                     |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                   |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                       |
+------------------------------------------------------------------------------------------------------------------------+

details/_fields.["ContactsController#show", "Template:contacts/show"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(current_user.contacts.find_by_id(params[:id]).errors.count, "error")                        |
| [Escaped Output] msg                                                                                                   |
| [Escaped Output] f.label(:first_name)                                                                                  |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                            |
| [Escaped Output] f.label(:family_name)                                                                                 |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                           |
| [Escaped Output] f.label(:club)                                                                                        |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => false) |
| [Escaped Output] f.label(:telephone)                                                                                   |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                          |
| [Escaped Output] f.label(:email)                                                                                       |
| [Escaped Output] f.text_field(:email, :disabled => false)                                                              |
| [Escaped Output] f.label(:status)                                                                                      |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                        |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                        |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:city)                                                                                        |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                               |
| [Escaped Output] f.label(:state)                                                                                       |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                    |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                           |
| [Escaped Output] f.label(:country)                                                                                     |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                   |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                       |
+------------------------------------------------------------------------------------------------------------------------+

details/_fields.["DetailsController#show", "Template:details/show"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(Detail.find_by_id(params[:id]).errors.count, "error")                                       |
| [Escaped Output] (Unresolved Model).new                                                                                |
| [Escaped Output] f.label(:first_name)                                                                                  |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                            |
| [Escaped Output] f.label(:family_name)                                                                                 |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                           |
| [Escaped Output] f.label(:club)                                                                                        |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => false) |
| [Escaped Output] f.label(:telephone)                                                                                   |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                          |
| [Escaped Output] f.label(:email)                                                                                       |
| [Escaped Output] f.text_field(:email, :disabled => false)                                                              |
| [Escaped Output] f.label(:status)                                                                                      |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                        |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                        |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:city)                                                                                        |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                               |
| [Escaped Output] f.label(:state)                                                                                       |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                    |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                           |
| [Escaped Output] f.label(:country)                                                                                     |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                   |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                       |
+------------------------------------------------------------------------------------------------------------------------+

details/_fields.["Template:contacts/edit"]

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(@contact.errors.count, "error")                                                             |
| [Escaped Output] msg                                                                                                   |
| [Escaped Output] f.label(:first_name)                                                                                  |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                            |
| [Escaped Output] f.label(:family_name)                                                                                 |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                           |
| [Escaped Output] f.label(:club)                                                                                        |
| [Escaped Output] f.text_field(:club, :size => 40, :placeholder => "Golf Club to which you belong", :disabled => false) |
| [Escaped Output] f.label(:telephone)                                                                                   |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                          |
| [Escaped Output] f.label(:email)                                                                                       |
| [Escaped Output] f.text_field(:email, :disabled => false)                                                              |
| [Escaped Output] f.label(:status)                                                                                      |
| [Escaped Output] f.select(:status, contact_status_list, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_1)                                                                        |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:street_information_2)                                                                        |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                  |
| [Escaped Output] f.label(:city)                                                                                        |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                               |
| [Escaped Output] f.label(:state)                                                                                       |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                              |
| [Escaped Output] f.label(:zip_code)                                                                                    |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                           |
| [Escaped Output] f.label(:country)                                                                                     |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                   |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                       |
+------------------------------------------------------------------------------------------------------------------------+

details/edit

+------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                               |
+------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                                              |
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@detail) }) })                                             |
| [Escaped Output] form_for(@detail) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@detail) }) }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                    |
| [Escaped Output] link_to("Help - Details", help_details_path, :class => "side_menu_link")                                                            |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------------------------+

details/edit.["DetailsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => Detail.find_by_id(params[:id]) }) })               >>
| [Escaped Output] form_for(Detail.find_by_id(params[:id])) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help - Details", help_details_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

details/help

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
+-----------------------------------------------------------------------------------+

details/help.["DetailsController#help"]

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
+-----------------------------------------------------------------------------------+

details/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@detail), :disabled => true }) })                               >>
| [Escaped Output] form_for(@detail) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => f, :detail => (@detail), :disabled => tr>>
| [Escaped Output] link_to("Edit Details", edit_detail_path(@user.detail), :class => "side_menu_link")                                                      >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help - Details", help_details_path, :class => "side_menu_link")                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

details/show.["DetailsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, :detail => Detail.find_by_id(params[:id]), :disabled => true }>>
| [Escaped Output] form_for(Detail.find_by_id(params[:id])) do; [Escaped Output] render(partial => "details/fields", { :locals => ({ :f => FormBuilder.new, >>
| [Escaped Output] link_to("Edit Details", edit_detail_path(Detail.find_by_id(params[:id]).user.detail), :class => "side_menu_link")                        >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help - Details", help_details_path, :class => "side_menu_link")                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/_drill

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @drill.name                                                                                                                              >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] sanitize(@drill.description, :tags => (["p", "strong", "em", "a", "ul", "li", "ol", "h1", "h2", "h3", "h4", "h5", "h6", "sub", "sup", "co>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/_drill.["DrillsController#show", "Template:drills/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] current_user.drills.find_by_id(params[:id]).name                                                                                         >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] sanitize(current_user.drills.find_by_id(params[:id]).description, :tags => (["p", "strong", "em", "a", "ul", "li", "ol", "h1", "h2", "h3">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/_drill.["Template:drills/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @drill.name                                                                                                                              >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] sanitize(@drill.description, :tags => (["p", "strong", "em", "a", "ul", "li", "ol", "h1", "h2", "h3", "h4", "h5", "h6", "sub", "sup", "co>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/_drills

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] "<th></th>".html_safe                                                                                                                  |
| [Escaped Output] drill.name                                                                                                                             |
| [Escaped Output] datePretty(drill.created_at)                                                                                                           |
| [Escaped Output] link_to("Show", drill_path(drill), :class => "btn btn-primary btn-xs")                                                                 |
| [Escaped Output] link_to("Edit", edit_drill_path(drill), :class => "btn btn-primary btn-xs")                                                            |
| [Escaped Output] link_to("Delete", drill, :method => :delete, :data => ({ :confirm => ("Delete #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/_drills.["DrillsController#index", "Template:drills/index"]

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] "<th></th>".html_safe                                                                                                                  |
| [Escaped Output] drill.name                                                                                                                             |
| [Escaped Output] datePretty(drill.created_at)                                                                                                           |
| [Escaped Output] link_to("Show", drill_path(drill), :class => "btn btn-primary btn-xs")                                                                 |
| [Escaped Output] link_to("Edit", edit_drill_path(drill), :class => "btn btn-primary btn-xs")                                                            |
| [Escaped Output] link_to("Delete", drill, :method => :delete, :data => ({ :confirm => ("Delete #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/_drills.["Template:drills/index"]

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] "<th></th>".html_safe                                                                                                                  |
| [Escaped Output] drill.name                                                                                                                             |
| [Escaped Output] datePretty(drill.created_at)                                                                                                           |
| [Escaped Output] link_to("Show", drill_path(drill), :class => "btn btn-primary btn-xs")                                                                 |
| [Escaped Output] link_to("Edit", edit_drill_path(drill), :class => "btn btn-primary btn-xs")                                                            |
| [Escaped Output] link_to("Delete", drill, :method => :delete, :data => ({ :confirm => ("Delete #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/_fields

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] tinymce_assets                                                                                                                           >>
| [Escaped Output] f.input(:name, :placeholder => "Drill Name", :disabled => disabled)                                                                      >>
| [Escaped Output] f.input(:description, :placeholder => "Drill Description", :input_html => ({ :class => "tinymce", :rows => 15, :cols => 40 }), :disabled >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary", :onclick => "tempDisableBeforeUnload = true;")                                  >>
| [Escaped Output] tinymce(:drill)                                                                                                                          >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/_fields.["Template:drills/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] tinymce_assets                                                                                                                           >>
| [Escaped Output] f.input(:name, :placeholder => "Drill Name", :disabled => false)                                                                         >>
| [Escaped Output] f.input(:description, :placeholder => "Drill Description", :input_html => ({ :class => "tinymce", :rows => 15, :cols => 40 }), :disabled >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary", :onclick => "tempDisableBeforeUnload = true;")                                  >>
| [Escaped Output] tinymce(:drill)                                                                                                                          >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/edit

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                               |
| [Escaped Output] simple_form_for(@drill, :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fields", { :f => f }); end |
| [Escaped Output] link_to("Drills", drills_path, :class => "side_menu_link")                                                                             |
| [Escaped Output] link_to("Show", drill_path(@drill), :class => "side_menu_link")                                                                        |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                     |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/edit.["DrillsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for(current_user.drills.find_by_id(params[:id]), :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(part>>
| [Escaped Output] link_to("Drills", drills_path, :class => "side_menu_link")                                                                               >>
| [Escaped Output] link_to("Show", drill_path(current_user.drills.find_by_id(params[:id])), :class => "side_menu_link")                                     >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/help

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("My Drills", drills_path)                                |
| [Escaped Output] link_to("New Drill", new_drill_path)                             |
| [Escaped Output] link_to("My Drills")                                             |
| [Escaped Output] link_to("Dashboard", dashboard_path)                             |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link") |
| [Escaped Output] link_to("My Drills", drills_path, :class => "side_menu_link")    |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")         |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
+-----------------------------------------------------------------------------------+

drills/help.["DrillsController#help"]

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("My Drills", drills_path)                                |
| [Escaped Output] link_to("New Drill", new_drill_path)                             |
| [Escaped Output] link_to("My Drills")                                             |
| [Escaped Output] link_to("Dashboard", dashboard_path)                             |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link") |
| [Escaped Output] link_to("My Drills", drills_path, :class => "side_menu_link")    |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")         |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")               |
+-----------------------------------------------------------------------------------+

drills/index

+-----------------------------------------------------------------------------------------+
| Output                                                                                  |
+-----------------------------------------------------------------------------------------+
| [Escaped Output] content_for(:meta) do; [ignored]; end                                  |
| [Escaped Output] render(partial => "drills", {})                                        |
| [Escaped Output] myhome_or_dashboard_link                                               |
| [Escaped Output] link_to("New Drill", new_drill_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link") |
+-----------------------------------------------------------------------------------------+

drills/index.["DrillsController#index"]

+-----------------------------------------------------------------------------------------+
| Output                                                                                  |
+-----------------------------------------------------------------------------------------+
| [Escaped Output] content_for(:meta) do; [ignored]; end                                  |
| [Escaped Output] render(partial => "drills", {})                                        |
| [Escaped Output] myhome_or_dashboard_link                                               |
| [Escaped Output] link_to("New Drill", new_drill_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link") |
+-----------------------------------------------------------------------------------------+

drills/new

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                               |
| [Escaped Output] simple_form_for(@drill, :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fields", { :f => f }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                       |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                     |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                 |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/new.["DrillsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for(current_user.drills.build(params[:drill]), :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partia>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

drills/new.["DrillsController#new"]

+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                  |
| [Escaped Output] simple_form_for(Drill.new, :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fields", { :f => f }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                          |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                        |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                    |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+

drills/show

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                        |
| [Escaped Output] content_for(:meta) do; [Escaped Output] stylesheet_link_tag("print", :media => :print); end                           |
| [Escaped Output] render(partial => "drill", {})                                                                                        |
| [Escaped Output] link_to("Drills", drills_path, :class => "side_menu_link")                                                            |
| [Escaped Output] link_to("Edit", edit_drill_path(@drill), :class => "side_menu_link")                                                  |
| [Escaped Output] link_to("Delete", @drill, :method => :delete, :data => ({ :confirm => "Are you sure?" }), :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                    |
| [Escaped Output] link_to("Print", print_drill_path(@drill), :class => "side_menu_link")                                                |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                    |
| [Escaped Output] link_to("Delete", @drill, :method => :delete, :data => ({ :confirm => "Are you sure?" }), :class => "side_menu_link") |
| [Escaped Output] link_to("Print", print_drill_path(@drill), :class => "side_menu_link")                                                |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

drills/show.["DrillsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                                           >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] stylesheet_link_tag("print", :media => :print); end                                              >>
| [Escaped Output] render(partial => "drill", {})                                                                                                           >>
| [Escaped Output] link_to("Drills", drills_path, :class => "side_menu_link")                                                                               >>
| [Escaped Output] link_to("Edit", edit_drill_path(current_user.drills.find_by_id(params[:id])), :class => "side_menu_link")                                >>
| [Escaped Output] link_to("Delete", current_user.drills.find_by_id(params[:id]), :method => :delete, :data => ({ :confirm => "Are you sure?" }), :class => >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Print", print_drill_path(current_user.drills.find_by_id(params[:id])), :class => "side_menu_link")                              >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Delete", current_user.drills.find_by_id(params[:id]), :method => :delete, :data => ({ :confirm => "Are you sure?" }), :class => >>
| [Escaped Output] link_to("Print", print_drill_path(current_user.drills.find_by_id(params[:id])), :class => "side_menu_link")                              >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclub_mailer/invite

+-----------------------------------------------------------------------------------------------------+
| Output                                                                                              |
+-----------------------------------------------------------------------------------------------------+
| [Escaped Output] @invite.name                                                                       |
| [Escaped Output] @sender.name                                                                       |
| [Escaped Output] @eclub_name                                                                        |
| [Escaped Output] link_to("this link", accept_eclubs_member_url(@invite.access_token))               |
| [Escaped Output] @sender.name                                                                       |
| [Escaped Output] mail_to("support@thegolfmentor.com", "mail us", :subject => "Unwanted Invitation") |
| [Escaped Output] @sender.name                                                                       |
+-----------------------------------------------------------------------------------------------------+

eclubs/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] f.input(:place)                                                                                                                          >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for(@eclub) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:name);[Escaped Output] f.input(:place);[Escap>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/_form.["EclubsController#create", "Template:eclubs/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] f.input(:place)                                                                                                                          >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for(current_user.eclubs.build(params[:eclub])) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:name);[Esc>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/_form.["EclubsController#edit", "Template:eclubs/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] f.input(:place)                                                                                                                          >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for(current_user.eclubs.first) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:name);[Escaped Output] f.i>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/_form.["EclubsController#new", "Template:eclubs/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] f.input(:place)                                                                                                                          >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for(Eclub.new) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:name);[Escaped Output] f.input(:place);[Es>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/_form.["Template:eclubs/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] f.input(:place)                                                                                                                          >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for(@eclub) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:name);[Escaped Output] f.input(:place);[Escap>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/_members

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] m.name                                                                     |
| [Escaped Output] users_handicap(m)                                                          |
| [Escaped Output] link_to("View", eclubs_member_path(m), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------+

eclubs/_members.["EclubsController#index", "Template:eclubs/index"]

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] m.name                                                                     |
| [Escaped Output] users_handicap(m)                                                          |
| [Escaped Output] link_to("View", eclubs_member_path(m), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------+

eclubs/_members.["Template:eclubs/index"]

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] m.name                                                                     |
| [Escaped Output] users_handicap(m)                                                          |
| [Escaped Output] link_to("View", eclubs_member_path(m), :class => "btn btn-primary btn-xs") |
+---------------------------------------------------------------------------------------------+

eclubs/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "form", {})                                                                                                            >>
| [Escaped Output] link_to("Delete eClub", @eclub, :method => :delete, :data => ({ :confirm => "Are you sure? This will delete your eClub and all members wi>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/edit.["EclubsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "form", {})                                                                                                            >>
| [Escaped Output] link_to("Delete eClub", current_user.eclubs.first, :method => :delete, :data => ({ :confirm => "Are you sure? This will delete your eClub>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/index

+------------------------------------------------------------------------------------------------+
| Output                                                                                         |
+------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("New eClub", new_eclub_path, :class => "btn btn-primary")             |
| [Escaped Output] @eclub.name                                                                   |
| [Escaped Output] @eclub.place                                                                  |
| [Escaped Output] @eclub.leader_name                                                            |
| [Escaped Output] link_to("Invite Member", new_eclubs_invite_path, :class => "btn btn-primary") |
| [Escaped Output] link_to("Edit eClub", edit_eclub_path(@eclub), :class => "btn btn-primary")   |
| [Escaped Output] render(partial => "members", {})                                              |
+------------------------------------------------------------------------------------------------+

eclubs/index.["EclubsController#index"]

+-------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("New eClub", new_eclub_path, :class => "btn btn-primary")                                |
| [Escaped Output] current_user.eclubs.current.name                                                                 |
| [Escaped Output] current_user.eclubs.current.place                                                                |
| [Escaped Output] current_user.eclubs.current.leader_name                                                          |
| [Escaped Output] link_to("Invite Member", new_eclubs_invite_path, :class => "btn btn-primary")                    |
| [Escaped Output] link_to("Edit eClub", edit_eclub_path(current_user.eclubs.current), :class => "btn btn-primary") |
| [Escaped Output] render(partial => "members", {})                                                                 |
+-------------------------------------------------------------------------------------------------------------------+

eclubs/invites/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email)                                                                                                                          >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for([:eclubs, @invite]) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:email);[Escaped Output] f.input(:>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/invites/new.["Eclubs::InvitesController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email)                                                                                                                          >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for([:eclubs, current_user.eclubs.current.invites.build(params[:invite])]) do; [Escaped Output] f.error_notification;[Escaped>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/invites/new.["Eclubs::InvitesController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email)                                                                                                                          >>
| [Escaped Output] f.input(:name)                                                                                                                           >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", eclubs_path, :class => "btn btn-default cancel")                                                                       >>
| [Escaped Output] simple_form_for([:eclubs, Invite.new]) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:email);[Escaped Output] f.inpu>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/members/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @user.name                                                                                                                               >>
| [Escaped Output] render(partial => "microposts/microposts", {})                                                                                           >>
| [Escaped Output] link_to("Unlink", eclubs_member_path(@user), :method => :delete, :data => ({ :confirm => ("Are you sure? This will unlink #{@user.name} f>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/members/show.["Eclubs::MembersController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] User.find_by_id(params[:id]).name                                                                                                        >>
| [Escaped Output] render(partial => "microposts/microposts", {})                                                                                           >>
| [Escaped Output] link_to("Unlink", eclubs_member_path(User.find_by_id(params[:id])), :method => :delete, :data => ({ :confirm => ("Are you sure? This will>>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

eclubs/new

+----------------------------------------------------------------------------+
| Output                                                                     |
+----------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                             |
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")        |
+----------------------------------------------------------------------------+

eclubs/new.["EclubsController#new"]

+----------------------------------------------------------------------------+
| Output                                                                     |
+----------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                             |
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")        |
+----------------------------------------------------------------------------+

goals/_goal_fields

+-------------------------------------------------------------------------------+
| Output                                                                        |
+-------------------------------------------------------------------------------+
| [Escaped Output] f.label(:goal_date, "Target Date")                           |
| [Escaped Output] f.date_select(:goal_date, :order => ([:month, :day, :year])) |
| [Escaped Output] f.label(:referenceScore, "Starting Handicap")                |
| [Escaped Output] f.select(:referenceScore, @handicapList)                     |
| [Escaped Output] f.label(:goal_score, "Target Handicap")                      |
| [Escaped Output] f.select(:goal_score, @handicapList)                         |
| [Escaped Output] f.label(:practice_period, "Length of Practice Cycle")        |
| [Escaped Output] f.select(:practice_period, @weeksList)                       |
| [Escaped Output] f.label(:practice_total, "Total Practice Time")              |
| [Escaped Output] f.select(:practice_total, @gDurationList)                    |
| [Escaped Output] f.label(:no_lessons, "Number of Lessons")                    |
| [Escaped Output] f.select(:no_lessons, lesson_list)                           |
| [Escaped Output] f.label(:game_frequeny, "Number of Games")                   |
| [Escaped Output] f.select(:game_frequeny, @gGamesList)                        |
| [Escaped Output] f.label(:halfway_reward, "Reward for reaching halfway")      |
| [Escaped Output] f.text_field(:halfway_reward, :size => 60)                   |
| [Escaped Output] f.label(:final_reward, "Reward for reaching target")         |
| [Escaped Output] f.text_field(:final_reward, :size => 60)                     |
+-------------------------------------------------------------------------------+

goals/_goal_fields.["GoalsController#edit", "Template:goals/edit"]

+-------------------------------------------------------------------------------+
| Output                                                                        |
+-------------------------------------------------------------------------------+
| [Escaped Output] f.label(:goal_date, "Target Date")                           |
| [Escaped Output] f.date_select(:goal_date, :order => ([:month, :day, :year])) |
| [Escaped Output] f.label(:referenceScore, "Starting Handicap")                |
| [Escaped Output] f.select(:referenceScore, handicapList)                      |
| [Escaped Output] f.label(:goal_score, "Target Handicap")                      |
| [Escaped Output] f.select(:goal_score, handicapList)                          |
| [Escaped Output] f.label(:practice_period, "Length of Practice Cycle")        |
| [Escaped Output] f.select(:practice_period, weeksList)                        |
| [Escaped Output] f.label(:practice_total, "Total Practice Time")              |
| [Escaped Output] f.select(:practice_total, gDurationList)                     |
| [Escaped Output] f.label(:no_lessons, "Number of Lessons")                    |
| [Escaped Output] f.select(:no_lessons, lesson_list)                           |
| [Escaped Output] f.label(:game_frequeny, "Number of Games")                   |
| [Escaped Output] f.select(:game_frequeny, gGamesList)                         |
| [Escaped Output] f.label(:halfway_reward, "Reward for reaching halfway")      |
| [Escaped Output] f.text_field(:halfway_reward, :size => 60)                   |
| [Escaped Output] f.label(:final_reward, "Reward for reaching target")         |
| [Escaped Output] f.text_field(:final_reward, :size => 60)                     |
+-------------------------------------------------------------------------------+

goals/_goal_fields.["Template:goals/edit"]

+-------------------------------------------------------------------------------+
| Output                                                                        |
+-------------------------------------------------------------------------------+
| [Escaped Output] f.label(:goal_date, "Target Date")                           |
| [Escaped Output] f.date_select(:goal_date, :order => ([:month, :day, :year])) |
| [Escaped Output] f.label(:referenceScore, "Starting Handicap")                |
| [Escaped Output] f.select(:referenceScore, @handicapList)                     |
| [Escaped Output] f.label(:goal_score, "Target Handicap")                      |
| [Escaped Output] f.select(:goal_score, @handicapList)                         |
| [Escaped Output] f.label(:practice_period, "Length of Practice Cycle")        |
| [Escaped Output] f.select(:practice_period, @weeksList)                       |
| [Escaped Output] f.label(:practice_total, "Total Practice Time")              |
| [Escaped Output] f.select(:practice_total, @gDurationList)                    |
| [Escaped Output] f.label(:no_lessons, "Number of Lessons")                    |
| [Escaped Output] f.select(:no_lessons, lesson_list)                           |
| [Escaped Output] f.label(:game_frequeny, "Number of Games")                   |
| [Escaped Output] f.select(:game_frequeny, @gGamesList)                        |
| [Escaped Output] f.label(:halfway_reward, "Reward for reaching halfway")      |
| [Escaped Output] f.text_field(:halfway_reward, :size => 60)                   |
| [Escaped Output] f.label(:final_reward, "Reward for reaching target")         |
| [Escaped Output] f.text_field(:final_reward, :size => 60)                     |
+-------------------------------------------------------------------------------+

goals/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Update", "#editSubmit")                                                                                                         >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "goal_fields", { :f => f })                                                                                            >>
| [Escaped Output] f.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                                            >>
| [Escaped Output] form_for(@goal) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(partial >>
| [Escaped Output] link_to("Help", goalEditHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

goals/edit.["GoalsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Update", "#editSubmit")                                                                                                         >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "goal_fields", { :f => FormBuilder.new })                                                                              >>
| [Escaped Output] FormBuilder.new.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                              >>
| [Escaped Output] form_for(current_user.goals.first) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })>>
| [Escaped Output] link_to("Help", goalEditHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

goals/editHelp

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")       |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link") |
+---------------------------------------------------------------------------+

goals/handicapDropInput

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:handicap)                                                                                                                       >>
| [Escaped Output] f.number_field(:handicap, :size => 2)                                                                                                    >>
| [Escaped Output] f.label(:age)                                                                                                                            >>
| [Escaped Output] f.number_field(:age, :size => 2)                                                                                                         >>
| [Escaped Output] f.label(:number_games, "number of games per week")                                                                                       >>
| [Escaped Output] f.number_field(:number_games, :size => 2)                                                                                                >>
| [Escaped Output] f.label(:number_hours, "number of practice hours per week")                                                                              >>
| [Escaped Output] f.number_field(:number_hours, :size => 2)                                                                                                >>
| [Escaped Output] f.submit("Update")                                                                                                                       >>
| [Escaped Output] form_for(@post, :url => handicapDropShow_path) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

goals/handicapDropShow

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] @post.handicap                                           |
| [Escaped Output] @post.age                                                |
| [Escaped Output] @post.number_games                                       |
| [Escaped Output] @post.number_hours                                       |
| [Escaped Output] image_tag(@drop_chart, :alt => "Scores Chart")           |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link") |
| [Escaped Output] link_to("ReCalculate", handicapDropInput_path)           |
+---------------------------------------------------------------------------+

goals/index

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] g.goal_date                                                              |
| [Escaped Output] link_to("No. #{(((g.id * 113) + (g.id * 17)) + g.id)}", goal_path(g.id)) |
+-------------------------------------------------------------------------------------------+

goals/index.["GoalsController#index"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] g.goal_date                                                              |
| [Escaped Output] link_to("No. #{(((g.id * 113) + (g.id * 17)) + g.id)}", goal_path(g.id)) |
+-------------------------------------------------------------------------------------------+

goals/show

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] name_if_to_be_shown                                                                                           |
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                           |
| [Escaped Output] form_for(@goal) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object }); end |
| [Escaped Output] render(partial => "shared/goal_text", {})                                                                     |
| [Escaped Output] link_to("Edit Goals", goaledit_path, :class => "side_menu_link")                                              |
| [Escaped Output] link_to("Print Goals", print_show_goals_path, :class => "side_menu_link")                                     |
| [Escaped Output] link_to("Plans", plan_path(@user.plans.first), :class => "side_menu_link")                                    |
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                      |
+--------------------------------------------------------------------------------------------------------------------------------+

goals/show.["GoalsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] name_if_to_be_shown                                                                                                                      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] form_for((current_user.goals.first or Goal.find_by_id(params[:id].to_i))) do; [Escaped Output] render(partial => "shared/error_messages",>>
| [Escaped Output] render(partial => "shared/goal_text", {})                                                                                                >>
| [Escaped Output] link_to("Edit Goals", goaledit_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Print Goals", print_show_goals_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Plans", plan_path((current_user.goals.first or Goal.find_by_id(params[:id].to_i)).user.plans.first), :class => "side_menu_link")>>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

goals/show.["GoalsController#update"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] name_if_to_be_shown                                                                                                                      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] form_for(current_user.goals.first) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })>>
| [Escaped Output] render(partial => "shared/goal_text", {})                                                                                                >>
| [Escaped Output] link_to("Edit Goals", goaledit_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Print Goals", print_show_goals_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Plans", plan_path(current_user.plans.first), :class => "side_menu_link")                                                        >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_duration_update_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] g.input(:duration, :collection => graph.duration_list, :required => false, :include_blank => false)                                      >>
| [Escaped Output] g.submit("Update", :id => "graph_duration")                                                                                              >>
| [Escaped Output] simple_form_for(graph, :url => duration_update_graphs_path, :method => :get, :html => ({ :class => "form-inline", :id => "duration_update>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_duration_update_form.["Template:graphs/_overview_with_duration"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] g.input(:duration, :collection => graph.duration_list, :required => false, :include_blank => false)                                      >>
| [Escaped Output] g.submit("Update", :id => "graph_duration")                                                                                              >>
| [Escaped Output] simple_form_for(graph, :url => duration_update_graphs_path, :method => :get, :html => ({ :class => "form-inline", :id => "duration_update>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_graph_data_js

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] raw(graph.data.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.xkey.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.ykeys.to_json)                                                                                                                 >>
| [Escaped Output] raw(graph.labels.to_json)                                                                                                                >>
| [Escaped Output] graph.data.size                                                                                                                          >>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(graph.data.to_json);[Escaped Output] raw(graph.xkey.to_json);[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_graph_data_js.["Template:graphs/_overview_graph"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] raw(graph.data.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.xkey.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.ykeys.to_json)                                                                                                                 >>
| [Escaped Output] raw(graph.labels.to_json)                                                                                                                >>
| [Escaped Output] graph.data.size                                                                                                                          >>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(graph.data.to_json);[Escaped Output] raw(graph.xkey.to_json);[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_graph_data_no_time_js

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] raw(graph.data.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.xkey.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.ykeys.to_json)                                                                                                                 >>
| [Escaped Output] raw(graph.labels.to_json)                                                                                                                >>
| [Escaped Output] graph.data.size                                                                                                                          >>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(graph.data.to_json);[Escaped Output] raw(graph.xkey.to_json);[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_graph_data_no_time_js.["Template:graphs/_overview_graph_no_time"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] raw(graph.data.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.xkey.to_json)                                                                                                                  >>
| [Escaped Output] raw(graph.ykeys.to_json)                                                                                                                 >>
| [Escaped Output] raw(graph.labels.to_json)                                                                                                                >>
| [Escaped Output] graph.data.size                                                                                                                          >>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(graph.data.to_json);[Escaped Output] raw(graph.xkey.to_json);[Escaped Outpu>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

graphs/_overview_graph

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] content_tag(:div, "", { :id => "progress_chart", :style => "height: 250px;" }, false) |
| [Escaped Output] graph.duration.downcase                                                               |
| [Escaped Output] render(partial => "graphs/graph_data_js", { :graph => graph })                        |
+--------------------------------------------------------------------------------------------------------+

graphs/_overview_graph.["Template:graphs/_overview_no_duration"]

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] content_tag(:div, "", { :id => "progress_chart", :style => "height: 250px;" }, false) |
| [Escaped Output] graph.duration.downcase                                                               |
| [Escaped Output] render(partial => "graphs/graph_data_js", { :graph => graph })                        |
+--------------------------------------------------------------------------------------------------------+

graphs/_overview_graph_no_time

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] content_tag(:div, "", { :id => "progress_chart", :style => "height: 500px;" }, false) |
| [Escaped Output] graph.duration.downcase                                                               |
| [Escaped Output] render(partial => "graphs/graph_data_no_time_js", { :graph => graph })                |
+--------------------------------------------------------------------------------------------------------+

graphs/_overview_graph_no_time.["Template:old_admin/dashboards/club_distances"]

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] content_tag(:div, "", { :id => "progress_chart", :style => "height: 500px;" }, false) |
| [Escaped Output] graph.duration.downcase                                                               |
| [Escaped Output] render(partial => "graphs/graph_data_no_time_js", { :graph => graph })                |
+--------------------------------------------------------------------------------------------------------+

graphs/_overview_no_duration

+----------------------------------------------------------------------------------+
| Output                                                                           |
+----------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_graph", { :graph => graph }) |
+----------------------------------------------------------------------------------+

graphs/_overview_no_duration.["Template:pages/myhome"]

+----------------------------------------------------------------------------------+
| Output                                                                           |
+----------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_graph", { :graph => graph }) |
+----------------------------------------------------------------------------------+

graphs/_overview_with_duration

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/duration_update_form", { :graph => graph }) |
| [Escaped Output] render(partial => "graphs/overview_graph", { :graph => graph })       |
+----------------------------------------------------------------------------------------+

graphs/_overview_with_duration.["Template:mental_games/show"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/duration_update_form", { :graph => graph }) |
| [Escaped Output] render(partial => "graphs/overview_graph", { :graph => graph })       |
+----------------------------------------------------------------------------------------+

handicaps/_convert_member_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:name, "Name")                                                                                                                   >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:email, "Email")                                                                                                                 >>
| [Escaped Output] f.email_field(:email)                                                                                                                    >>
| [Escaped Output] f.label(:password)                                                                                                                       >>
| [Escaped Output] f.password_field(:password)                                                                                                              >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] f.submit("Join Now", :id => "sign-up")                                                                                                   >>
| [Escaped Output] form_for(@user, :url => users_path, :html => ({ :method => :post })) do; [Escaped Output] render(partial => "shared/error_messages", { :o>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/_convert_member_form.["HandicapsController#calculate", "Template:handicaps/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:name, "Name")                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email, "Email")                                                                                                   >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :id => "sign-up")                                                                                     >>
| [Escaped Output] form_for(User.new_guest, :url => users_path, :html => ({ :method => :post })) do; [Escaped Output] render(partial => "shared/error_messag>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/_convert_member_form.["Template:handicaps/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:name, "Name")                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email, "Email")                                                                                                   >>
| [Escaped Output] FormBuilder.new.email_field(:email)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :id => "sign-up")                                                                                     >>
| [Escaped Output] form_for(@user, :url => users_path, :html => ({ :method => :post })) do; [Escaped Output] render(partial => "shared/error_messages", { :o>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/_faq_answers

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Simple Stroke Control", "#ssc")                                       |
| [Escaped Output] link_to("not an official USGA handicap", "#official")                          |
| [Escaped Output] link_to("this page", "http://www.popeofslope.com/guidelines/handicap103.html") |
+-------------------------------------------------------------------------------------------------+

handicaps/_faq_answers.["Template:handicaps/faq"]

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Simple Stroke Control", "#ssc")                                       |
| [Escaped Output] link_to("not an official USGA handicap", "#official")                          |
| [Escaped Output] link_to("this page", "http://www.popeofslope.com/guidelines/handicap103.html") |
+-------------------------------------------------------------------------------------------------+

handicaps/_faq_questions

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("What is a Conventional Handicap?", "#traditional")      |
| [Escaped Output] link_to("What is a Handicap Index?", "#index")                   |
| [Escaped Output] link_to("Do I need the Course Rating?", "#slope")                |
| [Escaped Output] link_to("How do I post a Par round?", "#parRound")               |
| [Escaped Output] link_to("How do I post a Stableford round?", "#stablefordRound") |
+-----------------------------------------------------------------------------------+

handicaps/_faq_questions.["Template:handicaps/faq"]

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] link_to("What is a Conventional Handicap?", "#traditional")      |
| [Escaped Output] link_to("What is a Handicap Index?", "#index")                   |
| [Escaped Output] link_to("Do I need the Course Rating?", "#slope")                |
| [Escaped Output] link_to("How do I post a Par round?", "#parRound")               |
| [Escaped Output] link_to("How do I post a Stableford round?", "#stablefordRound") |
+-----------------------------------------------------------------------------------+

handicaps/faq

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "handicaps/faq_questions", {})                                                                                         >>
| [Escaped Output] render(partial => "handicaps/faq_answers", {})                                                                                           >>
| [Escaped Output] details_panel("How do Handicaps Work?", 1) do; [Escaped Output] render(partial => "handicaps/faq_questions", {});[Escaped Output] render(>>
| [Escaped Output] render(partial => "microposts/games/help_text", {})                                                                                      >>
| [Escaped Output] details_panel("How to Post Games?", 2) do; [Escaped Output] render(partial => "microposts/games/help_text", {}); end                     >>
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {})                                                                              >>
| [Escaped Output] details_panel("How to Post Practice Sessions?", 3) do; [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}); end >>
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {})                                                                              >>
| [Escaped Output] details_panel("How to Post Lessons?", 4) do; [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}); end           >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/faq.["HandicapsController#faq"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "handicaps/faq_questions", {})                                                                                         >>
| [Escaped Output] render(partial => "handicaps/faq_answers", {})                                                                                           >>
| [Escaped Output] details_panel("How do Handicaps Work?", 1) do; [Escaped Output] render(partial => "handicaps/faq_questions", {});[Escaped Output] render(>>
| [Escaped Output] render(partial => "microposts/games/help_text", {})                                                                                      >>
| [Escaped Output] details_panel("How to Post Games?", 2) do; [Escaped Output] render(partial => "microposts/games/help_text", {}); end                     >>
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {})                                                                              >>
| [Escaped Output] details_panel("How to Post Practice Sessions?", 3) do; [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}); end >>
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {})                                                                              >>
| [Escaped Output] details_panel("How to Post Lessons?", 4) do; [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}); end           >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert("Handicap Calculator")                                                                                                         >>
| [Escaped Output] @microposts.count                                                                                                                        >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => m })                                                                             >>
| [Escaped Output] row_id(n)                                                                                                                                >>
| [Escaped Output] n                                                                                                                                        >>
| [Escaped Output] f.number_field(:score, :max => 99, :min => 0)                                                                                            >>
| [Escaped Output] f.select(:slope_index, slopeList)                                                                                                        >>
| [Escaped Output] fields_for("microposts[#{n}]", m) do; if m.errors.any? then; [Escaped Output] render(partial => "shared/error_messages", { :object => m }>>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary extra_top_margin")                                                                       >>
| [Escaped Output] form_tag(calculate_handicaps_path) do; n = 0;@microposts.each do; n = (n + 1);[Escaped Output] fields_for("microposts[#{n}]", m) do; if m>>
| [Escaped Output] render(partial => "shared/sidebars/standard_core", { :object => (@sidebar) })                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/new.["HandicapsController#calculate"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert("Handicap Calculator")                                                                                                         >>
| [Escaped Output] [User.new_guest.games.build(mh[1].merge(:date_of_post => Date.today))].count                                                             >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => m })                                                                             >>
| [Escaped Output] row_id(1)                                                                                                                                >>
| [Escaped Output] 1                                                                                                                                        >>
| [Escaped Output] f.number_field(:score, :max => 99, :min => 0)                                                                                            >>
| [Escaped Output] f.select(:slope_index, slopeList)                                                                                                        >>
| [Escaped Output] fields_for("microposts[#{1}]", m) do; if m.errors.any? then; [Escaped Output] render(partial => "shared/error_messages", { :object => m }>>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary extra_top_margin")                                                                       >>
| [Escaped Output] form_tag(calculate_handicaps_path) do; n = 0;[User.new_guest.games.build(mh[1].merge(:date_of_post => Date.today))].each do; n = 1;[Escap>>
| [Escaped Output] render(partial => "shared/sidebars/standard_core", { :object => (@sidebar) })                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/new.["HandicapsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert("Handicap Calculator")                                                                                                         >>
| [Escaped Output] [Game.new].count                                                                                                                         >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => m })                                                                             >>
| [Escaped Output] row_id(1)                                                                                                                                >>
| [Escaped Output] 1                                                                                                                                        >>
| [Escaped Output] f.number_field(:score, :max => 99, :min => 0)                                                                                            >>
| [Escaped Output] f.select(:slope_index, slopeList)                                                                                                        >>
| [Escaped Output] fields_for("microposts[#{1}]", m) do; if m.errors.any? then; [Escaped Output] render(partial => "shared/error_messages", { :object => m }>>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary extra_top_margin")                                                                       >>
| [Escaped Output] form_tag(calculate_handicaps_path) do; n = 0;[Game.new].each do; n = 1;[Escaped Output] fields_for("microposts[#{1}]", m) do; if m.errors>>
| [Escaped Output] render(partial => "shared/sidebars/standard_core", { :object => (@sidebar) })                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

handicaps/print

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] @user.name.titleize                   |
| [Escaped Output] @user.name.titleize                   |
| [Escaped Output] @user.name.titleize                   |
| [Escaped Output] @user.profile.exact_handicap.round(1) |
| [Escaped Output] datePretty(Date.today)                |
+--------------------------------------------------------+

handicaps/print.["HandicapsController#print"]

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] current_user.name.titleize                   |
| [Escaped Output] current_user.name.titleize                   |
| [Escaped Output] current_user.name.titleize                   |
| [Escaped Output] current_user.profile.exact_handicap.round(1) |
| [Escaped Output] datePretty(Date.today)                       |
+---------------------------------------------------------------+

handicaps/show

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] calculator_offer                                                               |
| [Escaped Output] content_for(:section_insert) do; [Escaped Output] calculator_offer; end        |
| [Escaped Output] @user.profile.exact_handicap.round(1)                                          |
| [Escaped Output] @user.profile.exact_handicap.round(1)                                          |
| [Escaped Output] text_if_provisional                                                            |
| [Escaped Output] FreePeriod                                                                     |
| [Escaped Output] render(partial => "convert_member_form", {})                                   |
| [Escaped Output] render(partial => "shared/infographic", {})                                    |
| [Escaped Output] render(partial => "shared/reasons_why", { :referral => @user.referral })       |
| [Escaped Output] render(partial => "shared/sidebars/standard_core", { :sidebar => (@sidebar) }) |
+-------------------------------------------------------------------------------------------------+

handicaps/show.["HandicapsController#calculate"]

+-----------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                |
+-----------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] calculator_offer                                                                                     |
| [Escaped Output] content_for(:section_insert) do; [Escaped Output] calculator_offer; end                              |
| [Escaped Output] User.new_guest.profile.exact_handicap.round(1)                                                       |
| [Escaped Output] User.new_guest.profile.exact_handicap.round(1)                                                       |
| [Escaped Output] text_if_provisional                                                                                  |
| [Escaped Output] 10                                                                                                   |
| [Escaped Output] render(partial => "convert_member_form", {})                                                         |
| [Escaped Output] render(partial => "shared/infographic", {})                                                          |
| [Escaped Output] render(partial => "shared/reasons_why", { :referral => User.new_guest.referral })                    |
| [Escaped Output] render(partial => "shared/sidebars/standard_core", { :sidebar => ({ :affiliate => "Consistent" }) }) |
+-----------------------------------------------------------------------------------------------------------------------+

ios/sessions/new

+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                            |
+---------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "sessions/fields", { :f => f })                                                                                |
| [Escaped Output] simple_form_for(:session, :url => ios_sessions_path) do; [Escaped Output] render(partial => "sessions/fields", { :f => f }); end |
| [Escaped Output] link_to("Forgotten password?", new_password_reset_path)                                                                          |
| [Escaped Output] link_to("Sign Up", sign_up_ios_path)                                                                                             |
| [Escaped Output] link_to("Contact Us", contact_us_path(@user))                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------------------------------+

ios/sessions/new.["Ios::SessionsController#new"]

+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                            |
+---------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "sessions/fields", { :f => f })                                                                                |
| [Escaped Output] simple_form_for(:session, :url => ios_sessions_path) do; [Escaped Output] render(partial => "sessions/fields", { :f => f }); end |
| [Escaped Output] link_to("Forgotten password?", new_password_reset_path)                                                                          |
| [Escaped Output] link_to("Sign Up", sign_up_ios_path)                                                                                             |
| [Escaped Output] link_to("Contact Us", contact_us_path(@user))                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------------------------------+

ios/users/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for([:ios, @user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simple_fields", { :f =>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

ios/users/new.["Ios::UsersController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for([:ios, User.new(params[:user])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simp>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

ios/users/new.["Ios::UsersController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for([:ios, User.new]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simple_fields", { :>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

landings/_benefits_plus_ad

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] advert_display(:bottom, @advert_hide) |
+--------------------------------------------------------+

landings/_benefits_plus_ad.["Template:landings/break_100"]

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] advert_display(:bottom, @advert_hide) |
+--------------------------------------------------------+

landings/break_100

+-----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                      |
+-----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                          |
| [Escaped Output] link_to("here", signup_path)                                                                               |
| [Escaped Output] link_to("Free #{FreePeriod} Day Trial", signup_path(:referral => "break-100"), :class => "call_to_action") |
| [Escaped Output] link_to("See Screen Shots", show_sample_challenges_path, :class => "signup_button round")                  |
| [Escaped Output] render(partial => "benefits_plus_ad", {})                                                                  |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                          |
+-----------------------------------------------------------------------------------------------------------------------------+

landings/break_100.["LandingsController#break_100"]

+---------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                  |
| [Escaped Output] link_to("here", signup_path)                                                                       |
| [Escaped Output] link_to("Free #{10} Day Trial", signup_path(:referral => "break-100"), :class => "call_to_action") |
| [Escaped Output] link_to("See Screen Shots", show_sample_challenges_path, :class => "signup_button round")          |
| [Escaped Output] render(partial => "benefits_plus_ad", {})                                                          |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                  |
+---------------------------------------------------------------------------------------------------------------------+

landings/driving_accuracy

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/driving_accuracy.["LandingsController#driving_accuracy"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/etiquette

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/etiquette.["LandingsController#etiquette"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/handicap_calculator

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                               |
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :class => "round")                                       |
| [Escaped Output] FreePeriod                                                                                                      |
| [Escaped Output] link_to("Try it Now", signup_path(:referral => "calculator"), :class => "call_to_action")                       |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf"), signup_path(:referral => "calculator")) |
| [Escaped Output] render(partial => "shared/sidebars/standard_core", {})                                                          |
+----------------------------------------------------------------------------------------------------------------------------------+

landings/handicap_calculator.["LandingsController#handicap_calculator"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                               |
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :class => "round")                                       |
| [Escaped Output] 10                                                                                                              |
| [Escaped Output] link_to("Try it Now", signup_path(:referral => "calculator"), :class => "call_to_action")                       |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf"), signup_path(:referral => "calculator")) |
| [Escaped Output] render(partial => "shared/sidebars/standard_core", {})                                                          |
+----------------------------------------------------------------------------------------------------------------------------------+

landings/handicap_tracker

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert_landing                                                                                                                        >>
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :id => "chart", :class => "round")                                                >>
| [Escaped Output] FreePeriod                                                                                                                               >>
| [Escaped Output] render(partial => "shared/new_member_form", {})                                                                                          >>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:")                                                                                                      >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary etm15")                                                                                  >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
| [Escaped Output] link_to(image_tag("king_17_210.jpg", :alt => "King Cartoon", :class => "round"), root_path)                                              >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to(image_tag("king_17_210.jpg", :alt => "King Cartoon", :class => "round"), root_path); >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

landings/handicap_tracker.["LandingsController#handicap_tracker"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert_landing                                                                                                                        >>
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :id => "chart", :class => "round")                                                >>
| [Escaped Output] 10                                                                                                                                       >>
| [Escaped Output] render(partial => "shared/new_member_form", {})                                                                                          >>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:")                                                                                                      >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary etm15")                                                                                  >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
| [Escaped Output] link_to(image_tag("king_17_210.jpg", :alt => "King Cartoon", :class => "round"), root_path)                                              >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to(image_tag("king_17_210.jpg", :alt => "King Cartoon", :class => "round"), root_path); >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

landings/index

+-----------------------------------------------------------------------------+
| Output                                                                      |
+-----------------------------------------------------------------------------+
| [Escaped Output] link_to(Landing.retrieve(n, :title), Landing.make_link(n)) |
+-----------------------------------------------------------------------------+

landings/index.["LandingsController#index"]

+-----------------------------------------------------------------------------+
| Output                                                                      |
+-----------------------------------------------------------------------------+
| [Escaped Output] link_to(Landing.retrieve(n, :title), Landing.make_link(n)) |
+-----------------------------------------------------------------------------+

landings/instruct_beginner

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/instruct_beginner.["LandingsController#instruct_beginner"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/learn_beginner

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/learn_beginner.["LandingsController#learn_beginner"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/learn_golf

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                               |
| [Escaped Output] FreePeriod                                                                                      |
| [Escaped Output] link_to("Join Today", signup_path(:referral => "learn_golf"), :class => "call_to_action round") |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                  |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                           |
| [Escaped Output] render(partial => "shared/sidebars/standard_core_ad", {})                                       |
+------------------------------------------------------------------------------------------------------------------+

landings/learn_golf.["LandingsController#learn_golf"]

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                               |
| [Escaped Output] 10                                                                                              |
| [Escaped Output] link_to("Join Today", signup_path(:referral => "learn_golf"), :class => "call_to_action round") |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                  |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                           |
| [Escaped Output] render(partial => "shared/sidebars/standard_core_ad", {})                                       |
+------------------------------------------------------------------------------------------------------------------+

landings/online_beginner_tips

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/online_beginner_tips.["LandingsController#online_beginner_tips"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_2

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("the rules of golf", golf_rules_path)                      |
| [Escaped Output] link_to("here", rules_3_landings_path)                             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_2.["LandingsController#rules_2"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("the rules of golf", golf_rules_path)                      |
| [Escaped Output] link_to("here", rules_3_landings_path)                             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_3

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("here", rules_4_landings_path)                             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_3.["LandingsController#rules_3"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("here", rules_4_landings_path)                             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_4

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("rule 27", "#rule_27")                                     |
| [Escaped Output] link_to("rule 27", "#rule_27")                                     |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/rules_4.["LandingsController#rules_4"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("rule 27", "#rule_27")                                     |
| [Escaped Output] link_to("rule 27", "#rule_27")                                     |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/teacher_search

+------------------------------------+
| Output                             |
+------------------------------------+
| [Escaped Output] h1_insert_landing |
+------------------------------------+

landings/teacher_search.["LandingsController#teacher_search"]

+------------------------------------+
| Output                             |
+------------------------------------+
| [Escaped Output] h1_insert_landing |
+------------------------------------+

landings/tips_beginner

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("join", signup_path(:referral => "tips"))                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/tips_beginner.["LandingsController#tips_beginner"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("join", signup_path(:referral => "tips"))                  |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/useful_tips

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("proper grip", golf_grip_path)                             |
| [Escaped Output] link_to("right distance", club_distances_path)                     |
| [Escaped Output] FreePeriod                                                         |
| [Escaped Output] link_to("Join Now.", signup_path(:referral => "tips"))             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/useful_tips.["LandingsController#useful_tips"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] h1_insert_landing                                                  |
| [Escaped Output] link_to("proper grip", golf_grip_path)                             |
| [Escaped Output] link_to("right distance", club_distances_path)                     |
| [Escaped Output] 10                                                                 |
| [Escaped Output] link_to("Join Now.", signup_path(:referral => "tips"))             |
| [Escaped Output] render(partial => "shared/newsletter_form", {})                    |
| [Escaped Output] advert_display(:bottom, @advert_hide)                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :sidebar => nil }) |
+-------------------------------------------------------------------------------------+

landings/videos

+-----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                      |
+-----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                          |
| [Escaped Output] image_tag("pete_styles_small.jpg", :alt => "Pete Styles", :id => "pete-styles-small")                      |
| [Escaped Output] link_to("Pete Styles", "http://petestyles.com/")                                                           |
| [Escaped Output] link_to("free-online-golf-tips.com", "http://www.free-online-golf-tips.com/")                              |
| [Escaped Output] link_to("here", "http://www.free-online-golf-tips.com/")                                                   |
| [Escaped Output] link_to("here", signup_path)                                                                               |
| [Escaped Output] link_to("Free #{FreePeriod} Day Trial", signup_path(:referral => "break-100"), :class => "call_to_action") |
| [Escaped Output] link_to("See Screen Shots", show_sample_challenges_path, :class => "signup_button round")                  |
| [Escaped Output] render(partial => "benefits_plus_ad", {})                                                                  |
| [Escaped Output] render(partial => "shared/sidebars/standard_newsletter", {})                                               |
+-----------------------------------------------------------------------------------------------------------------------------+

landings/videos.["LandingsController#videos"]

+---------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                                  |
| [Escaped Output] image_tag("pete_styles_small.jpg", :alt => "Pete Styles", :id => "pete-styles-small")              |
| [Escaped Output] link_to("Pete Styles", "http://petestyles.com/")                                                   |
| [Escaped Output] link_to("free-online-golf-tips.com", "http://www.free-online-golf-tips.com/")                      |
| [Escaped Output] link_to("here", "http://www.free-online-golf-tips.com/")                                           |
| [Escaped Output] link_to("here", signup_path)                                                                       |
| [Escaped Output] link_to("Free #{10} Day Trial", signup_path(:referral => "break-100"), :class => "call_to_action") |
| [Escaped Output] link_to("See Screen Shots", show_sample_challenges_path, :class => "signup_button round")          |
| [Escaped Output] render(partial => "benefits_plus_ad", {})                                                          |
| [Escaped Output] render(partial => "shared/sidebars/standard_newsletter", {})                                       |
+---------------------------------------------------------------------------------------------------------------------+

layouts/_flash

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] ("success" or "danger")                          |
| [Escaped Output] content_tag(:div, msg, :id => ("flash_#{name}")) |
+-------------------------------------------------------------------+

layouts/_flash.["Template:layouts/application"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] ("success" or "danger")                          |
| [Escaped Output] content_tag(:div, msg, :id => ("flash_#{name}")) |
+-------------------------------------------------------------------+

layouts/_footer

+--------------------------------------------------------------------------------------------------+
| Output                                                                                           |
+--------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "pages/about", {})                                            |
| [Escaped Output] link_to("Learn more", tour_central_path, :class => "more")                      |
| [Escaped Output] link_to("Links", main_app.links_path)                                           |
| [Escaped Output] link_to("Help", main_app.help_path)                                             |
| [Escaped Output] link_to("Legal", main_app.legal_path)                                           |
| [Escaped Output] link_to("Cookies and Privacy", main_app.legal_path(:anchor => "privacyPolicy")) |
| [Escaped Output] link_to("Club Distances", club_distances_path)                                  |
| [Escaped Output] link_to("Site Map", main_app.links_path)                                        |
| [Escaped Output] link_to("Contact Support", contact_us_path)                                     |
| [Escaped Output] Time.now.year                                                                   |
| [Escaped Output] link_to("by THE Golf Mentor", root_path)                                        |
+--------------------------------------------------------------------------------------------------+

layouts/_footer.["Template:layouts/application"]

+--------------------------------------------------------------------------------------------------+
| Output                                                                                           |
+--------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "pages/about", {})                                            |
| [Escaped Output] link_to("Learn more", tour_central_path, :class => "more")                      |
| [Escaped Output] link_to("Links", main_app.links_path)                                           |
| [Escaped Output] link_to("Help", main_app.help_path)                                             |
| [Escaped Output] link_to("Legal", main_app.legal_path)                                           |
| [Escaped Output] link_to("Cookies and Privacy", main_app.legal_path(:anchor => "privacyPolicy")) |
| [Escaped Output] link_to("Club Distances", club_distances_path)                                  |
| [Escaped Output] link_to("Site Map", main_app.links_path)                                        |
| [Escaped Output] link_to("Contact Support", contact_us_path)                                     |
| [Escaped Output] Time.now.year                                                                   |
| [Escaped Output] link_to("by THE Golf Mentor", root_path)                                        |
+--------------------------------------------------------------------------------------------------+

layouts/_header

+------------------------------------------------------------------------+
| Output                                                                 |
+------------------------------------------------------------------------+
| [Escaped Output] render(partial => "layouts/header_not_signed_in", {}) |
| [Escaped Output] render(partial => "layouts/header_signed_in", {})     |
+------------------------------------------------------------------------+

layouts/_header.["Template:layouts/application"]

+------------------------------------------------------------------------+
| Output                                                                 |
+------------------------------------------------------------------------+
| [Escaped Output] render(partial => "layouts/header_not_signed_in", {}) |
| [Escaped Output] render(partial => "layouts/header_signed_in", {})     |
+------------------------------------------------------------------------+

layouts/_header_not_signed_in

+-----------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                |
+-----------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] golfers_path                                                                                         |
| [Escaped Output] link_to("Golfers", main_app.golfers_path)                                                            |
| [Escaped Output] link_to("Teachers", main_app.teacher_path)                                                           |
| [Escaped Output] link_to("Pricing", main_app.pricing_path)                                                            |
| [Escaped Output] link_to("Sign in", main_app.signin_path)                                                             |
| [Escaped Output] link_to("Get Started", path_to_signup, :class => "btn btn-cta btn-cta-primary", :id => "try-it-now") |
+-----------------------------------------------------------------------------------------------------------------------+

layouts/_header_not_signed_in.["Template:layouts/_header"]

+-----------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                |
+-----------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] golfers_path                                                                                         |
| [Escaped Output] link_to("Golfers", main_app.golfers_path)                                                            |
| [Escaped Output] link_to("Teachers", main_app.teacher_path)                                                           |
| [Escaped Output] link_to("Pricing", main_app.pricing_path)                                                            |
| [Escaped Output] link_to("Sign in", main_app.signin_path)                                                             |
| [Escaped Output] link_to("Get Started", path_to_signup, :class => "btn btn-cta btn-cta-primary", :id => "try-it-now") |
+-----------------------------------------------------------------------------------------------------------------------+

layouts/_header_pro_user

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path)                  |
| [Escaped Output] link_to("Settings", main_app.edit_pro_user_path(current_user)) |
| [Escaped Output] link_to("Help", main_app.help_path)                            |
| [Escaped Output] link_to("Sign out", main_app.signout_path)                     |
+---------------------------------------------------------------------------------+

layouts/_header_pro_user.["Template:layouts/_header", "Template:layouts/_header_signed_in"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path)                  |
| [Escaped Output] link_to("Settings", main_app.edit_pro_user_path(current_user)) |
| [Escaped Output] link_to("Help", main_app.help_path)                            |
| [Escaped Output] link_to("Sign out", main_app.signout_path)                     |
+---------------------------------------------------------------------------------+

layouts/_header_signed_in

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] render(partial => "layouts/header_pro_user", {}) |
| [Escaped Output] render(partial => "layouts/header_student", {})  |
| [Escaped Output] render(partial => "layouts/header_user", {})     |
+-------------------------------------------------------------------+

layouts/_header_signed_in.["Template:layouts/_header"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] render(partial => "layouts/header_pro_user", {}) |
| [Escaped Output] render(partial => "layouts/header_student", {})  |
| [Escaped Output] render(partial => "layouts/header_user", {})     |
+-------------------------------------------------------------------+

layouts/_header_student

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", myhome_student_path(current_user))                                                     |
| [Escaped Output] link_to("Upgrade", subscriptionShow_path, :class => "btn btn-cta btn-cta-primary", :id => "cta_upgrade") |
| [Escaped Output] link_to("Goals", main_app.goal_path(current_user.goals.first.id))                                        |
| [Escaped Output] top_linkage_for_mental_game.html_safe                                                                    |
| [Escaped Output] link_to("Posts", main_app.microposts_path)                                                               |
| [Escaped Output] link_to("Settings", main_app.settings_users_path)                                                        |
| [Escaped Output] link_to("Help", main_app.help_path)                                                                      |
| [Escaped Output] link_to("Sign out", main_app.signout_path)                                                               |
+---------------------------------------------------------------------------------------------------------------------------+

layouts/_header_student.["Template:layouts/_header", "Template:layouts/_header_signed_in"]

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", myhome_student_path(current_user))                                                     |
| [Escaped Output] link_to("Upgrade", subscriptionShow_path, :class => "btn btn-cta btn-cta-primary", :id => "cta_upgrade") |
| [Escaped Output] link_to("Goals", main_app.goal_path(current_user.goals.first.id))                                        |
| [Escaped Output] top_linkage_for_mental_game.html_safe                                                                    |
| [Escaped Output] link_to("Posts", main_app.microposts_path)                                                               |
| [Escaped Output] link_to("Settings", main_app.settings_users_path)                                                        |
| [Escaped Output] link_to("Help", main_app.help_path)                                                                      |
| [Escaped Output] link_to("Sign out", main_app.signout_path)                                                               |
+---------------------------------------------------------------------------------------------------------------------------+

layouts/_header_user

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("MyHome", main_app.root_path)                                                                                                    >>
| [Escaped Output] link_to("Upgrade", subscriptionShow_path, :class => "btn btn-cta btn-cta-primary", :id => "cta_upgrade")                                 >>
| [Escaped Output] link_to("Goals", main_app.goal_path(current_user.goals.first.id))                                                                        >>
| [Escaped Output] top_linkage_for_mental_game.html_safe                                                                                                    >>
| [Escaped Output] link_to("Posts", main_app.microposts_path)                                                                                               >>
| [Escaped Output] link_to("Admin", main_app.old_admin_dashboards_path)                                                                                     >>
| [Escaped Output] link_to("Mark", main_app.old_admin_professionals_path)                                                                                   >>
| [Escaped Output] link_to("Settings", main_app.settings_users_path)                                                                                        >>
| [Escaped Output] link_to("Help", main_app.help_path)                                                                                                      >>
| [Escaped Output] link_to("Terminate", main_app.signout_path, :data => ({ :confirm => "Terminating as a guest member means you will lose all your guest dat>>
| [Escaped Output] link_to("Sign up", main_app.new_guest_convert_users_path, :class => "guest_sign_up")                                                     >>
| [Escaped Output] link_to("Sign out", main_app.signout_path)                                                                                               >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

layouts/_header_user.["Template:layouts/_header", "Template:layouts/_header_signed_in"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("MyHome", main_app.root_path)                                                                                                    >>
| [Escaped Output] link_to("Upgrade", subscriptionShow_path, :class => "btn btn-cta btn-cta-primary", :id => "cta_upgrade")                                 >>
| [Escaped Output] link_to("Goals", main_app.goal_path(current_user.goals.first.id))                                                                        >>
| [Escaped Output] top_linkage_for_mental_game.html_safe                                                                                                    >>
| [Escaped Output] link_to("Posts", main_app.microposts_path)                                                                                               >>
| [Escaped Output] link_to("Admin", main_app.old_admin_dashboards_path)                                                                                     >>
| [Escaped Output] link_to("Mark", main_app.old_admin_professionals_path)                                                                                   >>
| [Escaped Output] link_to("Settings", main_app.settings_users_path)                                                                                        >>
| [Escaped Output] link_to("Help", main_app.help_path)                                                                                                      >>
| [Escaped Output] link_to("Terminate", main_app.signout_path, :data => ({ :confirm => "Terminating as a guest member means you will lose all your guest dat>>
| [Escaped Output] link_to("Sign up", main_app.new_guest_convert_users_path, :class => "guest_sign_up")                                                     >>
| [Escaped Output] link_to("Sign out", main_app.signout_path)                                                                                               >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

layouts/_signed_in_footer

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("THE Golf Mentor", root_path, :id => "a_signed_in_footer")  |
| [Escaped Output] Time.now.year                                                       |
| [Escaped Output] link_to("Contact Support", contact_us_path, :class => "email_link") |
+--------------------------------------------------------------------------------------+

layouts/_signed_in_footer.["Template:layouts/application"]

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("THE Golf Mentor", root_path, :id => "a_signed_in_footer")  |
| [Escaped Output] Time.now.year                                                       |
| [Escaped Output] link_to("Contact Support", contact_us_path, :class => "email_link") |
+--------------------------------------------------------------------------------------+

layouts/application

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, @advert_hide)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] yield(:side_bar)                                               |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:container_insert)                                       |
| [Escaped Output] narrow_if_needed                                               |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, @advert_hide)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] advert_display(:bottom, @advert_hide)                          |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})              |
| [Escaped Output] root_path                                                      |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                  |
| [Escaped Output] render(partial => "shared/user_info", {})                      |
| [Escaped Output] yield(:side_menu)                                              |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")             |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:modals)                                                 |
+---------------------------------------------------------------------------------+

layouts/application.["AccountsController#paypal_dummy"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] title                                                                 |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})                      |
| [Escaped Output] yield(:meta)                                                          |
| [Escaped Output] csrf_meta_tag                                                         |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                          |
| [Escaped Output] stylesheet_link_tag("application")                                    |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)           |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {})        |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :top => true, :bottom => true, :side => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] yield(:side_bar)                                                      |
| [Escaped Output] render(partial => "layouts/footer", {})                               |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:container_insert)                                              |
| [Escaped Output] narrow_if_needed                                                      |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :top => true, :bottom => true, :side => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] advert_display(:bottom, :top => true, :bottom => true, :side => true) |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})                     |
| [Escaped Output] root_path                                                             |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                         |
| [Escaped Output] render(partial => "shared/user_info", {})                             |
| [Escaped Output] yield(:side_menu)                                                     |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                    |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:modals)                                                        |
+----------------------------------------------------------------------------------------+

layouts/application.["AnnouncementsController#new"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, @advert_hide)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] yield(:side_bar)                                               |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:container_insert)                                       |
| [Escaped Output] narrow_if_needed                                               |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, @advert_hide)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] advert_display(:bottom, @advert_hide)                          |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})              |
| [Escaped Output] root_path                                                      |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                  |
| [Escaped Output] render(partial => "shared/user_info", {})                      |
| [Escaped Output] yield(:side_menu)                                              |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")             |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:modals)                                                 |
+---------------------------------------------------------------------------------+

layouts/application.["LandingsController#teacher_search"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, :top => true)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] yield(:side_bar)                                               |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:container_insert)                                       |
| [Escaped Output] narrow_if_needed                                               |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, :top => true)                             |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] advert_display(:bottom, :top => true)                          |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})              |
| [Escaped Output] root_path                                                      |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                  |
| [Escaped Output] render(partial => "shared/user_info", {})                      |
| [Escaped Output] yield(:side_menu)                                              |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")             |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:modals)                                                 |
+---------------------------------------------------------------------------------+

layouts/application.["OldAdmin::AccountsController#TVerify"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] title                                                                 |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})                      |
| [Escaped Output] yield(:meta)                                                          |
| [Escaped Output] csrf_meta_tag                                                         |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                          |
| [Escaped Output] stylesheet_link_tag("application")                                    |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)           |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {})        |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :top => true, :side => true, :bottom => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] yield(:side_bar)                                                      |
| [Escaped Output] render(partial => "layouts/footer", {})                               |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:container_insert)                                              |
| [Escaped Output] narrow_if_needed                                                      |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :top => true, :side => true, :bottom => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] advert_display(:bottom, :top => true, :side => true, :bottom => true) |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})                     |
| [Escaped Output] root_path                                                             |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                         |
| [Escaped Output] render(partial => "shared/user_info", {})                             |
| [Escaped Output] yield(:side_menu)                                                     |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                    |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:modals)                                                        |
+----------------------------------------------------------------------------------------+

layouts/application.["PagesController#handicap_explanation"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] title                                                                 |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})                      |
| [Escaped Output] yield(:meta)                                                          |
| [Escaped Output] csrf_meta_tag                                                         |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                          |
| [Escaped Output] stylesheet_link_tag("application")                                    |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)           |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {})        |
| [Escaped Output] favicon_link_tag                                                      |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :side => true, :bottom => true, :top => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] yield(:side_bar)                                                      |
| [Escaped Output] render(partial => "layouts/footer", {})                               |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:container_insert)                                              |
| [Escaped Output] narrow_if_needed                                                      |
| [Escaped Output] render(partial => "layouts/header", {})                               |
| [Escaped Output] advert_display(:top, :side => true, :bottom => true, :top => true)    |
| [Escaped Output] yield(:section_insert)                                                |
| [Escaped Output] announcement_make                                                     |
| [Escaped Output] render(partial => "layouts/flash", {})                                |
| [Escaped Output] yield                                                                 |
| [Escaped Output] advert_display(:bottom, :side => true, :bottom => true, :top => true) |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})                     |
| [Escaped Output] root_path                                                             |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                         |
| [Escaped Output] render(partial => "shared/user_info", {})                             |
| [Escaped Output] yield(:side_menu)                                                     |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                    |
| [Escaped Output] debug(params)                                                         |
| [Escaped Output] render(partial => "layouts/google_codes", {})                         |
| [Escaped Output] yield(:modals)                                                        |
+----------------------------------------------------------------------------------------+

layouts/application.["ProUsersController#new"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, :top => true, :bottom => true)            |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] yield(:side_bar)                                               |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:container_insert)                                       |
| [Escaped Output] narrow_if_needed                                               |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] advert_display(:top, :top => true, :bottom => true)            |
| [Escaped Output] yield(:section_insert)                                         |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] advert_display(:bottom, :top => true, :bottom => true)         |
| [Escaped Output] render(partial => "layouts/signed_in_footer", {})              |
| [Escaped Output] root_path                                                      |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                  |
| [Escaped Output] render(partial => "shared/user_info", {})                      |
| [Escaped Output] yield(:side_menu)                                              |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")       |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")             |
| [Escaped Output] debug(params)                                                  |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
| [Escaped Output] yield(:modals)                                                 |
+---------------------------------------------------------------------------------+

layouts/application_ios

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
+---------------------------------------------------------------------------------+

layouts/application_ios.["Ios::SessionsController#new"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
+---------------------------------------------------------------------------------+

layouts/centrals

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
+---------------------------------------------------------------------------------+

layouts/centrals.["CentralsController#home"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] title                                                          |
| [Escaped Output] render(partial => "layouts/web_app_capable", {})               |
| [Escaped Output] yield(:meta)                                                   |
| [Escaped Output] csrf_meta_tag                                                  |
| [Escaped Output] render(partial => "layouts/stylesheets", {})                   |
| [Escaped Output] stylesheet_link_tag("application")                             |
| [Escaped Output] javascript_include_tag("application", :async => on_heroku?)    |
| [Escaped Output] render(partial => "shared/js/disable_transitions_if_test", {}) |
| [Escaped Output] favicon_link_tag                                               |
| [Escaped Output] announcement_make                                              |
| [Escaped Output] render(partial => "layouts/header", {})                        |
| [Escaped Output] render(partial => "layouts/flash", {})                         |
| [Escaped Output] yield                                                          |
| [Escaped Output] render(partial => "layouts/footer", {})                        |
| [Escaped Output] render(partial => "layouts/google_codes", {})                  |
+---------------------------------------------------------------------------------+

layouts/print

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] title                                                                                                                                    >>
| [Escaped Output] render(partial => "layouts/web_app_capable", {})                                                                                         >>
| [Escaped Output] yield(:meta)                                                                                                                             >>
| [Escaped Output] csrf_meta_tag                                                                                                                            >>
| [Escaped Output] render(partial => "layouts/stylesheets", {})                                                                                             >>
| [Escaped Output] stylesheet_link_tag("application")                                                                                                       >>
| [Escaped Output] javascript_include_tag("application")                                                                                                    >>
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                                           >>
| [Escaped Output] link_to("<span class ='glyphicon glyphicon-print'></span>".html_safe, "#", :onclick => "javascript:print()", :class => "print_link", :id >>
| [Escaped Output] link_to("Back", back_path, :class => "print_link")                                                                                       >>
| [Escaped Output] yield                                                                                                                                    >>
| [Escaped Output] image_tag("logo.png")                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

layouts/print.["DrillsController#print"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] title                                                                                                                                    >>
| [Escaped Output] render(partial => "layouts/web_app_capable", {})                                                                                         >>
| [Escaped Output] yield(:meta)                                                                                                                             >>
| [Escaped Output] csrf_meta_tag                                                                                                                            >>
| [Escaped Output] render(partial => "layouts/stylesheets", {})                                                                                             >>
| [Escaped Output] stylesheet_link_tag("application")                                                                                                       >>
| [Escaped Output] javascript_include_tag("application")                                                                                                    >>
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                                           >>
| [Escaped Output] link_to("<span class ='glyphicon glyphicon-print'></span>".html_safe, "#", :onclick => "javascript:print()", :class => "print_link", :id >>
| [Escaped Output] link_to("Back", back_path, :class => "print_link")                                                                                       >>
| [Escaped Output] yield                                                                                                                                    >>
| [Escaped Output] image_tag("logo.png")                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@linkage.errors.count, "error")                                                                                                >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] f.label(:category)                                                                                                                       >>
| [Escaped Output] f.text_field(:category)                                                                                                                  >>
| [Escaped Output] f.label(:address)                                                                                                                        >>
| [Escaped Output] f.text_area(:address)                                                                                                                    >>
| [Escaped Output] f.label(:title)                                                                                                                          >>
| [Escaped Output] f.text_field(:title)                                                                                                                     >>
| [Escaped Output] f.submit                                                                                                                                 >>
| [Escaped Output] form_for(@linkage) do; if @linkage.errors.any? then; [Escaped Output] pluralize(@linkage.errors.count, "error"); @linkage.errors.full_mes>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/_form.["LinkagesController#create", "Template:linkages/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Linkage.new(params[:linkage]).errors.count, "error")                                                                           >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:address)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_area(:address)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:title)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:title)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for(Linkage.new(params[:linkage])) do; if Linkage.new(params[:linkage]).errors.any? then; [Escaped Output] pluralize(Linkage.new(par>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/_form.["LinkagesController#edit", "Template:linkages/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Linkage.find(params[:id]).errors.count, "error")                                                                               >>
| [Escaped Output] (Unresolved Model).new                                                                                                                   >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:address)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_area(:address)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:title)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:title)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for(Linkage.find(params[:id])) do; if Linkage.find(params[:id]).errors.any? then; [Escaped Output] pluralize(Linkage.find(params[:id>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/_form.["LinkagesController#new", "Template:linkages/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Linkage.new.errors.count, "error")                                                                                             >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:address)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_area(:address)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:title)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:title)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for(Linkage.new) do; if Linkage.new.errors.any? then; [Escaped Output] pluralize(Linkage.new.errors.count, "error"); Linkage.new.err>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/_form.["Template:linkages/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@linkage.errors.count, "error")                                                                                                >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:address)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_area(:address)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:title)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:title)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for(@linkage) do; if @linkage.errors.any? then; [Escaped Output] pluralize(@linkage.errors.count, "error"); @linkage.errors.full_mes>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

linkages/blogs

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/blogs.["LinkagesController#blogs"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/curios

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/curios.["LinkagesController#curios"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/edit

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Show", @linkage)      |
| [Escaped Output] link_to("Back", linkages_path) |
+-------------------------------------------------+

linkages/edit.["LinkagesController#edit"]

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})              |
| [Escaped Output] link_to("Show", Linkage.find(params[:id])) |
| [Escaped Output] link_to("Back", linkages_path)             |
+-------------------------------------------------------------+

linkages/golf

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/golf.["LinkagesController#golf"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/index

+-----------------------------------------------------------------------------------------------+
| Output                                                                                        |
+-----------------------------------------------------------------------------------------------+
| [Escaped Output] linkage.category                                                             |
| [Escaped Output] linkage.address                                                              |
| [Escaped Output] linkage.title                                                                |
| [Escaped Output] link_to("Show", linkage)                                                     |
| [Escaped Output] link_to("Edit", edit_linkage_path(linkage))                                  |
| [Escaped Output] link_to("Destroy", linkage, :confirm => "Are you sure?", :method => :delete) |
| [Escaped Output] link_to("New Linkage", new_linkage_path)                                     |
+-----------------------------------------------------------------------------------------------+

linkages/index.["LinkagesController#index"]

+---------------------------------------------------------------------------------------------------+
| Output                                                                                            |
+---------------------------------------------------------------------------------------------------+
| [Escaped Output] Linkage.new.category                                                             |
| [Escaped Output] Linkage.new.address                                                              |
| [Escaped Output] Linkage.new.title                                                                |
| [Escaped Output] link_to("Show", Linkage.new)                                                     |
| [Escaped Output] link_to("Edit", edit_linkage_path(Linkage.new))                                  |
| [Escaped Output] link_to("Destroy", Linkage.new, :confirm => "Are you sure?", :method => :delete) |
| [Escaped Output] link_to("New Linkage", new_linkage_path)                                         |
+---------------------------------------------------------------------------------------------------+

linkages/links

+---------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Full Site Map", linkagesSiteMap_path)                                                     |
| [Escaped Output] link_to("Handicap Calculator", new_handicap_path)                                                  |
| [Escaped Output] link_to("Club Distances", club_distances_path)                                                     |
| [Escaped Output] link_to("New ProUser signup", pro_path)                                                            |
| [Escaped Output] link_to("About The Golf Mentor", about_path)                                                       |
| [Escaped Output] link_to("Contact The Golf Mentor", contact_us_path)                                                |
| [Escaped Output] link_to("Mental Game", mental_game_setups_path(:step_no => 1))                                     |
| [Escaped Output] link_to("Legal", legal_path)                                                                       |
| [Escaped Output] link_to("Top Tips", reviews_path)                                                                  |
| [Escaped Output] link_to("The Snappy Golf Blog", snappy_golf_path)                                                  |
| [Escaped Output] link_to("Public Goals", goals_path)                                                                |
| [Escaped Output] link_to("Landings", landings_path)                                                                 |
| [Escaped Output] link_to("Handicap Explanation", handicap_explanation_path)                                         |
| [Escaped Output] link_to("Facebook Quiz", fbQuizHR001_path)                                                         |
| [Escaped Output] link_to("Is Golf Driving you Nuts?", fbImproveGolf_path)                                           |
| [Escaped Output] link_to("Opt Out for Subscribers", google_opt_out_subscribers_path)                                |
| [Escaped Output] link_to("Opt Out for Users", google_opt_out_users_path)                                            |
| [Escaped Output] image_tag("ausgolf.png", :alt => "Ausgolf")                                                        |
| [Escaped Output] link_to("Australian Golf Courses, Golf Travel and Golf Equipment", "http://www.ausgolf.com.au")    |
| [Escaped Output] link_to("Interesting Blogs", linkagesBlogs_path)                                                   |
| [Escaped Output] link_to("Interesting Web Sites", linkagesGolf_path)                                                |
| [Escaped Output] link_to("Various Links", linkagesMisc_path)                                                        |
| [Escaped Output] link_to("Full Site Map", linkagesSiteMap_path)                                                     |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                  |
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/standard", {}); end |
+---------------------------------------------------------------------------------------------------------------------+

linkages/links.["LinkagesController#links"]

+---------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                              |
+---------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Full Site Map", linkagesSiteMap_path)                                                     |
| [Escaped Output] link_to("Handicap Calculator", new_handicap_path)                                                  |
| [Escaped Output] link_to("Club Distances", club_distances_path)                                                     |
| [Escaped Output] link_to("New ProUser signup", pro_path)                                                            |
| [Escaped Output] link_to("About The Golf Mentor", about_path)                                                       |
| [Escaped Output] link_to("Contact The Golf Mentor", contact_us_path)                                                |
| [Escaped Output] link_to("Mental Game", mental_game_setups_path(:step_no => 1))                                     |
| [Escaped Output] link_to("Legal", legal_path)                                                                       |
| [Escaped Output] link_to("Top Tips", reviews_path)                                                                  |
| [Escaped Output] link_to("The Snappy Golf Blog", snappy_golf_path)                                                  |
| [Escaped Output] link_to("Public Goals", goals_path)                                                                |
| [Escaped Output] link_to("Landings", landings_path)                                                                 |
| [Escaped Output] link_to("Handicap Explanation", handicap_explanation_path)                                         |
| [Escaped Output] link_to("Facebook Quiz", fbQuizHR001_path)                                                         |
| [Escaped Output] link_to("Is Golf Driving you Nuts?", fbImproveGolf_path)                                           |
| [Escaped Output] link_to("Opt Out for Subscribers", google_opt_out_subscribers_path)                                |
| [Escaped Output] link_to("Opt Out for Users", google_opt_out_users_path)                                            |
| [Escaped Output] image_tag("ausgolf.png", :alt => "Ausgolf")                                                        |
| [Escaped Output] link_to("Australian Golf Courses, Golf Travel and Golf Equipment", "http://www.ausgolf.com.au")    |
| [Escaped Output] link_to("Interesting Blogs", linkagesBlogs_path)                                                   |
| [Escaped Output] link_to("Interesting Web Sites", linkagesGolf_path)                                                |
| [Escaped Output] link_to("Various Links", linkagesMisc_path)                                                        |
| [Escaped Output] link_to("Full Site Map", linkagesSiteMap_path)                                                     |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                              |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                  |
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/standard", {}); end |
+---------------------------------------------------------------------------------------------------------------------+

linkages/misc

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/misc.["LinkagesController#misc"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] prepare(e).html_safe                              |
| [Escaped Output] link_to("New Link", new_linkage_path)             |
| [Escaped Output] advert_display(:bottom, @advert_hide)             |
| [Escaped Output] render(partial => "shared/sidebars/standard", {}) |
+--------------------------------------------------------------------+

linkages/new

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Back", linkages_path) |
+-------------------------------------------------+

linkages/new.["LinkagesController#new"]

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Back", linkages_path) |
+-------------------------------------------------+

linkages/show

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] notice                                       |
| [Escaped Output] @linkage.category                            |
| [Escaped Output] @linkage.address                             |
| [Escaped Output] @linkage.title                               |
| [Escaped Output] link_to("Edit", edit_linkage_path(@linkage)) |
| [Escaped Output] link_to("Back", linkages_path)               |
+---------------------------------------------------------------+

linkages/show.["LinkagesController#show"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] notice                                                        |
| [Escaped Output] Linkage.find(params[:id]).category                            |
| [Escaped Output] Linkage.find(params[:id]).address                             |
| [Escaped Output] Linkage.find(params[:id]).title                               |
| [Escaped Output] link_to("Edit", edit_linkage_path(Linkage.find(params[:id]))) |
| [Escaped Output] link_to("Back", linkages_path)                                |
+--------------------------------------------------------------------------------+

linkages/sitemap

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] advert_display(:bottom, @advert_hide) |
+--------------------------------------------------------+

linkages/sitemap.["LinkagesController#site_map"]

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] advert_display(:bottom, @advert_hide) |
+--------------------------------------------------------+

mental_games/counter

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @mental_game.counter_muted                                                                                                               >>
| [Escaped Output] @slide_period                                                                                                                            >>
| [Escaped Output] (1.0 / @mental_game.breaths_per_minute)                                                                                                  >>
| [Escaped Output] MentalGame::Serenity_period                                                                                                              >>
| [Escaped Output] @mental_game.counter_max                                                                                                                 >>
| [Escaped Output] @counter_elapsed                                                                                                                         >>
| [Escaped Output] (@mental_game.exercise_time - 1)                                                                                                         >>
| [Escaped Output] @user.id                                                                                                                                 >>
| [Escaped Output] javascript_tag do; [Escaped Output] @mental_game.counter_muted;[Escaped Output] @slide_period;[Escaped Output] (1.0 / @mental_game.breath>>
| [Escaped Output] link_to("Mental Game", mental_game_path(@mental_game), :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Edit Settings", edit_mental_game_path(@mental_game), :class => "side_menu_link")                                                >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path, :class => "side_menu_link")                                                                        >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/counter.["MentalGamesController#counter"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] current_user.mental_game.counter_muted                                                                                                   >>
| [Escaped Output] current_user.mental_game.slide_period                                                                                                    >>
| [Escaped Output] (1.0 / current_user.mental_game.breaths_per_minute)                                                                                      >>
| [Escaped Output] 60000                                                                                                                                    >>
| [Escaped Output] current_user.mental_game.counter_max                                                                                                     >>
| [Escaped Output] 0                                                                                                                                        >>
| [Escaped Output] (current_user.mental_game.exercise_time - 1)                                                                                             >>
| [Escaped Output] current_user.id                                                                                                                          >>
| [Escaped Output] javascript_tag do; [Escaped Output] current_user.mental_game.counter_muted;[Escaped Output] current_user.mental_game.slide_period;[Escape>>
| [Escaped Output] link_to("Mental Game", mental_game_path(current_user.mental_game), :class => "side_menu_link")                                           >>
| [Escaped Output] link_to("Edit Settings", edit_mental_game_path(current_user.mental_game), :class => "side_menu_link")                                    >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path, :class => "side_menu_link")                                                                        >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] mg.input(:breaths_per_minute, :collection => (2..15))                                                                                    >>
| [Escaped Output] mg.input(:exercise_time, :collection => (3..30), :hint => " minutes")                                                                    >>
| [Escaped Output] mg.input(:exercise_time_total, :hint => " minutes")                                                                                      >>
| [Escaped Output] mg.input(:exercise_time_target, :collection => ([100, 200, 300, 400, 500, 1000]), :hint => " minutes")                                   >>
| [Escaped Output] mg.input(:level, :collection => mental_game_level_list)                                                                                  >>
| [Escaped Output] mg.input(:pre_shot_description, :label_html => ({ :class => "text_block" }), :required => false, :hint => "Use a new paragraph for each s>>
| [Escaped Output] mg.button(:submit, "Update", :class => "btn btn-primary")                                                                                >>
| [Escaped Output] simple_form_for(@mental_game, :html => ({ :class => "form-horizontal", :wrapper => :horizontal_form, :wrapper_mappings => ({ :check_boxes>>
| [Escaped Output] link_to("Reset", reset_pre_shot_description_mental_game_path(@mental_game), :data => ({ :confirm => "Are you sure?" }), :class => "btn bt>>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] content_for(:side_menu) do; if signed_in? then; [Escaped Output] link_to("Back", :back, :class => "side_menu_link"); [Escaped Output] lin>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/edit.["MentalGamesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] mg.input(:breaths_per_minute, :collection => (2..15))                                                                                    >>
| [Escaped Output] mg.input(:exercise_time, :collection => (3..30), :hint => " minutes")                                                                    >>
| [Escaped Output] mg.input(:exercise_time_total, :hint => " minutes")                                                                                      >>
| [Escaped Output] mg.input(:exercise_time_target, :collection => ([100, 200, 300, 400, 500, 1000]), :hint => " minutes")                                   >>
| [Escaped Output] mg.input(:level, :collection => mental_game_level_list)                                                                                  >>
| [Escaped Output] mg.input(:pre_shot_description, :label_html => ({ :class => "text_block" }), :required => false, :hint => "Use a new paragraph for each s>>
| [Escaped Output] mg.button(:submit, "Update", :class => "btn btn-primary")                                                                                >>
| [Escaped Output] simple_form_for(current_user.mental_game, :html => ({ :class => "form-horizontal", :wrapper => :horizontal_form, :wrapper_mappings => ({ >>
| [Escaped Output] link_to("Reset", reset_pre_shot_description_mental_game_path(current_user.mental_game), :data => ({ :confirm => "Are you sure?" }), :clas>>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] content_for(:side_menu) do; if signed_in? then; [Escaped Output] link_to("Back", :back, :class => "side_menu_link"); [Escaped Output] lin>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/faq

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Why is the Mental Game Important?", "#important")                                                                               >>
| [Escaped Output] link_to("What is the Awareness Exercise?", "#brain_exercise")                                                                            >>
| [Escaped Output] link_to("What is a swing thought?", "#swing_thought")                                                                                    >>
| [Escaped Output] link_to("What is the Pre-Shot Routine?", "#pre_shot")                                                                                    >>
| [Escaped Output] link_to("How do I track my progress?", "#track_progress")                                                                                >>
| [Escaped Output] link_to("What does cognitive science tell us?", "#cognitive_science")                                                                    >>
| [Escaped Output] link_to("Why is positive thinking important?", "#positive_thinking")                                                                     >>
| [Escaped Output] link_to("How do I approach meditation?", "#meditate")                                                                                    >>
| [Escaped Output] link_to("How do Buddhist techniques help?", "#buddhist_techniques")                                                                      >>
| [Escaped Output] link_to("Will this all slow down my play?", "#slow")                                                                                     >>
| [Escaped Output] link_to("How should I prepare before a match?", "#prepare")                                                                              >>
| [Escaped Output] link_to("Why am I still hitting bad shots?", "#bad_shots")                                                                               >>
| [Escaped Output] link_to("How is the mental game score calculated?", "#score")                                                                            >>
| [Escaped Output] link_to("What is the awareness test?", "#levels")                                                                                        >>
| [Escaped Output] link_to("How does my mental game level change?", "#level_change")                                                                        >>
| [Escaped Output] link_to("How many chances do I have with each test?", "#chances")                                                                        >>
| [Escaped Output] link_to("What is a brain-snap error?", "#brain_snap")                                                                                    >>
| [Escaped Output] link_to("Is there an Iphone or Android app?", "#iphone")                                                                                 >>
| [Escaped Output] link_to("Why is awareness important in everyday life?", "#awareness")                                                                    >>
| [Escaped Output] link_to("- The Agendas of Mindfulness", "http://www.accesstoinsight.org/lib/authors/thanissaro/agendas.html", :target => "_blank")       >>
| [Escaped Output] link_to("smartphone", "#iphone")                                                                                                         >>
| [Escaped Output] MentalGame::Errors_max                                                                                                                   >>
| [Escaped Output] number_to_word(MentalGame::Level_max)                                                                                                    >>
| [Escaped Output] MentalGame::Level_max                                                                                                                    >>
| [Escaped Output] ((10 * (MentalGame::Level_max - 1)) + 5)                                                                                                 >>
| [Escaped Output] MentalGame.level_name(l)                                                                                                                 >>
| [Escaped Output] level_descriptions(l)                                                                                                                    >>
| [Escaped Output] MentalGame::Errors_pass                                                                                                                  >>
| [Escaped Output] MentalGame::Errors_max                                                                                                                   >>
| [Escaped Output] link_to("Positive Psychology: Harnessing the power of happiness, mindfulness, and inner strength", "http://www.health.harvard.edu/promoti>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/faq.["MentalGamesController#faq"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Why is the Mental Game Important?", "#important")                                                                               >>
| [Escaped Output] link_to("What is the Awareness Exercise?", "#brain_exercise")                                                                            >>
| [Escaped Output] link_to("What is a swing thought?", "#swing_thought")                                                                                    >>
| [Escaped Output] link_to("What is the Pre-Shot Routine?", "#pre_shot")                                                                                    >>
| [Escaped Output] link_to("How do I track my progress?", "#track_progress")                                                                                >>
| [Escaped Output] link_to("What does cognitive science tell us?", "#cognitive_science")                                                                    >>
| [Escaped Output] link_to("Why is positive thinking important?", "#positive_thinking")                                                                     >>
| [Escaped Output] link_to("How do I approach meditation?", "#meditate")                                                                                    >>
| [Escaped Output] link_to("How do Buddhist techniques help?", "#buddhist_techniques")                                                                      >>
| [Escaped Output] link_to("Will this all slow down my play?", "#slow")                                                                                     >>
| [Escaped Output] link_to("How should I prepare before a match?", "#prepare")                                                                              >>
| [Escaped Output] link_to("Why am I still hitting bad shots?", "#bad_shots")                                                                               >>
| [Escaped Output] link_to("How is the mental game score calculated?", "#score")                                                                            >>
| [Escaped Output] link_to("What is the awareness test?", "#levels")                                                                                        >>
| [Escaped Output] link_to("How does my mental game level change?", "#level_change")                                                                        >>
| [Escaped Output] link_to("How many chances do I have with each test?", "#chances")                                                                        >>
| [Escaped Output] link_to("What is a brain-snap error?", "#brain_snap")                                                                                    >>
| [Escaped Output] link_to("Is there an Iphone or Android app?", "#iphone")                                                                                 >>
| [Escaped Output] link_to("Why is awareness important in everyday life?", "#awareness")                                                                    >>
| [Escaped Output] link_to("- The Agendas of Mindfulness", "http://www.accesstoinsight.org/lib/authors/thanissaro/agendas.html", :target => "_blank")       >>
| [Escaped Output] link_to("smartphone", "#iphone")                                                                                                         >>
| [Escaped Output] 9                                                                                                                                        >>
| [Escaped Output] number_to_word(5)                                                                                                                        >>
| [Escaped Output] 5                                                                                                                                        >>
| [Escaped Output] 45                                                                                                                                       >>
| [Escaped Output] MentalGame.level_name(l)                                                                                                                 >>
| [Escaped Output] level_descriptions(l)                                                                                                                    >>
| [Escaped Output] 2                                                                                                                                        >>
| [Escaped Output] 9                                                                                                                                        >>
| [Escaped Output] link_to("Positive Psychology: Harnessing the power of happiness, mindfulness, and inner strength", "http://www.health.harvard.edu/promoti>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/old_awareness_tests

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] MentalGame.level_name(1)                     |
| [Escaped Output] number_to_word(MentalGame::Golf_count_start) |
| [Escaped Output] MentalGame.level_name(2)                     |
| [Escaped Output] number_to_word(MentalGame::Golf_count_start) |
| [Escaped Output] MentalGame.level_name(3)                     |
| [Escaped Output] number_to_word(MentalGame::Golf_count_start) |
| [Escaped Output] MentalGame.level_name(4)                     |
| [Escaped Output] number_to_word(MentalGame::Golf_count_start) |
| [Escaped Output] MentalGame.level_name(5)                     |
+---------------------------------------------------------------+

mental_games/old_awareness_tests.["MentalGamesController#old_awareness_tests"]

+-------------------------------------------+
| Output                                    |
+-------------------------------------------+
| [Escaped Output] MentalGame.level_name(1) |
| [Escaped Output] number_to_word(2)        |
| [Escaped Output] MentalGame.level_name(2) |
| [Escaped Output] number_to_word(2)        |
| [Escaped Output] MentalGame.level_name(3) |
| [Escaped Output] number_to_word(2)        |
| [Escaped Output] MentalGame.level_name(4) |
| [Escaped Output] number_to_word(2)        |
| [Escaped Output] MentalGame.level_name(5) |
+-------------------------------------------+

mental_games/pre_shot

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] level_descriptions(@user.mental_game.level)                                       |
| [Escaped Output] sanitize(@description, :tags => (["ul", "li", "ol"]), :attributes => (["style"])) |
+----------------------------------------------------------------------------------------------------+

mental_games/pre_shot.["MentalGamesController#pre_shot"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] level_descriptions(current_user.mental_game.level)                                                                                       >>
| [Escaped Output] sanitize(MentalGame.format_description(current_user.mental_game.pre_shot_description).html_safe, :tags => (["ul", "li", "ol"]), :attribut>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("mental game tutorial", mental_game_setups_path(:step_no => 1))                                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                                                                    >>
| [Escaped Output] @mental_game.level_name                                                                                                                  >>
| [Escaped Output] level_descriptions(@mental_game.level)                                                                                                   >>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph) })                                                               >>
| [Escaped Output] @mental_game.exercise_time_target                                                                                                        >>
| [Escaped Output] @mental_game.exercise_time_total.round(0)                                                                                                >>
| [Escaped Output] @mental_game.breaths_per_minute                                                                                                          >>
| [Escaped Output] @mental_game.exercise_time                                                                                                               >>
| [Escaped Output] link_to("Edit Settings", edit_mental_game_path(@mental_game), :class => "btn btn-primary small_button", :id => "edit_settings")          >>
| [Escaped Output] sanitize(@description, :tags => (["ul", "li", "ol"]), :attributes => (["style"]))                                                        >>
| [Escaped Output] link_to("Edit Pre-Shot", edit_mental_game_path(@mental_game, :anchor => "reset"), :class => "btn btn-primary small_button", :id => "edit_>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Exercise", counter_mental_games_path, :class => "side_menu_link")                                                               >>
| [Escaped Output] link_to("Print Reminder", pre_shot_mental_game_path(:id => @mental_game.id), :class => "side_menu_link")                                 >>
| [Escaped Output] link_to("Tutorial", mental_game_setups_path(:step_no => 1), :class => "side_menu_link")                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path, :class => "side_menu_link")                                                                        >>
| [Escaped Output] link_to("Superceded Tests", old_awareness_tests_mental_games_path, :class => "side_menu_link")                                           >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
| [Escaped Output] raw(@graph_donut.data.to_json)                                                                                                           >>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(@graph_donut.data.to_json); end                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/show.["MentalGamesController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("mental game tutorial", mental_game_setups_path(:step_no => 1))                                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                                                                    >>
| [Escaped Output] current_user.mental_game.level_name                                                                                                      >>
| [Escaped Output] level_descriptions(current_user.mental_game.level)                                                                                       >>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_mental_posts(cookies[:graph_duration], current_user.games.in>>
| [Escaped Output] current_user.mental_game.exercise_time_target                                                                                            >>
| [Escaped Output] current_user.mental_game.exercise_time_total.round(0)                                                                                    >>
| [Escaped Output] current_user.mental_game.breaths_per_minute                                                                                              >>
| [Escaped Output] current_user.mental_game.exercise_time                                                                                                   >>
| [Escaped Output] link_to("Edit Settings", edit_mental_game_path(current_user.mental_game), :class => "btn btn-primary small_button", :id => "edit_settings>>
| [Escaped Output] sanitize(MentalGame.format_description(current_user.mental_game.pre_shot_description).html_safe, :tags => (["ul", "li", "ol"]), :attribut>>
| [Escaped Output] link_to("Edit Pre-Shot", edit_mental_game_path(current_user.mental_game, :anchor => "reset"), :class => "btn btn-primary small_button", :>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Exercise", counter_mental_games_path, :class => "side_menu_link")                                                               >>
| [Escaped Output] link_to("Print Reminder", pre_shot_mental_game_path(:id => current_user.mental_game.id), :class => "side_menu_link")                     >>
| [Escaped Output] link_to("Tutorial", mental_game_setups_path(:step_no => 1), :class => "side_menu_link")                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path, :class => "side_menu_link")                                                                        >>
| [Escaped Output] link_to("Superceded Tests", old_awareness_tests_mental_games_path, :class => "side_menu_link")                                           >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
| [Escaped Output] raw(GraphDonut.new(:total => current_user.mental_game.exercise_time_total.round(0), :target => current_user.mental_game.exercise_time_tar>>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(GraphDonut.new(:total => current_user.mental_game.exercise_time_total.round>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

mental_games/show.["MentalGamesController#update"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("mental game tutorial", mental_game_setups_path(:step_no => 1))                                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                                                                    >>
| [Escaped Output] current_user.mental_game.level_name                                                                                                      >>
| [Escaped Output] level_descriptions(current_user.mental_game.level)                                                                                       >>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_mental_posts(cookies[:graph_duration], current_user.games.in>>
| [Escaped Output] current_user.mental_game.exercise_time_target                                                                                            >>
| [Escaped Output] current_user.mental_game.exercise_time_total.round(0)                                                                                    >>
| [Escaped Output] current_user.mental_game.breaths_per_minute                                                                                              >>
| [Escaped Output] current_user.mental_game.exercise_time                                                                                                   >>
| [Escaped Output] link_to("Edit Settings", edit_mental_game_path(current_user.mental_game), :class => "btn btn-primary small_button", :id => "edit_settings>>
| [Escaped Output] sanitize(MentalGame.format_description(current_user.mental_game.pre_shot_description).html_safe, :tags => (["ul", "li", "ol"]), :attribut>>
| [Escaped Output] link_to("Edit Pre-Shot", edit_mental_game_path(current_user.mental_game, :anchor => "reset"), :class => "btn btn-primary small_button", :>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Exercise", counter_mental_games_path, :class => "side_menu_link")                                                               >>
| [Escaped Output] link_to("Print Reminder", pre_shot_mental_game_path(:id => current_user.mental_game.id), :class => "side_menu_link")                     >>
| [Escaped Output] link_to("Tutorial", mental_game_setups_path(:step_no => 1), :class => "side_menu_link")                                                  >>
| [Escaped Output] link_to("FAQ", faq_mental_games_path, :class => "side_menu_link")                                                                        >>
| [Escaped Output] link_to("Superceded Tests", old_awareness_tests_mental_games_path, :class => "side_menu_link")                                           >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
| [Escaped Output] raw(GraphDonut.new(:total => current_user.mental_game.exercise_time_total, :target => current_user.mental_game.exercise_time_target).data>>
| [Escaped Output] javascript_tag(:id => "window_vars") do; [Escaped Output] raw(GraphDonut.new(:total => current_user.mental_game.exercise_time_total, :tar>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => micropost }) })                                            >>
| [Escaped Output] render(partial => "microposts/games/field", { :locals => ({ :game => micropost, :user => user }) })                                      >>
| [Escaped Output] post_panel(title) do; [Escaped Output] render(partial => "microposts/games/field", { :locals => ({ :game => micropost, :user => user }) }>>
| [Escaped Output] render(partial => "microposts/practice_or_lesson", { :micropost => micropost })                                                          >>
| [Escaped Output] post_panel(title) do; [Escaped Output] render(partial => "microposts/practice_or_lesson", { :micropost => micropost }); end              >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost.["Eclubs::MembersController#show", "Template:eclubs/members/show", "Template:microposts/_microposts"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => User.new }) })                                             >>
| [Escaped Output] render(partial => "microposts/games/field", { :locals => ({ :game => User.new, :user => current_user }) })                               >>
| [Escaped Output] post_panel(capture do; [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => User.new }) }); end>>
| [Escaped Output] render(partial => "microposts/practice_or_lesson", { :micropost => User.new })                                                           >>
| [Escaped Output] post_panel(capture do; [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => User.new }) }); end>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost.["Template:eclubs/members/show", "Template:microposts/_microposts"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => (Unresolved Model).new }) })                               >>
| [Escaped Output] render(partial => "microposts/games/field", { :locals => ({ :game => (Unresolved Model).new, :user => current_user }) })                 >>
| [Escaped Output] post_panel(capture do; [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => (Unresolved Model).>>
| [Escaped Output] render(partial => "microposts/practice_or_lesson", { :micropost => (Unresolved Model).new })                                             >>
| [Escaped Output] post_panel(capture do; [Escaped Output] render(partial => "microposts/micropost_title", { :locals => ({ :micropost => (Unresolved Model).>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost_title

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] micropost.classification                                                                                                                 >>
| [Escaped Output] link_to(edit_icon, pathway, :id => "edit_post", :data => spin_large_when_loading(""))                                                    >>
| [Escaped Output] link_to(trash_icon, [:microposts, micropost], :data => ({ :confirm => "Are you sure?", :disable_with => spin_large_when_loading("").value>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost_title.["Eclubs::MembersController#show", "Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micr>>

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] User.new.classification                                                                                                                  >>
| [Escaped Output] link_to(edit_icon, ((edit_microposts_game_path(User.new) or edit_microposts_lesson_path(User.new)) or edit_microposts_practice_path(User.>>
| [Escaped Output] link_to(trash_icon, [:microposts, User.new], :data => ({ :confirm => "Are you sure?", :disable_with => spin_large_when_loading("").values>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_micropost_title.["Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micropost"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (Unresolved Model).new.classification                                                                                                    >>
| [Escaped Output] link_to(edit_icon, ((edit_microposts_game_path((Unresolved Model).new) or edit_microposts_lesson_path((Unresolved Model).new)) or edit_mi>>
| [Escaped Output] link_to(trash_icon, [:microposts, (Unresolved Model).new], :data => ({ :confirm => "Are you sure?", :disable_with => spin_large_when_load>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_microposts

+-----------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                        |
+-----------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/micropost", { :collection => (@microposts), :locals => ({ :user => user }), :cached => true }) |
| [Escaped Output] paginate(@microposts)                                                                                                        |
+-----------------------------------------------------------------------------------------------------------------------------------------------+

microposts/_microposts.["Eclubs::MembersController#show", "Template:eclubs/members/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost", { :collection => User.find_by_id(params[:id]).games.includes(:user).page(params[:page]).per(5),>>
| [Escaped Output] paginate(User.find_by_id(params[:id]).games.includes(:user).page(params[:page]).per(5))                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_microposts.["PagesController#home", "Template:pages/myhome"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost", { :collection => current_user.microposts.page(params[:page]).per(5), :locals => ({ :user => cur>>
| [Escaped Output] paginate(current_user.microposts.page(params[:page]).per(5))                                                                             >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_microposts.["StudentsController#show_myhome", "Template:students/show_myhome"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "microposts/micropost", { :collection => (current_user or current_user.students.find_by_id(params[:id])).feed.page(para>>
| [Escaped Output] paginate((current_user or current_user.students.find_by_id(params[:id])).feed.page(params[:page]).per(5))                                >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/_microposts.["Template:eclubs/members/show"]

+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/micropost", { :collection => (@microposts), :locals => ({ :user => current_user }), :cached => true }) |
| [Escaped Output] paginate(@microposts)                                                                                                                |
+-------------------------------------------------------------------------------------------------------------------------------------------------------+

microposts/_practice_or_lesson

+-----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                  |
+-----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] micropost.duration                                                                                                     |
| [Escaped Output] micropost.focus                                                                                                        |
| [Escaped Output] micropost.outcome                                                                                                      |
| [Escaped Output] datePretty(micropost.date_of_post)                                                                                     |
| [Escaped Output] micropost.place                                                                                                        |
| [Escaped Output] wrap(micropost.content)                                                                                                |
| [Escaped Output] details_panel("Details", micropost) do; [Escaped Output] micropost.place;[Escaped Output] wrap(micropost.content); end |
+-----------------------------------------------------------------------------------------------------------------------------------------+

microposts/_practice_or_lesson.["Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micropost"]

+-----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                  |
+-----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] micropost.duration                                                                                                     |
| [Escaped Output] micropost.focus                                                                                                        |
| [Escaped Output] micropost.outcome                                                                                                      |
| [Escaped Output] datePretty(micropost.date_of_post)                                                                                     |
| [Escaped Output] micropost.place                                                                                                        |
| [Escaped Output] wrap(micropost.content)                                                                                                |
| [Escaped Output] details_panel("Details", micropost) do; [Escaped Output] micropost.place;[Escaped Output] wrap(micropost.content); end |
+-----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/_field

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] game.score                                                                                                                               >>
| [Escaped Output] game.stableford_score                                                                                                                    >>
| [Escaped Output] game.handicap.try(:round, 1)                                                                                                             >>
| [Escaped Output] game.slope_index                                                                                                                         >>
| [Escaped Output] game.handicap.try(:round, 1)                                                                                                             >>
| [Escaped Output] game.handicap.try(:round, 1)                                                                                                             >>
| [Escaped Output] datePretty(game.date_of_post)                                                                                                            >>
| [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => user, :game => game }) })                                      >>
| [Escaped Output] details_panel("Details", game) do; [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => user, :game>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/_field.["Eclubs::MembersController#show", "Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micropos>>

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] User.new.score                                                                                                                           >>
| [Escaped Output] User.new.stableford_score                                                                                                                >>
| [Escaped Output] User.new.handicap.round(1)                                                                                                               >>
| [Escaped Output] User.new.slope_index                                                                                                                     >>
| [Escaped Output] User.new.handicap.round(1)                                                                                                               >>
| [Escaped Output] User.new.handicap.round(1)                                                                                                               >>
| [Escaped Output] datePretty(User.new.date_of_post)                                                                                                        >>
| [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => current_user, :game => User.new }) })                          >>
| [Escaped Output] details_panel("Details", User.new) do; [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => current>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/_field.["PagesController#home", "Template:pages/myhome", "Template:microposts/_microposts", "Template:microposts/_micropost"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (Unresolved Model).new.score                                                                                                             >>
| [Escaped Output] (Unresolved Model).new.stableford_score                                                                                                  >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] (Unresolved Model).new.slope_index                                                                                                       >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] datePretty((Unresolved Model).new.date_of_post)                                                                                          >>
| [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => current_user, :game => (Unresolved Model).new }) })            >>
| [Escaped Output] details_panel("Details", (Unresolved Model).new) do; [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :u>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/_field.["Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micropost"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (Unresolved Model).new.score                                                                                                             >>
| [Escaped Output] (Unresolved Model).new.stableford_score                                                                                                  >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] (Unresolved Model).new.slope_index                                                                                                       >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] (Unresolved Model).new.handicap.round(1)                                                                                                 >>
| [Escaped Output] datePretty((Unresolved Model).new.date_of_post)                                                                                          >>
| [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :user => current_user, :game => (Unresolved Model).new }) })            >>
| [Escaped Output] details_panel("Details", (Unresolved Model).new) do; [Escaped Output] render(partial => "microposts/games/field_more", { :locals => ({ :u>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/_field_more

+-----------------------------------------+
| Output                                  |
+-----------------------------------------+
| [Escaped Output] game.slope_index       |
| [Escaped Output] game.mental_game_score |
| [Escaped Output] game.perfect_holes     |
| [Escaped Output] game.best              |
| [Escaped Output] game.weakest           |
| [Escaped Output] game.place             |
| [Escaped Output] game.happiness         |
| [Escaped Output] wrap(game.content)     |
+-----------------------------------------+

microposts/games/_field_more.["Eclubs::MembersController#show", "Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_mic>>

+---------------------------------------------+
| Output                                      |
+---------------------------------------------+
| [Escaped Output] User.new.slope_index       |
| [Escaped Output] User.new.mental_game_score |
| [Escaped Output] User.new.perfect_holes     |
| [Escaped Output] User.new.best              |
| [Escaped Output] User.new.weakest           |
| [Escaped Output] User.new.place             |
| [Escaped Output] User.new.happiness         |
| [Escaped Output] wrap(User.new.content)     |
+---------------------------------------------+

microposts/games/_field_more.["PagesController#home", "Template:pages/myhome", "Template:microposts/_microposts", "Template:microposts/_micropost", "Templat>>

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] (Unresolved Model).new.slope_index       |
| [Escaped Output] (Unresolved Model).new.mental_game_score |
| [Escaped Output] (Unresolved Model).new.perfect_holes     |
| [Escaped Output] (Unresolved Model).new.best              |
| [Escaped Output] (Unresolved Model).new.weakest           |
| [Escaped Output] (Unresolved Model).new.place             |
| [Escaped Output] (Unresolved Model).new.happiness         |
| [Escaped Output] wrap((Unresolved Model).new.content)     |
+-----------------------------------------------------------+

microposts/games/_field_more.["Template:eclubs/members/show", "Template:microposts/_microposts", "Template:microposts/_micropost", "Template:microposts/game>>

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] (Unresolved Model).new.slope_index       |
| [Escaped Output] (Unresolved Model).new.mental_game_score |
| [Escaped Output] (Unresolved Model).new.perfect_holes     |
| [Escaped Output] (Unresolved Model).new.best              |
| [Escaped Output] (Unresolved Model).new.weakest           |
| [Escaped Output] (Unresolved Model).new.place             |
| [Escaped Output] (Unresolved Model).new.happiness         |
| [Escaped Output] wrap((Unresolved Model).new.content)     |
+-----------------------------------------------------------+

microposts/games/_form

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:score, :placeholder => "Strokes above par", :input_html => ({ :max => 99, :min => 0 }))                      |
| [Escaped Output] f.input(:slope_index, :label => "Course Rating", :collection => slopeList)                                            |
| [Escaped Output] f.input(:stableford_score, :collection => stablefordList)                                                             |
| [Escaped Output] f.input(:handicap, :label => "GA Handicap", :input_html => ({ :step => 0.1 }))                                        |
| [Escaped Output] f.input(:handicap, :label => "Handicap Index", :input_html => ({ :step => 0.1 }))                                     |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date of Game", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => ("Location of #{@game.classification}"))                                              |
| [Escaped Output] f.input(:best, :label => "Best Aspect", :collection => aspects_of_game)                                               |
| [Escaped Output] f.input(:weakest, :label => "Weakest Aspect", :collection => aspects_of_game)                                         |
| [Escaped Output] f.input(:mental_game_errors, :label => "Mental Errors", :collection => (0..9).to_a)                                   |
| [Escaped Output] f.input(:perfect_holes, :collection => (0..18).to_a)                                                                  |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/_form.["Microposts::GamesController#create", "Template:microposts/games/new"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:score, :placeholder => "Strokes above par", :input_html => ({ :max => 99, :min => 0 }))                      |
| [Escaped Output] f.input(:slope_index, :label => "Course Rating", :collection => slopeList)                                            |
| [Escaped Output] f.input(:stableford_score, :collection => stablefordList)                                                             |
| [Escaped Output] f.input(:handicap, :label => "GA Handicap", :input_html => ({ :step => 0.1 }))                                        |
| [Escaped Output] f.input(:handicap, :label => "Handicap Index", :input_html => ({ :step => 0.1 }))                                     |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date of Game", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => ("Location of #{current_user.games.build(params[:game]).classification}"))            |
| [Escaped Output] f.input(:best, :label => "Best Aspect", :collection => aspects_of_game)                                               |
| [Escaped Output] f.input(:weakest, :label => "Weakest Aspect", :collection => aspects_of_game)                                         |
| [Escaped Output] f.input(:mental_game_errors, :label => "Mental Errors", :collection => (0..9).to_a)                                   |
| [Escaped Output] f.input(:perfect_holes, :collection => (0..18).to_a)                                                                  |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/_form.["Microposts::GamesController#edit", "Template:microposts/games/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:score, :placeholder => "Strokes above par", :input_html => ({ :max => 99, :min => 0 }))                      |
| [Escaped Output] f.input(:slope_index, :label => "Course Rating", :collection => slopeList)                                            |
| [Escaped Output] f.input(:stableford_score, :collection => stablefordList)                                                             |
| [Escaped Output] f.input(:handicap, :label => "GA Handicap", :input_html => ({ :step => 0.1 }))                                        |
| [Escaped Output] f.input(:handicap, :label => "Handicap Index", :input_html => ({ :step => 0.1 }))                                     |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date of Game", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => ("Location of #{current_user.games.find_by_id(params[:id]).classification}"))         |
| [Escaped Output] f.input(:best, :label => "Best Aspect", :collection => aspects_of_game)                                               |
| [Escaped Output] f.input(:weakest, :label => "Weakest Aspect", :collection => aspects_of_game)                                         |
| [Escaped Output] f.input(:mental_game_errors, :label => "Mental Errors", :collection => (0..9).to_a)                                   |
| [Escaped Output] f.input(:perfect_holes, :collection => (0..18).to_a)                                                                  |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/_form.["Microposts::GamesController#new", "Template:microposts/games/new"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:score, :placeholder => "Strokes above par", :input_html => ({ :max => 99, :min => 0 }))                      |
| [Escaped Output] f.input(:slope_index, :label => "Course Rating", :collection => slopeList)                                            |
| [Escaped Output] f.input(:stableford_score, :collection => stablefordList)                                                             |
| [Escaped Output] f.input(:handicap, :label => "GA Handicap", :input_html => ({ :step => 0.1 }))                                        |
| [Escaped Output] f.input(:handicap, :label => "Handicap Index", :input_html => ({ :step => 0.1 }))                                     |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date of Game", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => ("Location of #{Game.new.classification}"))                                           |
| [Escaped Output] f.input(:best, :label => "Best Aspect", :collection => aspects_of_game)                                               |
| [Escaped Output] f.input(:weakest, :label => "Weakest Aspect", :collection => aspects_of_game)                                         |
| [Escaped Output] f.input(:mental_game_errors, :label => "Mental Errors", :collection => (0..9).to_a)                                   |
| [Escaped Output] f.input(:perfect_holes, :collection => (0..18).to_a)                                                                  |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/_form.["Template:microposts/games/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:score, :placeholder => "Strokes above par", :input_html => ({ :max => 99, :min => 0 }))                      |
| [Escaped Output] f.input(:slope_index, :label => "Course Rating", :collection => slopeList)                                            |
| [Escaped Output] f.input(:stableford_score, :collection => stablefordList)                                                             |
| [Escaped Output] f.input(:handicap, :label => "GA Handicap", :input_html => ({ :step => 0.1 }))                                        |
| [Escaped Output] f.input(:handicap, :label => "Handicap Index", :input_html => ({ :step => 0.1 }))                                     |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date of Game", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => ("Location of #{@game.classification}"))                                              |
| [Escaped Output] f.input(:best, :label => "Best Aspect", :collection => aspects_of_game)                                               |
| [Escaped Output] f.input(:weakest, :label => "Weakest Aspect", :collection => aspects_of_game)                                         |
| [Escaped Output] f.input(:mental_game_errors, :label => "Mental Errors", :collection => (0..9).to_a)                                   |
| [Escaped Output] f.input(:perfect_holes, :collection => (0..18).to_a)                                                                  |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------+

microposts/games/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @game]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "form", { :f => f });[>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/edit.["Microposts::GamesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.games.find_by_id(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] ren>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/help

+-----------------------------------------------------+
| Output                                              |
+-----------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)       |
| [Escaped Output] render(partial => "help_text", {}) |
+-----------------------------------------------------+

microposts/games/help.["Microposts::GamesController#help"]

+-----------------------------------------------------+
| Output                                              |
+-----------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)       |
| [Escaped Output] render(partial => "help_text", {}) |
+-----------------------------------------------------+

microposts/games/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @game], :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] f.error_notification>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", addPostHelp_path, :class => "side_menu_link")                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/new.["Microposts::GamesController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.games.build(params[:game])], :defaults => ({ :placeholder => false, :hint => false })) do; [Es>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", addPostHelp_path, :class => "side_menu_link")                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/games/new.["Microposts::GamesController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, Game.new], :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] f.error_notificat>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", addPostHelp_path, :class => "side_menu_link")                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/index

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] csrf_meta_tags                                                                                                                           >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] csrf_meta_tags; end                                                                              >>
| [Escaped Output] datePretty(micropost.date_of_post)                                                                                                       >>
| [Escaped Output] micropost.classification                                                                                                                 >>
| [Escaped Output] micropost.place                                                                                                                          >>
| [Escaped Output] micropost.score                                                                                                                          >>
| [Escaped Output] micropost.duration                                                                                                                       >>
| [Escaped Output] link_to("Edit", pathway_edit_post(micropost), :class => "btn btn-primary btn-xs")                                                        >>
| [Escaped Output] link_to("Delete", [:microposts, micropost], :data => ({ :confirm => "Are you sure?" }), :method => :delete, :class => "btn btn-primary bt>>
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                                                                     >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/index.["MicropostsController#index"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] csrf_meta_tags                                                                                                                           >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] csrf_meta_tags; end                                                                              >>
| [Escaped Output] datePretty(micropost.date_of_post)                                                                                                       >>
| [Escaped Output] micropost.classification                                                                                                                 >>
| [Escaped Output] micropost.place                                                                                                                          >>
| [Escaped Output] micropost.score                                                                                                                          >>
| [Escaped Output] micropost.duration                                                                                                                       >>
| [Escaped Output] link_to("Edit", pathway_edit_post(micropost), :class => "btn btn-primary btn-xs")                                                        >>
| [Escaped Output] link_to("Delete", [:microposts, micropost], :data => ({ :confirm => "Are you sure?" }), :method => :delete, :class => "btn btn-primary bt>>
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                                                                     >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/lessons/_fields

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:duration, :collection => aspects_of_duration)                                                        |
| [Escaped Output] f.input(:focus, :collection => aspects_of_practice)                                                           |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => "Location")                                                                   |
| [Escaped Output] f.input(:outcome, :collection => aspects_of_outcome)                                                          |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------+

microposts/lessons/_fields.["Template:microposts/lessons/edit"]

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:duration, :collection => aspects_of_duration)                                                        |
| [Escaped Output] f.input(:focus, :collection => aspects_of_practice)                                                           |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => "Location")                                                                   |
| [Escaped Output] f.input(:outcome, :collection => aspects_of_outcome)                                                          |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------+

microposts/lessons/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @lesson]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/lessons/edit.["Microposts::LessonsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.lessons.find_by_id(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] r>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/lessons/help

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}) |
+------------------------------------------------------------------------------+

microposts/lessons/help.["Microposts::LessonsController#help"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}) |
+------------------------------------------------------------------------------+

microposts/lessons/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @lesson], :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] f.error_notificati>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Lesson", post_lesson_help_path, :class => "side_menu_link")                                                              >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/lessons/new.["Microposts::LessonsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.lessons.build(params[:lesson])], :defaults => ({ :placeholder => false, :hint => false })) do;>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Lesson", post_lesson_help_path, :class => "side_menu_link")                                                              >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/lessons/new.["Microposts::LessonsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, Lesson.new(:date_of_post => Date.today)], :defaults => ({ :placeholder => false, :hint => false })) do; [Es>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Lesson", post_lesson_help_path, :class => "side_menu_link")                                                              >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/practices/_fields

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:duration, :collection => aspects_of_duration)                                                        |
| [Escaped Output] f.input(:focus, :collection => aspects_of_practice)                                                           |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => "Location")                                                                   |
| [Escaped Output] f.input(:outcome, :collection => aspects_of_outcome)                                                          |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------+

microposts/practices/_fields.["Template:microposts/practices/edit"]

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:duration, :collection => aspects_of_duration)                                                        |
| [Escaped Output] f.input(:focus, :collection => aspects_of_practice)                                                           |
| [Escaped Output] f.input(:date_of_post, :as => :string, :label => "Date", :required => false, :input_html => device_date_html) |
| [Escaped Output] f.input(:place, :placeholder => "Location")                                                                   |
| [Escaped Output] f.input(:outcome, :collection => aspects_of_outcome)                                                          |
| [Escaped Output] f.input(:content, :label => "Comment")                                                                        |
+--------------------------------------------------------------------------------------------------------------------------------+

microposts/practices/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @practice]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/practices/edit.["Microposts::PracticesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.practices.find_by_id(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output]>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", micropostEditHelp_path, :class => "side_menu_link")                                                                      >>
| [Escaped Output] link_to("Cancel", :back, :class => "side_menu_link")                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/practices/help

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}) |
+------------------------------------------------------------------------------+

microposts/practices/help.["Microposts::PracticesController#help"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "microposts/practice_or_lesson_help", {}) |
+------------------------------------------------------------------------------+

microposts/practices/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, @practice], :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] f.error_notifica>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Practice", help_microposts_practices_path, :class => "side_menu_link")                                                   >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/practices/new.["Microposts::PracticesController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, current_user.practices.build(params[:practice])], :defaults => ({ :placeholder => false, :hint => false }))>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Practice", help_microposts_practices_path, :class => "side_menu_link")                                                   >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

microposts/practices/new.["Microposts::PracticesController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] link_to("Cancel", root_path, :class => "btn btn-default cancel")                                                                         >>
| [Escaped Output] simple_form_for([:microposts, Practice.new(:date_of_post => Date.today)], :defaults => ({ :placeholder => false, :hint => false })) do; [>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help - Practice", help_microposts_practices_path, :class => "side_menu_link")                                                   >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/accounts/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@account.errors.count, "error")                                                                                                >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] User.find_by_id(@account.user_id).email                                                                                                  >>
| [Escaped Output] @free_days_left                                                                                                                          >>
| [Escaped Output] @account.free_period                                                                                                                     >>
| [Escaped Output] f.label(:set_free_days)                                                                                                                  >>
| [Escaped Output] f.number_field(:set_free_days)                                                                                                           >>
| [Escaped Output] f.label(:paid_up)                                                                                                                        >>
| [Escaped Output] f.check_box(:paid_up)                                                                                                                    >>
| [Escaped Output] f.label(:verified)                                                                                                                       >>
| [Escaped Output] f.check_box(:verified)                                                                                                                   >>
| [Escaped Output] f.label(:created_at)                                                                                                                     >>
| [Escaped Output] f.date_select(:created_at, :order => ([:month, :day, :year]))                                                                            >>
| [Escaped Output] f.label(:level)                                                                                                                          >>
| [Escaped Output] f.select(:level, ["Premium", "Basic"])                                                                                                   >>
| [Escaped Output] f.label(:fee)                                                                                                                            >>
| [Escaped Output] f.text_field(:fee)                                                                                                                       >>
| [Escaped Output] f.label(:attempt_to_pay)                                                                                                                 >>
| [Escaped Output] f.text_field(:attempt_to_pay)                                                                                                            >>
| [Escaped Output] f.label(:attempt_time)                                                                                                                   >>
| [Escaped Output] f.text_field(:attempt_time)                                                                                                              >>
| [Escaped Output] f.label(:cancel_reference)                                                                                                               >>
| [Escaped Output] f.text_field(:cancel_reference)                                                                                                          >>
| [Escaped Output] f.submit("Update")                                                                                                                       >>
| [Escaped Output] form_for([:old_admin, @account]) do; if @account.errors.any? then; [Escaped Output] pluralize(@account.errors.count, "error"); @account.e>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/accounts/_form.["OldAdmin::AccountsController#edit", "Template:old_admin/accounts/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Account.find(params[:id]).errors.count, "error")                                                                               >>
| [Escaped Output] (Unresolved Model).new                                                                                                                   >>
| [Escaped Output] User.find_by_id(Account.find(params[:id]).user_id).email                                                                                 >>
| [Escaped Output] view_context.expiry_time(Account.find(params[:id]).free_period, Account.find(params[:id]).free_time_left)                                >>
| [Escaped Output] Account.find(params[:id]).free_period                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:set_free_days)                                                                                                    >>
| [Escaped Output] FormBuilder.new.number_field(:set_free_days)                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:paid_up)                                                                                                          >>
| [Escaped Output] FormBuilder.new.check_box(:paid_up)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:verified)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:verified)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:created_at)                                                                                                       >>
| [Escaped Output] FormBuilder.new.date_select(:created_at, :order => ([:month, :day, :year]))                                                              >>
| [Escaped Output] FormBuilder.new.label(:level)                                                                                                            >>
| [Escaped Output] FormBuilder.new.select(:level, ["Premium", "Basic"])                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:fee)                                                                                                              >>
| [Escaped Output] FormBuilder.new.text_field(:fee)                                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:attempt_to_pay)                                                                                                   >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_to_pay)                                                                                              >>
| [Escaped Output] FormBuilder.new.label(:attempt_time)                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_time)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:cancel_reference)                                                                                                 >>
| [Escaped Output] FormBuilder.new.text_field(:cancel_reference)                                                                                            >>
| [Escaped Output] FormBuilder.new.submit("Update")                                                                                                         >>
| [Escaped Output] form_for([:old_admin, Account.find(params[:id])]) do; if Account.find(params[:id]).errors.any? then; [Escaped Output] pluralize(Account.f>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/accounts/_form.["OldAdmin::AccountsController#update", "Template:old_admin/accounts/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Account.find(params[:id]).errors.count, "error")                                                                               >>
| [Escaped Output] (Unresolved Model).new                                                                                                                   >>
| [Escaped Output] User.find_by_id(Account.find(params[:id]).user_id).email                                                                                 >>
| [Escaped Output] @free_days_left                                                                                                                          >>
| [Escaped Output] Account.find(params[:id]).free_period                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:set_free_days)                                                                                                    >>
| [Escaped Output] FormBuilder.new.number_field(:set_free_days)                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:paid_up)                                                                                                          >>
| [Escaped Output] FormBuilder.new.check_box(:paid_up)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:verified)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:verified)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:created_at)                                                                                                       >>
| [Escaped Output] FormBuilder.new.date_select(:created_at, :order => ([:month, :day, :year]))                                                              >>
| [Escaped Output] FormBuilder.new.label(:level)                                                                                                            >>
| [Escaped Output] FormBuilder.new.select(:level, ["Premium", "Basic"])                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:fee)                                                                                                              >>
| [Escaped Output] FormBuilder.new.text_field(:fee)                                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:attempt_to_pay)                                                                                                   >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_to_pay)                                                                                              >>
| [Escaped Output] FormBuilder.new.label(:attempt_time)                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_time)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:cancel_reference)                                                                                                 >>
| [Escaped Output] FormBuilder.new.text_field(:cancel_reference)                                                                                            >>
| [Escaped Output] FormBuilder.new.submit("Update")                                                                                                         >>
| [Escaped Output] form_for([:old_admin, Account.find(params[:id])]) do; if Account.find(params[:id]).errors.any? then; [Escaped Output] pluralize(Account.f>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/accounts/_form.["Template:old_admin/accounts/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@account.errors.count, "error")                                                                                                >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] User.find_by_id(@account.user_id).email                                                                                                  >>
| [Escaped Output] @free_days_left                                                                                                                          >>
| [Escaped Output] @account.free_period                                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:set_free_days)                                                                                                    >>
| [Escaped Output] FormBuilder.new.number_field(:set_free_days)                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:paid_up)                                                                                                          >>
| [Escaped Output] FormBuilder.new.check_box(:paid_up)                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:verified)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:verified)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:created_at)                                                                                                       >>
| [Escaped Output] FormBuilder.new.date_select(:created_at, :order => ([:month, :day, :year]))                                                              >>
| [Escaped Output] FormBuilder.new.label(:level)                                                                                                            >>
| [Escaped Output] FormBuilder.new.select(:level, ["Premium", "Basic"])                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:fee)                                                                                                              >>
| [Escaped Output] FormBuilder.new.text_field(:fee)                                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:attempt_to_pay)                                                                                                   >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_to_pay)                                                                                              >>
| [Escaped Output] FormBuilder.new.label(:attempt_time)                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:attempt_time)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:cancel_reference)                                                                                                 >>
| [Escaped Output] FormBuilder.new.text_field(:cancel_reference)                                                                                            >>
| [Escaped Output] FormBuilder.new.submit("Update")                                                                                                         >>
| [Escaped Output] form_for([:old_admin, @account]) do; if @account.errors.any? then; [Escaped Output] pluralize(@account.errors.count, "error"); @account.e>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/accounts/edit

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                           |
| [Escaped Output] link_to("Show", old_admin_account_path(@account))                       |
| [Escaped Output] link_to("Back", old_admin_accounts_path(:time_frame => "Three Months")) |
+------------------------------------------------------------------------------------------+

old_admin/accounts/edit.["OldAdmin::AccountsController#edit"]

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                           |
| [Escaped Output] link_to("Show", old_admin_account_path(Account.find(params[:id])))      |
| [Escaped Output] link_to("Back", old_admin_accounts_path(:time_frame => "Three Months")) |
+------------------------------------------------------------------------------------------+

old_admin/accounts/index

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] account.user.email                                       |
| [Escaped Output] expiry_time(account.free_period, account.free_time_left) |
| [Escaped Output] account.level                                            |
| [Escaped Output] account.paid_up                                          |
| [Escaped Output] ("Yes" or "No")                                          |
| [Escaped Output] account.fee_offer                                        |
| [Escaped Output] account.fee                                              |
| [Escaped Output] link_to("S", old_admin_account_path(account))            |
| [Escaped Output] link_to("TL", TLevel_old_admin_account_path(account))    |
| [Escaped Output] link_to("TV", TVerify_old_admin_account_path(account))   |
| [Escaped Output] link_to("E", edit_old_admin_account_path(account))       |
+---------------------------------------------------------------------------+

old_admin/accounts/index.["OldAdmin::AccountsController#index"]

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] account.user.email                                       |
| [Escaped Output] expiry_time(account.free_period, account.free_time_left) |
| [Escaped Output] account.level                                            |
| [Escaped Output] account.paid_up                                          |
| [Escaped Output] ("Yes" or "No")                                          |
| [Escaped Output] account.fee_offer                                        |
| [Escaped Output] account.fee                                              |
| [Escaped Output] link_to("S", old_admin_account_path(account))            |
| [Escaped Output] link_to("TL", TLevel_old_admin_account_path(account))    |
| [Escaped Output] link_to("TV", TVerify_old_admin_account_path(account))   |
| [Escaped Output] link_to("E", edit_old_admin_account_path(account))       |
+---------------------------------------------------------------------------+

old_admin/accounts/show

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                  |
| [Escaped Output] User.find_by_id(@account.user_id).email                                 |
| [Escaped Output] @account.free_period                                                    |
| [Escaped Output] @account.paid_up                                                        |
| [Escaped Output] @account.fee_offer                                                      |
| [Escaped Output] @account.fee                                                            |
| [Escaped Output] @account.fee_period                                                     |
| [Escaped Output] @account.created_at                                                     |
| [Escaped Output] @account.level                                                          |
| [Escaped Output] ("Yes" or "No")                                                         |
| [Escaped Output] @account.attempt_to_pay                                                 |
| [Escaped Output] @account.attempt_time                                                   |
| [Escaped Output] @account.user_id                                                        |
| [Escaped Output] link_to("Edit", edit_old_admin_account_path(@account))                  |
| [Escaped Output] link_to("Back", old_admin_accounts_path(:time_frame => "Three Months")) |
+------------------------------------------------------------------------------------------+

old_admin/accounts/show.["OldAdmin::AccountsController#show"]

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                  |
| [Escaped Output] User.find_by_id(Account.find(params[:id]).user_id).email                |
| [Escaped Output] Account.find(params[:id]).free_period                                   |
| [Escaped Output] Account.find(params[:id]).paid_up                                       |
| [Escaped Output] Account.find(params[:id]).fee_offer                                     |
| [Escaped Output] Account.find(params[:id]).fee                                           |
| [Escaped Output] Account.find(params[:id]).fee_period                                    |
| [Escaped Output] Account.find(params[:id]).created_at                                    |
| [Escaped Output] Account.find(params[:id]).level                                         |
| [Escaped Output] ("Yes" or "No")                                                         |
| [Escaped Output] Account.find(params[:id]).attempt_to_pay                                |
| [Escaped Output] Account.find(params[:id]).attempt_time                                  |
| [Escaped Output] Account.find(params[:id]).user_id                                       |
| [Escaped Output] link_to("Edit", edit_old_admin_account_path(Account.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_accounts_path(:time_frame => "Three Months")) |
+------------------------------------------------------------------------------------------+

old_admin/adwords/index

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("List Opted In Subscribers", opted_in_subscribers_old_admin_adwords_path) |
| [Escaped Output] link_to("List Opted In Users", opted_in_users_old_admin_adwords_path)             |
+----------------------------------------------------------------------------------------------------+

old_admin/adwords/index.["OldAdmin::AdwordsController#index"]

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("List Opted In Subscribers", opted_in_subscribers_old_admin_adwords_path) |
| [Escaped Output] link_to("List Opted In Users", opted_in_users_old_admin_adwords_path)             |
+----------------------------------------------------------------------------------------------------+

old_admin/articles/_fields

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] f.input(:title)                                          |
| [Escaped Output] f.input(:author)                                         |
| [Escaped Output] f.input(:status, :collection => (Article::Status_types)) |
| [Escaped Output] f.input(:description)                                    |
+---------------------------------------------------------------------------+

old_admin/articles/_fields.["OldAdmin::ArticlesController#edit", "Template:old_admin/articles/edit", "Template:old_admin/articles/_form"]

+-----------------------------------------------------------------------------+
| Output                                                                      |
+-----------------------------------------------------------------------------+
| [Escaped Output] f.input(:title)                                            |
| [Escaped Output] f.input(:author)                                           |
| [Escaped Output] f.input(:status, :collection => (["Pending", "Approved"])) |
| [Escaped Output] f.input(:description)                                      |
+-----------------------------------------------------------------------------+

old_admin/articles/_fields.["Template:old_admin/articles/_form"]

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] f.input(:title)                                          |
| [Escaped Output] f.input(:author)                                         |
| [Escaped Output] f.input(:status, :collection => (Article::Status_types)) |
| [Escaped Output] f.input(:description)                                    |
+---------------------------------------------------------------------------+

old_admin/articles/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @article]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/articles/_form.["OldAdmin::ArticlesController#create", "Template:old_admin/articles/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Article.new(params[:article])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial =>>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/articles/_form.["OldAdmin::ArticlesController#edit", "Template:old_admin/articles/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Article.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fi>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/articles/_form.["Template:old_admin/articles/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @article]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/articles/edit

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                     |
| [Escaped Output] link_to("Show", old_admin_article_path(@article)) |
| [Escaped Output] link_to("Back", old_admin_articles_path)          |
+--------------------------------------------------------------------+

old_admin/articles/edit.["OldAdmin::ArticlesController#edit"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                      |
| [Escaped Output] link_to("Show", old_admin_article_path(Article.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_articles_path)                           |
+-------------------------------------------------------------------------------------+

old_admin/articles/index

+----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                     |
+----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] article.title                                                                                             |
| [Escaped Output] article.status                                                                                            |
| [Escaped Output] link_to("Show", old_admin_article_path(article))                                                          |
| [Escaped Output] link_to("Edit", edit_old_admin_article_path(article))                                                     |
| [Escaped Output] link_to("Destroy", [:old_admin, article], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Article", new_old_admin_article_path)                                                        |
+----------------------------------------------------------------------------------------------------------------------------+

old_admin/articles/index.["OldAdmin::ArticlesController#index"]

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] Article.new.title                                                                                             |
| [Escaped Output] Article.new.status                                                                                            |
| [Escaped Output] link_to("Show", old_admin_article_path(Article.new))                                                          |
| [Escaped Output] link_to("Edit", edit_old_admin_article_path(Article.new))                                                     |
| [Escaped Output] link_to("Destroy", [:old_admin, Article.new], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Article", new_old_admin_article_path)                                                            |
+--------------------------------------------------------------------------------------------------------------------------------+

old_admin/articles/new

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})            |
| [Escaped Output] link_to("Back", old_admin_articles_path) |
+-----------------------------------------------------------+

old_admin/articles/new.["OldAdmin::ArticlesController#create"]

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})            |
| [Escaped Output] link_to("Back", old_admin_articles_path) |
+-----------------------------------------------------------+

old_admin/articles/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @article]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
| [Escaped Output] link_to("Edit", edit_old_admin_article_path(@article))                                                                                   >>
| [Escaped Output] link_to("Back", old_admin_articles_path)                                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/_fields

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:audience, :collection => (["no_one", "users_only", "subscribers_only", "everyone"])) |
| [Escaped Output] f.input(:subject)                                                                             |
| [Escaped Output] f.input(:body)                                                                                |
| [Escaped Output] bs_alert(:level => "warning") do; [ignored]; end                                              |
| [Escaped Output] f.input(:status, :collection => (["draft", "pending"]))                                       |
+----------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/_fields.["Template:old_admin/broadcast_messages/_form"]

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:audience, :collection => (["no_one", "users_only", "subscribers_only", "everyone"])) |
| [Escaped Output] f.input(:subject)                                                                             |
| [Escaped Output] f.input(:body)                                                                                |
| [Escaped Output] bs_alert(:level => "warning") do; [ignored]; end                                              |
| [Escaped Output] f.input(:status, :collection => (["draft", "pending"]))                                       |
+----------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, "Update")                                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @broadcast_message]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/_form.["OldAdmin::BroadcastMessagesController#create", "Template:old_admin/broadcast_messages/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, "Update")                                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, BroadcastMessage.new(params[:broadcast_message])]) do; [Escaped Output] f.error_notification;[Escaped Output>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/_form.["OldAdmin::BroadcastMessagesController#edit", "Template:old_admin/broadcast_messages/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, "Update")                                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, BroadcastMessage.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(parti>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/_form.["Template:old_admin/broadcast_messages/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, "Update")                                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @broadcast_message]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/edit

+--------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                             |
+--------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                                                     |
| [Escaped Output] link_to("Show", old_admin_broadcast_message_path(@broadcast_message), :class => "side_menu_link") |
| [Escaped Output] link_to("Messages", old_admin_broadcast_messages_path, :class => "side_menu_link")                |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                |
+--------------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/edit.["OldAdmin::BroadcastMessagesController#edit"]

+------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                                                                     |
| [Escaped Output] link_to("Show", old_admin_broadcast_message_path(BroadcastMessage.find(params[:id])), :class => "side_menu_link") |
| [Escaped Output] link_to("Messages", old_admin_broadcast_messages_path, :class => "side_menu_link")                                |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                |
+------------------------------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/index

+----------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                               |
+----------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] m.subject                                                                                           |
| [Escaped Output] m.audience                                                                                          |
| [Escaped Output] highlight_if_pending(m)                                                                             |
| [Escaped Output] m.status                                                                                            |
| [Escaped Output] m.started?                                                                                          |
| [Escaped Output] link_to("Show", old_admin_broadcast_message_path(m))                                                |
| [Escaped Output] link_to("Edit", edit_old_admin_broadcast_message_path(m))                                           |
| [Escaped Output] link_to("Destroy", [:old_admin, m], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Message", new_old_admin_broadcast_message_path, :class => "side_menu_link")            |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                  |
+----------------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/index.["OldAdmin::BroadcastMessagesController#index"]

+-----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                  |
+-----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] BroadcastMessage.new.subject                                                                                           |
| [Escaped Output] BroadcastMessage.new.audience                                                                                          |
| [Escaped Output] highlight_if_pending(BroadcastMessage.new)                                                                             |
| [Escaped Output] BroadcastMessage.new.status                                                                                            |
| [Escaped Output] BroadcastMessage.new.started?                                                                                          |
| [Escaped Output] link_to("Show", old_admin_broadcast_message_path(BroadcastMessage.new))                                                |
| [Escaped Output] link_to("Edit", edit_old_admin_broadcast_message_path(BroadcastMessage.new))                                           |
| [Escaped Output] link_to("Destroy", [:old_admin, BroadcastMessage.new], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Message", new_old_admin_broadcast_message_path, :class => "side_menu_link")                               |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                     |
+-----------------------------------------------------------------------------------------------------------------------------------------+

old_admin/broadcast_messages/new

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] render(partial => "form", {}) |
+------------------------------------------------+

old_admin/broadcast_messages/new.["OldAdmin::BroadcastMessagesController#create"]

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] render(partial => "form", {}) |
+------------------------------------------------+

old_admin/broadcast_messages/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @broadcast_message.audience                                                                                                              >>
| [Escaped Output] @broadcast_message.subject                                                                                                               >>
| [Escaped Output] @broadcast_message.body                                                                                                                  >>
| [Escaped Output] @broadcast_message.status                                                                                                                >>
| [Escaped Output] @broadcast_message.total_count                                                                                                           >>
| [Escaped Output] @broadcast_message.eligible_count                                                                                                        >>
| [Escaped Output] bs_alert(:level => (@broadcast_message.pending? ? ("danger") : ("info"))) do; [Escaped Output] @broadcast_message.status;[Escaped Output]>>
| [Escaped Output] @broadcast_message.started?                                                                                                              >>
| [Escaped Output] link_to("Edit", edit_old_admin_broadcast_message_path(@broadcast_message), :class => "side_menu_link")                                   >>
| [Escaped Output] link_to("Messages", old_admin_broadcast_messages_path, :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/broadcast_messages/show.["OldAdmin::BroadcastMessagesController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] BroadcastMessage.find(params[:id]).audience                                                                                              >>
| [Escaped Output] BroadcastMessage.find(params[:id]).subject                                                                                               >>
| [Escaped Output] BroadcastMessage.find(params[:id]).body                                                                                                  >>
| [Escaped Output] BroadcastMessage.find(params[:id]).status                                                                                                >>
| [Escaped Output] BroadcastMessage.find(params[:id]).total_count                                                                                           >>
| [Escaped Output] BroadcastMessage.find(params[:id]).eligible_count                                                                                        >>
| [Escaped Output] bs_alert(:level => (BroadcastMessage.find(params[:id]).pending? ? ("danger") : ("info"))) do; [Escaped Output] BroadcastMessage.find(para>>
| [Escaped Output] BroadcastMessage.find(params[:id]).started?                                                                                              >>
| [Escaped Output] link_to("Edit", edit_old_admin_broadcast_message_path(BroadcastMessage.find(params[:id])), :class => "side_menu_link")                   >>
| [Escaped Output] link_to("Messages", old_admin_broadcast_messages_path, :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/challenges/_fields

+----------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:user_email, :collection => ([@challenge.user.email]), :include_blank => false)                                     |
| [Escaped Output] f.input(:level, :collection => ((1..Challenge::Number_of_levels)), :include_blank => false)                                 |
| [Escaped Output] f.input(:shot, :collection => (Challenge::Shot_types), :include_blank => false)                                             |
| [Escaped Output] f.input(:completion_date)                                                                                                   |
| [Escaped Output] f.input(:status, :collection => (Challenge::Status_types), :include_blank => false)                                         |
| [Escaped Output] f.input(:description, :collection => ([Challenge.description(@challenge.shot, @challenge.level)]), :include_blank => false) |
+----------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/challenges/_fields.["Template:old_admin/challenges/_form"]

+----------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:user_email, :collection => ([@challenge.user.email]), :include_blank => false)                                     |
| [Escaped Output] f.input(:level, :collection => ((1..Challenge::Number_of_levels)), :include_blank => false)                                 |
| [Escaped Output] f.input(:shot, :collection => (Challenge::Shot_types), :include_blank => false)                                             |
| [Escaped Output] f.input(:completion_date)                                                                                                   |
| [Escaped Output] f.input(:status, :collection => (Challenge::Status_types), :include_blank => false)                                         |
| [Escaped Output] f.input(:description, :collection => ([Challenge.description(@challenge.shot, @challenge.level)]), :include_blank => false) |
+----------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/challenges/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @challenge]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/challenges/index

+------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] challenge.user.email                                                                                        |
| [Escaped Output] challenge.shot                                                                                              |
| [Escaped Output] challenge.level                                                                                             |
| [Escaped Output] challenge.status                                                                                            |
| [Escaped Output] link_to("Show", old_admin_challenge_path(challenge))                                                        |
| [Escaped Output] link_to("Destroy", [:old_admin, challenge], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
+------------------------------------------------------------------------------------------------------------------------------+

old_admin/challenges/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @challenge]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => >>
| [Escaped Output] link_to("Back", old_admin_challenges_path)                                                                                               >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/comments/_fields

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] f.input(:article_id, :collection => Article.titles_for_ids) |
| [Escaped Output] f.input(:name)                                              |
| [Escaped Output] f.input(:email)                                             |
| [Escaped Output] f.input(:status, :collection => (Comment::Status_types))    |
| [Escaped Output] f.input(:your_comment)                                      |
+------------------------------------------------------------------------------+

old_admin/comments/_fields.["OldAdmin::CommentsController#edit", "Template:old_admin/comments/edit", "Template:old_admin/comments/_form"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] f.input(:article_id, :collection => Article.titles_for_ids) |
| [Escaped Output] f.input(:name)                                              |
| [Escaped Output] f.input(:email)                                             |
| [Escaped Output] f.input(:status, :collection => (["Pending", "Approved"]))  |
| [Escaped Output] f.input(:your_comment)                                      |
+------------------------------------------------------------------------------+

old_admin/comments/_fields.["Template:old_admin/comments/_form"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] f.input(:article_id, :collection => Article.titles_for_ids) |
| [Escaped Output] f.input(:name)                                              |
| [Escaped Output] f.input(:email)                                             |
| [Escaped Output] f.input(:status, :collection => (Comment::Status_types))    |
| [Escaped Output] f.input(:your_comment)                                      |
+------------------------------------------------------------------------------+

old_admin/comments/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @comment]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/comments/_form.["OldAdmin::CommentsController#create", "Template:old_admin/comments/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Comment.new(params[:comment])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial =>>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/comments/_form.["OldAdmin::CommentsController#edit", "Template:old_admin/comments/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Comment.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fi>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/comments/_form.["Template:old_admin/comments/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @comment]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/comments/edit

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                     |
| [Escaped Output] link_to("Show", old_admin_comment_path(@comment)) |
| [Escaped Output] link_to("Back", old_admin_comments_path)          |
+--------------------------------------------------------------------+

old_admin/comments/edit.["OldAdmin::CommentsController#edit"]

+-------------------------------------------------------------------------------------+
| Output                                                                              |
+-------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                      |
| [Escaped Output] link_to("Show", old_admin_comment_path(Comment.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_comments_path)                           |
+-------------------------------------------------------------------------------------+

old_admin/comments/index

+----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                     |
+----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] comment.name                                                                                              |
| [Escaped Output] comment.email                                                                                             |
| [Escaped Output] comment.status                                                                                            |
| [Escaped Output] comment.article.title                                                                                     |
| [Escaped Output] comment.your_comment                                                                                      |
| [Escaped Output] link_to("Show", old_admin_comment_path(comment))                                                          |
| [Escaped Output] link_to("Edit", edit_old_admin_comment_path(comment))                                                     |
| [Escaped Output] link_to("Destroy", [:old_admin, comment], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Comment", new_old_admin_comment_path)                                                        |
+----------------------------------------------------------------------------------------------------------------------------+

old_admin/comments/new

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})            |
| [Escaped Output] link_to("Back", old_admin_comments_path) |
+-----------------------------------------------------------+

old_admin/comments/new.["OldAdmin::CommentsController#create"]

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})            |
| [Escaped Output] link_to("Back", old_admin_comments_path) |
+-----------------------------------------------------------+

old_admin/comments/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @comment]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f >>
| [Escaped Output] link_to("Edit", edit_old_admin_comment_path(@comment))                                                                                   >>
| [Escaped Output] link_to("Back", old_admin_comments_path)                                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@coupon.errors.count, "error")                                                                                                 >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] f.label(:name)                                                                                                                           >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:validity)                                                                                                                       >>
| [Escaped Output] f.check_box(:validity)                                                                                                                   >>
| [Escaped Output] f.label(:category)                                                                                                                       >>
| [Escaped Output] f.text_field(:category)                                                                                                                  >>
| [Escaped Output] f.label(:sponsor)                                                                                                                        >>
| [Escaped Output] f.text_field(:sponsor)                                                                                                                   >>
| [Escaped Output] f.label(:expiry)                                                                                                                         >>
| [Escaped Output] f.date_select(:expiry)                                                                                                                   >>
| [Escaped Output] f.label(:purge)                                                                                                                          >>
| [Escaped Output] f.date_select(:purge)                                                                                                                    >>
| [Escaped Output] f.submit                                                                                                                                 >>
| [Escaped Output] form_for([:old_admin, @coupon]) do; if @coupon.errors.any? then; [Escaped Output] pluralize(@coupon.errors.count, "error"); @coupon.error>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/_form.["OldAdmin::CouponsController#create", "Template:old_admin/coupons/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Coupon.new(params[:coupon]).errors.count, "error")                                                                             >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name)                                                                                                             >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:validity)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:validity)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:sponsor)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_field(:sponsor)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:expiry)                                                                                                           >>
| [Escaped Output] FormBuilder.new.date_select(:expiry)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:purge)                                                                                                            >>
| [Escaped Output] FormBuilder.new.date_select(:purge)                                                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for([:old_admin, Coupon.new(params[:coupon])]) do; if Coupon.new(params[:coupon]).errors.any? then; [Escaped Output] pluralize(Coupo>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/_form.["OldAdmin::CouponsController#edit", "Template:old_admin/coupons/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Coupon.find(params[:id]).errors.count, "error")                                                                                >>
| [Escaped Output] (Unresolved Model).new                                                                                                                   >>
| [Escaped Output] FormBuilder.new.label(:name)                                                                                                             >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:validity)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:validity)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:sponsor)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_field(:sponsor)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:expiry)                                                                                                           >>
| [Escaped Output] FormBuilder.new.date_select(:expiry)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:purge)                                                                                                            >>
| [Escaped Output] FormBuilder.new.date_select(:purge)                                                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for([:old_admin, Coupon.find(params[:id])]) do; if Coupon.find(params[:id]).errors.any? then; [Escaped Output] pluralize(Coupon.find>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/_form.["Template:old_admin/coupons/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@coupon.errors.count, "error")                                                                                                 >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name)                                                                                                             >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:validity)                                                                                                         >>
| [Escaped Output] FormBuilder.new.check_box(:validity)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:category)                                                                                                         >>
| [Escaped Output] FormBuilder.new.text_field(:category)                                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:sponsor)                                                                                                          >>
| [Escaped Output] FormBuilder.new.text_field(:sponsor)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:expiry)                                                                                                           >>
| [Escaped Output] FormBuilder.new.date_select(:expiry)                                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:purge)                                                                                                            >>
| [Escaped Output] FormBuilder.new.date_select(:purge)                                                                                                      >>
| [Escaped Output] FormBuilder.new.submit                                                                                                                   >>
| [Escaped Output] form_for([:old_admin, @coupon]) do; if @coupon.errors.any? then; [Escaped Output] pluralize(@coupon.errors.count, "error"); @coupon.error>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/edit

+----------------------------------------------------------+
| Output                                                   |
+----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})           |
| [Escaped Output] link_to("Show", [:old_admin, @coupon])  |
| [Escaped Output] link_to("Back", old_admin_coupons_path) |
+----------------------------------------------------------+

old_admin/coupons/edit.["OldAdmin::CouponsController#edit"]

+--------------------------------------------------------------------------+
| Output                                                                   |
+--------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                           |
| [Escaped Output] link_to("Show", [:old_admin, Coupon.find(params[:id])]) |
| [Escaped Output] link_to("Back", old_admin_coupons_path)                 |
+--------------------------------------------------------------------------+

old_admin/coupons/index

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] coupon.name                                                                               |
| [Escaped Output] coupon.code                                                                               |
| [Escaped Output] coupon.validity                                                                           |
| [Escaped Output] coupon.category                                                                           |
| [Escaped Output] coupon.sponsor                                                                            |
| [Escaped Output] coupon.expiry                                                                             |
| [Escaped Output] coupon.purge                                                                              |
| [Escaped Output] link_to("Show", [:old_admin, coupon])                                                     |
| [Escaped Output] link_to("Edit", edit_old_admin_coupon_path(coupon))                                       |
| [Escaped Output] link_to("Destroy", [:old_admin, coupon], :confirm => "Are you sure?", :method => :delete) |
| [Escaped Output] link_to("New Coupon", new_old_admin_coupon_path)                                          |
+------------------------------------------------------------------------------------------------------------+

old_admin/coupons/new

+----------------------------------------------------------+
| Output                                                   |
+----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})           |
| [Escaped Output] link_to("Back", old_admin_coupons_path) |
+----------------------------------------------------------+

old_admin/coupons/new.["OldAdmin::CouponsController#create"]

+----------------------------------------------------------+
| Output                                                   |
+----------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})           |
| [Escaped Output] link_to("Back", old_admin_coupons_path) |
+----------------------------------------------------------+

old_admin/coupons/send_coupon

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(@coupon.errors.count, "error")                                                                                                 >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] f.label(:name)                                                                                                                           >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:email)                                                                                                                          >>
| [Escaped Output] f.text_field(:email)                                                                                                                     >>
| [Escaped Output] f.submit("Send Coupon")                                                                                                                  >>
| [Escaped Output] form_for(@coupon, :url => old_admin_send_coupon_create_path(@coupon)) do; if @coupon.errors.any? then; [Escaped Output] pluralize(@coupon>>
| [Escaped Output] link_to("Back", old_admin_coupons_path)                                                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/send_coupon.["OldAdmin::CouponsController#send_coupon"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Coupon.new.errors.count, "error")                                                                                              >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name)                                                                                                             >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit("Send Coupon")                                                                                                    >>
| [Escaped Output] form_for(Coupon.new, :url => old_admin_send_coupon_create_path(Coupon.new)) do; if Coupon.new.errors.any? then; [Escaped Output] pluraliz>>
| [Escaped Output] link_to("Back", old_admin_coupons_path)                                                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/send_coupon.["OldAdmin::CouponsController#send_coupon_create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] pluralize(Coupon.new(params[:coupon]).errors.count, "error")                                                                             >>
| [Escaped Output] msg                                                                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:name)                                                                                                             >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email)                                                                                                            >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.submit("Send Coupon")                                                                                                    >>
| [Escaped Output] form_for(Coupon.new(params[:coupon]), :url => old_admin_send_coupon_create_path(Coupon.new(params[:coupon]))) do; if Coupon.new(params[:c>>
| [Escaped Output] link_to("Back", old_admin_coupons_path)                                                                                                  >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/coupons/show

+-----------------------------------------------------------------------+
| Output                                                                |
+-----------------------------------------------------------------------+
| [Escaped Output] notice                                               |
| [Escaped Output] @coupon.name                                         |
| [Escaped Output] @coupon.code                                         |
| [Escaped Output] @coupon.validity                                     |
| [Escaped Output] @coupon.category                                     |
| [Escaped Output] @coupon.sponsor                                      |
| [Escaped Output] @coupon.expiry                                       |
| [Escaped Output] @coupon.purge                                        |
| [Escaped Output] link_to("Edit", edit_old_admin_coupon_path(@coupon)) |
| [Escaped Output] link_to("Back", old_admin_coupons_path)              |
+-----------------------------------------------------------------------+

old_admin/dashboards/club_distances

+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                   |
+----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                                                     |
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end                        |
| [Escaped Output] @h1                                                                                                                                     |
| [Escaped Output] link_to("Male Irons", club_distances_old_admin_dashboards_path(:clubs => "irons", :sex => "male"), :class => "btn-info btn-sm")         |
| [Escaped Output] link_to("Female Irons", club_distances_old_admin_dashboards_path(:clubs => "irons", :sex => "female"), :class => "btn-info btn-sm")     |
| [Escaped Output] link_to("Male Woods", club_distances_old_admin_dashboards_path(:clubs => "woods", :sex => "male"), :class => "btn-info btn-sm")         |
| [Escaped Output] link_to("Female Woods", club_distances_old_admin_dashboards_path(:clubs => "woods", :sex => "female"), :class => "btn-info btn-sm")     |
| [Escaped Output] link_to("Male Hybrids", club_distances_old_admin_dashboards_path(:clubs => "hybrids", :sex => "male"), :class => "btn-info btn-sm")     |
| [Escaped Output] link_to("Female Hybrids", club_distances_old_admin_dashboards_path(:clubs => "hybrids", :sex => "female"), :class => "btn-info btn-sm") |
| [Escaped Output] @sex.capitalize                                                                                                                         |
| [Escaped Output] @clubs.to_s.capitalize                                                                                                                  |
| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => (@graph) })                                                              |
| [Escaped Output] @xkey.capitalize.humanize                                                                                                               |
| [Escaped Output] @sex.capitalize                                                                                                                         |
| [Escaped Output] @clubs.to_s.capitalize                                                                                                                  |
| [Escaped Output] k.capitalize                                                                                                                            |
| [Escaped Output] distance_trio(v[@sex_distance])                                                                                                         |
| [Escaped Output] distance_trio(@trios[i])                                                                                                                |
| [Escaped Output] distance_trio(@errs[i])                                                                                                                 |
| [Escaped Output] link_to("Dashboard", old_admin_dashboards_path, :class => "side_menu_link")                                                             |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                      |
+----------------------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/club_distances.["OldAdmin::DashboardsController#club_distances"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                                                      >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end                         >>

| [Escaped Output] link_to("Male Irons", club_distances_old_admin_dashboards_path(:clubs => "irons", :sex => "male"), :class => "btn-info btn-sm")          >>
| [Escaped Output] link_to("Female Irons", club_distances_old_admin_dashboards_path(:clubs => "irons", :sex => "female"), :class => "btn-info btn-sm")      >>
| [Escaped Output] link_to("Male Woods", club_distances_old_admin_dashboards_path(:clubs => "woods", :sex => "male"), :class => "btn-info btn-sm")          >>
| [Escaped Output] link_to("Female Woods", club_distances_old_admin_dashboards_path(:clubs => "woods", :sex => "female"), :class => "btn-info btn-sm")      >>
| [Escaped Output] link_to("Male Hybrids", club_distances_old_admin_dashboards_path(:clubs => "hybrids", :sex => "male"), :class => "btn-info btn-sm")      >>
| [Escaped Output] link_to("Female Hybrids", club_distances_old_admin_dashboards_path(:clubs => "hybrids", :sex => "female"), :class => "btn-info btn-sm")  >>
| [Escaped Output] ((params[:sex] or "male") + "_distance").to_sym.to_s.sub("_distance", "").capitalize                                                     >>
| [Escaped Output] (params[:clubs] or "irons").to_sym.to_s.capitalize                                                                                       >>
| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => GraphLine.new_y_vs_x(:x => ClubDistance.original_multiple_bf_graph(:clubs >>
| [Escaped Output] "Loft".capitalize.humanize                                                                                                               >>
| [Escaped Output] ((params[:sex] or "male") + "_distance").to_sym.to_s.sub("_distance", "").capitalize                                                     >>
| [Escaped Output] (params[:clubs] or "irons").to_sym.to_s.capitalize                                                                                       >>
| [Escaped Output] k.capitalize                                                                                                                             >>
| [Escaped Output] distance_trio(v[((params[:sex] or "male") + "_distance").to_sym])                                                                        >>
| [Escaped Output] distance_trio(ClubDistance.original_multiple_bf_graph(:clubs => (params[:clubs] or "irons").to_sym, :sex => ((params[:sex] or "male") + ">>
| [Escaped Output] distance_trio(ClubDistance.original_multiple_bf_graph(:clubs => (params[:clubs] or "irons").to_sym, :sex => ((params[:sex] or "male") + ">>
| [Escaped Output] link_to("Dashboard", old_admin_dashboards_path, :class => "side_menu_link")                                                              >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/dashboards/distance_vs_loft

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                              |
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end |
| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => (@graph_irons) })                                 |
| [Escaped Output] @slope.round(2)                                                                                                  |
| [Escaped Output] @intercept.round(1)                                                                                              |
| [Escaped Output] link_to("Wood Distances", club_distances_old_admin_dashboards_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Iron Distances", iron_distances_old_admin_dashboards_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Distance vs Loft", distance_vs_loft_old_admin_dashboards_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("Y vs X Plot", y_vs_x_plot_old_admin_dashboards_path, :class => "side_menu_link")                        |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                               |
+-----------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/index

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Broadcast Messages", old_admin_broadcast_messages_path)                                                                         >>
| [Escaped Output] link_to("Send Coupon", old_admin_send_coupon_path, :class => "old_admin_button round")                                                   >>
| [Escaped Output] link_to("Delete Test Users", gtest_destroy_path, :class => "old_admin_button round")                                                     >>
| [Escaped Output] link_to("Accounts Three-Months", old_admin_accounts_path(:time_frame => "Three Months"), :class => "old_admin_button round")             >>
| [Escaped Output] link_to("Accounts All-Time", old_admin_accounts_path(:time_frame => "All Time"), :class => "old_admin_button round", :id => "accounts_all>>
| [Escaped Output] link_to("Invite ProUser", new_old_admin_pro_user_path, :class => "old_admin_button round")                                               >>
| [Escaped Output] link_to("Adwords Functions", old_admin_adwords_path)                                                                                     >>
| [Escaped Output] link_to("Hcap Progress", dashboard_path, :class => "old_admin_button round")                                                             >>
| [Escaped Output] link_to("Linkages", linkages_path, :class => "old_admin_button round")                                                                   >>
| [Escaped Output] link_to("New Linkage", new_linkage_path, :class => "old_admin_button round")                                                             >>
| [Escaped Output] link_to("View Guests", index_guests_old_admin_users_path, :class => "old_admin_button round", :id => "guest_users_all_time")             >>
| [Escaped Output] link_to("View Weekly Tips", old_admin_tips_path, :class => "old_admin_button round")                                                     >>
| [Escaped Output] link_to("Toggle show_ios_layout: ", toggle_show_ios_layout_old_admin_dashboards_path, :class => "old_admin_button round")                >>
| [Escaped Output] AdminAccess.show_ios_layout?(current_user)                                                                                               >>
| [Escaped Output] link_to("Members Summary", members_summary_old_admin_dashboards_path)                                                                    >>
| [Escaped Output] link_to("Player Activity", player_activity_old_admin_dashboards_path)                                                                    >>
| [Escaped Output] link_to("Members Count", members_counts_old_admin_dashboards_path)                                                                       >>
| [Escaped Output] link_to("Club Distances", club_distances_old_admin_dashboards_path)                                                                      >>
| [Escaped Output] link_to("Plot Y vs X", y_vs_x_plot_old_admin_dashboards_path)                                                                            >>
| [Escaped Output] link_to("View Stats", stats_old_admin_users_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Attempts", attempts_old_admin_users_path, :class => "old_admin_button round")                                              >>
| [Escaped Output] link_to("View All Stats", stats_old_admin_users_path(:all_time_calc => true), :class => "old_admin_button round")                        >>
| [Escaped Output] @announcement.audience.capitalize                                                                                                        >>
| [Escaped Output] @announcement.expiry.us_format                                                                                                           >>
| [Escaped Output] Announcement.newest.body                                                                                                                 >>
| [Escaped Output] link_to("New Announcement", announceNew_path, :class => "old_admin_button round")                                                        >>
| [Escaped Output] link_to("Del Announcement", announceDelete_path, :method => :delete, :class => "old_admin_button round")                                 >>
| [Escaped Output] link_to("View Articles", old_admin_articles_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Challenges", old_admin_challenges_path, :class => "old_admin_button round")                                                >>
| [Escaped Output] link_to("View Comments", old_admin_comments_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Coupons", old_admin_coupons_path, :class => "old_admin_button round")                                                      >>
| [Escaped Output] link_to("View Professionals", old_admin_professionals_path, :class => "old_admin_button round")                                          >>
| [Escaped Output] link_to("View Mental Games", old_admin_mental_games_path, :class => "old_admin_button round")                                            >>
| [Escaped Output] link_to("View Subscribers", old_admin_subscribers_path, :class => "old_admin_button round")                                              >>
| [Escaped Output] link_to("View Pro Users", old_admin_pro_users_path, :class => "old_admin_button round", :id => "pro_users_all_time")                     >>
| [Escaped Output] link_to("View Students", index_students_old_admin_users_path, :class => "old_admin_button round", :id => "students_all_time")            >>
| [Escaped Output] link_to("View Dormant (3 Months)", index_dormant_old_admin_users_path(:time_frame => "Three Months"), :class => "old_admin_button round")>>
| [Escaped Output] link_to("View Dormant (All Time)", index_dormant_old_admin_users_path(:time_frame => "All Time"), :class => "old_admin_button round", :id>>
| [Escaped Output] link_to("View Professionals", old_admin_professionals_path, :class => "old_admin_button round")                                          >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Rails Admin", "/admin", :class => "side_menu_link")                                                                             >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/dashboards/index.["OldAdmin::DashboardsController#index"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Broadcast Messages", old_admin_broadcast_messages_path)                                                                         >>
| [Escaped Output] link_to("Send Coupon", old_admin_send_coupon_path, :class => "old_admin_button round")                                                   >>
| [Escaped Output] link_to("Delete Test Users", gtest_destroy_path, :class => "old_admin_button round")                                                     >>
| [Escaped Output] link_to("Accounts Three-Months", old_admin_accounts_path(:time_frame => "Three Months"), :class => "old_admin_button round")             >>
| [Escaped Output] link_to("Accounts All-Time", old_admin_accounts_path(:time_frame => "All Time"), :class => "old_admin_button round", :id => "accounts_all>>
| [Escaped Output] link_to("Invite ProUser", new_old_admin_pro_user_path, :class => "old_admin_button round")                                               >>
| [Escaped Output] link_to("Adwords Functions", old_admin_adwords_path)                                                                                     >>
| [Escaped Output] link_to("Hcap Progress", dashboard_path, :class => "old_admin_button round")                                                             >>
| [Escaped Output] link_to("Linkages", linkages_path, :class => "old_admin_button round")                                                                   >>
| [Escaped Output] link_to("New Linkage", new_linkage_path, :class => "old_admin_button round")                                                             >>
| [Escaped Output] link_to("View Guests", index_guests_old_admin_users_path, :class => "old_admin_button round", :id => "guest_users_all_time")             >>
| [Escaped Output] link_to("View Weekly Tips", old_admin_tips_path, :class => "old_admin_button round")                                                     >>
| [Escaped Output] link_to("Toggle show_ios_layout: ", toggle_show_ios_layout_old_admin_dashboards_path, :class => "old_admin_button round")                >>
| [Escaped Output] AdminAccess.show_ios_layout?(current_user)                                                                                               >>
| [Escaped Output] link_to("Members Summary", members_summary_old_admin_dashboards_path)                                                                    >>
| [Escaped Output] link_to("Player Activity", player_activity_old_admin_dashboards_path)                                                                    >>
| [Escaped Output] link_to("Members Count", members_counts_old_admin_dashboards_path)                                                                       >>
| [Escaped Output] link_to("Club Distances", club_distances_old_admin_dashboards_path)                                                                      >>
| [Escaped Output] link_to("Plot Y vs X", y_vs_x_plot_old_admin_dashboards_path)                                                                            >>
| [Escaped Output] link_to("View Stats", stats_old_admin_users_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Attempts", attempts_old_admin_users_path, :class => "old_admin_button round")                                              >>
| [Escaped Output] link_to("View All Stats", stats_old_admin_users_path(:all_time_calc => true), :class => "old_admin_button round")                        >>
| [Escaped Output] Announcement.newest.audience.capitalize                                                                                                  >>
| [Escaped Output] Announcement.newest.expiry.us_format                                                                                                     >>
| [Escaped Output] Announcement.newest.body                                                                                                                 >>
| [Escaped Output] link_to("New Announcement", announceNew_path, :class => "old_admin_button round")                                                        >>
| [Escaped Output] link_to("Del Announcement", announceDelete_path, :method => :delete, :class => "old_admin_button round")                                 >>
| [Escaped Output] link_to("View Articles", old_admin_articles_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Challenges", old_admin_challenges_path, :class => "old_admin_button round")                                                >>
| [Escaped Output] link_to("View Comments", old_admin_comments_path, :class => "old_admin_button round")                                                    >>
| [Escaped Output] link_to("View Coupons", old_admin_coupons_path, :class => "old_admin_button round")                                                      >>
| [Escaped Output] link_to("View Professionals", old_admin_professionals_path, :class => "old_admin_button round")                                          >>
| [Escaped Output] link_to("View Mental Games", old_admin_mental_games_path, :class => "old_admin_button round")                                            >>
| [Escaped Output] link_to("View Subscribers", old_admin_subscribers_path, :class => "old_admin_button round")                                              >>
| [Escaped Output] link_to("View Pro Users", old_admin_pro_users_path, :class => "old_admin_button round", :id => "pro_users_all_time")                     >>
| [Escaped Output] link_to("View Students", index_students_old_admin_users_path, :class => "old_admin_button round", :id => "students_all_time")            >>
| [Escaped Output] link_to("View Dormant (3 Months)", index_dormant_old_admin_users_path(:time_frame => "Three Months"), :class => "old_admin_button round")>>
| [Escaped Output] link_to("View Dormant (All Time)", index_dormant_old_admin_users_path(:time_frame => "All Time"), :class => "old_admin_button round", :id>>
| [Escaped Output] link_to("View Professionals", old_admin_professionals_path, :class => "old_admin_button round")                                          >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Rails Admin", "/admin", :class => "side_menu_link")                                                                             >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/dashboards/iron_distances

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                              |
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end |
| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => (@graph_irons) })                                 |
| [Escaped Output] link_to("Wood Distances", club_distances_old_admin_dashboards_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Iron Distances", iron_distances_old_admin_dashboards_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Distance vs Loft", distance_vs_loft_old_admin_dashboards_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                               |
+-----------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/members_counts

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph_members_census) }) |
+------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/members_counts.["OldAdmin::DashboardsController#members_counts"]

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_members_census(cookies[:graph_duration]) }) |
+-------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/members_summary

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                                      |
| [Escaped Output] line_chart(members_weekly_old_admin_dashboards_path)                                                                     |
| [Escaped Output] bar_chart(Profile.unscope(:order).joined_since(6.months.ago).where.not(:handicap_type => 0).group(:handicap_type).count) |
| [Escaped Output] element[1]                                                                                                               |
| [Escaped Output] element[0]                                                                                                               |
| [Escaped Output] pie_chart(User.unscope(:order).group(:type).count)                                                                       |
| [Escaped Output] pie_chart(User.unscope(:order).group(:type).count)                                                                       |
+-------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/members_summary.["OldAdmin::DashboardsController#members_summary"]

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                                      |
| [Escaped Output] line_chart(members_weekly_old_admin_dashboards_path)                                                                     |
| [Escaped Output] bar_chart(Profile.unscope(:order).joined_since(6.months.ago).where.not(:handicap_type => 0).group(:handicap_type).count) |
| [Escaped Output] element[1]                                                                                                               |
| [Escaped Output] element[0]                                                                                                               |
| [Escaped Output] pie_chart(User.unscope(:order).group(:type).count)                                                                       |
| [Escaped Output] pie_chart(User.unscope(:order).group(:type).count)                                                                       |
+-------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/player_activity

+-------------------------------------------------------------------------------------------------------------+
| Output                                                                                                      |
+-------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph_player_activity) }) |
+-------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/player_activity.["OldAdmin::DashboardsController#player_activity"]

+--------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                     |
+--------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_player_activity(cookies[:graph_duration]) }) |
+--------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/y_vs_x_plot

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                              |
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end |
| [Escaped Output] @h1                                                                                                              |
| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => (@graph) })                                       |
| [Escaped Output] @xkey.capitalize.humanize                                                                                        |
| [Escaped Output] link_to("Dashboard", old_admin_dashboards_path, :class => "side_menu_link")                                      |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                               |
+-----------------------------------------------------------------------------------------------------------------------------------+

old_admin/dashboards/y_vs_x_plot.["OldAdmin::DashboardsController#y_vs_x_plot"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick")                                                                      >>
| [Escaped Output] content_for(:meta) do; [Escaped Output] javascript_include_tag("https://www.google.com/jsapi", "chartkick"); end                         >>

| [Escaped Output] render(partial => "graphs/overview_graph_no_time", { :graph => GraphLine.new_y_vs_x(:x => ([1, 2, 3, 4, 5, 6]), :y => ([[2, 4, 6, 8, 10, >>
| [Escaped Output] "Time".capitalize.humanize                                                                                                               >>
| [Escaped Output] link_to("Dashboard", old_admin_dashboards_path, :class => "side_menu_link")                                                              >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/mental_games/_fields

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:user_email, :collection => ([@mental_game.user.email]), :include_blank => false) |
| [Escaped Output] f.input(:updated_at)                                                                      |
| [Escaped Output] f.input(:exercise_time_total)                                                             |
| [Escaped Output] f.input(:exercise_time_target)                                                            |
| [Escaped Output] f.input(:exercise_time)                                                                   |
| [Escaped Output] f.input(:breaths_per_minute)                                                              |
| [Escaped Output] f.input(:counter_muted)                                                                   |
+------------------------------------------------------------------------------------------------------------+

old_admin/mental_games/_fields.["Template:old_admin/mental_games/_form"]

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:user_email, :collection => ([@mental_game.user.email]), :include_blank => false) |
| [Escaped Output] f.input(:updated_at)                                                                      |
| [Escaped Output] f.input(:exercise_time_total)                                                             |
| [Escaped Output] f.input(:exercise_time_target)                                                            |
| [Escaped Output] f.input(:exercise_time)                                                                   |
| [Escaped Output] f.input(:breaths_per_minute)                                                              |
| [Escaped Output] f.input(:counter_muted)                                                                   |
+------------------------------------------------------------------------------------------------------------+

old_admin/mental_games/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @mental_game]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f =>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/mental_games/index

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] mental_game.user.email                                                                                        |
| [Escaped Output] mental_game.updated_at.to_date                                                                                |
| [Escaped Output] mental_game.exercise_time_total.round(1)                                                                      |
| [Escaped Output] link_to("Show", old_admin_mental_game_path(mental_game))                                                      |
| [Escaped Output] link_to("Destroy", [:old_admin, mental_game], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
+--------------------------------------------------------------------------------------------------------------------------------+

old_admin/mental_games/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @mental_game]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f =>>
| [Escaped Output] link_to("Back", old_admin_mental_games_path)                                                                                             >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_fields

+--------------------------------------------------+
| Output                                           |
+--------------------------------------------------+
| [Escaped Output] f.input(:name)                  |
| [Escaped Output] f.input(:email)                 |
| [Escaped Output] f.input(:referral)              |
| [Escaped Output] f.input(:password)              |
| [Escaped Output] f.input(:password_confirmation) |
+--------------------------------------------------+

old_admin/pro_users/_fields.["Template:old_admin/pro_users/_form"]

+--------------------------------------------------+
| Output                                           |
+--------------------------------------------------+
| [Escaped Output] f.input(:name)                  |
| [Escaped Output] f.input(:email)                 |
| [Escaped Output] f.input(:referral)              |
| [Escaped Output] f.input(:password)              |
| [Escaped Output] f.input(:password_confirmation) |
+--------------------------------------------------+

old_admin/pro_users/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @pro_user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_form.["OldAdmin::ProUsersController#edit", "Template:old_admin/pro_users/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, ProUser.friendly.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(parti>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_form.["Template:old_admin/pro_users/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @pro_user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_signup_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] p.error_notification                                                                                                                     >>
| [Escaped Output] p.input(:email)                                                                                                                          >>
| [Escaped Output] prof.input(:first_name)                                                                                                                  >>
| [Escaped Output] prof.input(:family_name)                                                                                                                 >>
| [Escaped Output] prof.input(:place)                                                                                                                       >>
| [Escaped Output] prof.input(:qualification)                                                                                                               >>
| [Escaped Output] p.simple_fields_for(:professional) do; [Escaped Output] prof.input(:first_name);[Escaped Output] prof.input(:family_name);[Escaped Output>>
| [Escaped Output] p.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @pro_user]) do; [Escaped Output] p.error_notification;[Escaped Output] p.input(:email);[Escaped Output] p.si>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_signup_form.["OldAdmin::ProUsersController#create", "Template:old_admin/pro_users/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] p.error_notification                                                                                                                     >>
| [Escaped Output] p.input(:email)                                                                                                                          >>
| [Escaped Output] prof.input(:first_name)                                                                                                                  >>
| [Escaped Output] prof.input(:family_name)                                                                                                                 >>
| [Escaped Output] prof.input(:place)                                                                                                                       >>
| [Escaped Output] prof.input(:qualification)                                                                                                               >>
| [Escaped Output] p.simple_fields_for(:professional) do; [Escaped Output] prof.input(:first_name);[Escaped Output] prof.input(:family_name);[Escaped Output>>
| [Escaped Output] p.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, ProUser.new(params[:pro_user])]) do; [Escaped Output] p.error_notification;[Escaped Output] p.input(:email);>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_signup_form.["OldAdmin::ProUsersController#new", "Template:old_admin/pro_users/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] p.error_notification                                                                                                                     >>
| [Escaped Output] p.input(:email)                                                                                                                          >>
| [Escaped Output] prof.input(:first_name)                                                                                                                  >>
| [Escaped Output] prof.input(:family_name)                                                                                                                 >>
| [Escaped Output] prof.input(:place)                                                                                                                       >>
| [Escaped Output] prof.input(:qualification)                                                                                                               >>
| [Escaped Output] p.simple_fields_for(:professional) do; [Escaped Output] prof.input(:first_name);[Escaped Output] prof.input(:family_name);[Escaped Output>>
| [Escaped Output] p.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, ProUser.new]) do; [Escaped Output] p.error_notification;[Escaped Output] p.input(:email);[Escaped Output] p.>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/_signup_form.["Template:old_admin/pro_users/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] p.error_notification                                                                                                                     >>
| [Escaped Output] p.input(:email)                                                                                                                          >>
| [Escaped Output] prof.input(:first_name)                                                                                                                  >>
| [Escaped Output] prof.input(:family_name)                                                                                                                 >>
| [Escaped Output] prof.input(:place)                                                                                                                       >>
| [Escaped Output] prof.input(:qualification)                                                                                                               >>
| [Escaped Output] p.simple_fields_for(:professional) do; [Escaped Output] prof.input(:first_name);[Escaped Output] prof.input(:family_name);[Escaped Output>>
| [Escaped Output] p.button(:submit, :class => "wider_button")                                                                                              >>
| [Escaped Output] simple_form_for([:old_admin, @pro_user]) do; [Escaped Output] p.error_notification;[Escaped Output] p.input(:email);[Escaped Output] p.si>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/pro_users/edit

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                            |
| [Escaped Output] link_to("Show", old_admin_pro_user_path(@pro_user))                      |
| [Escaped Output] link_to("Back", old_admin_pro_users_path(:time_frame => "Three Months")) |
+-------------------------------------------------------------------------------------------+

old_admin/pro_users/edit.["OldAdmin::ProUsersController#edit"]

+-----------------------------------------------------------------------------------------------+
| Output                                                                                        |
+-----------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                                |
| [Escaped Output] link_to("Show", old_admin_pro_user_path(ProUser.friendly.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_pro_users_path(:time_frame => "Three Months"))     |
+-----------------------------------------------------------------------------------------------+

old_admin/pro_users/index

+-----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                      |
+-----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @pro_user_category                                                                                         |
| [Escaped Output] pro_user.name                                                                                              |
| [Escaped Output] pro_user.email                                                                                             |
| [Escaped Output] pro_user.referral                                                                                          |
| [Escaped Output] ((pro_user.created_at.to_date.to_s + " ") + pro_user.account.weekly_anniversary)                           |
| [Escaped Output] pro_user.account.last_login.to_date                                                                        |
| [Escaped Output] pro_user.microposts.count                                                                                  |
| [Escaped Output] link_to("Profile", old_admin_profile_path(pro_user.profile))                                               |
| [Escaped Output] link_to("Acct", old_admin_account_path(pro_user.account))                                                  |
| [Escaped Output] link_to("Professional", old_admin_professional_path(pro_user.professional))                                |
| [Escaped Output] optOutAll_link(pro_user)                                                                                   |
| [Escaped Output] link_to("Show", old_admin_pro_user_path(pro_user))                                                         |
| [Escaped Output] link_to("Edit", edit_old_admin_pro_user_path(pro_user))                                                    |
| [Escaped Output] link_to("Destroy", [:old_admin, pro_user], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New ProUser", new_old_admin_pro_user_path)                                                        |
+-----------------------------------------------------------------------------------------------------------------------------+

old_admin/pro_users/new

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] render(partial => "signup_form", {})      |
| [Escaped Output] link_to("Back", old_admin_pro_users_path) |
+------------------------------------------------------------+

old_admin/pro_users/new.["OldAdmin::ProUsersController#new"]

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] render(partial => "signup_form", {})      |
| [Escaped Output] link_to("Back", old_admin_pro_users_path) |
+------------------------------------------------------------+

old_admin/pro_users/show

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                   |
| [Escaped Output] @pro_user.name                                                           |
| [Escaped Output] @pro_user.email                                                          |
| [Escaped Output] @pro_user.professional.place                                             |
| [Escaped Output] @pro_user.professional.qualification                                     |
| [Escaped Output] link_to("Edit", edit_old_admin_pro_user_path(@pro_user))                 |
| [Escaped Output] link_to("Back", old_admin_pro_users_path(:time_frame => "Three Months")) |
+-------------------------------------------------------------------------------------------+

old_admin/pro_users/show.["OldAdmin::ProUsersController#show"]

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                            |
| [Escaped Output] ProUser.friendly.find(params[:id]).name                                           |
| [Escaped Output] ProUser.friendly.find(params[:id]).email                                          |
| [Escaped Output] ProUser.friendly.find(params[:id]).professional.place                             |
| [Escaped Output] ProUser.friendly.find(params[:id]).professional.qualification                     |
| [Escaped Output] link_to("Edit", edit_old_admin_pro_user_path(ProUser.friendly.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_pro_users_path(:time_frame => "Three Months"))          |
+----------------------------------------------------------------------------------------------------+

old_admin/pro_users/stats

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/pro_users_stats", {}) |
+------------------------------------------------------------------+

old_admin/professionals/edit

+---------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                      |
+---------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => f })                                                                 |
| [Escaped Output] form_for([:old_admin, @professional]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f }); end |
| [Escaped Output] link_to("Show", old_admin_professional_path, :class => "side_menu_link")                                                   |
| [Escaped Output] link_to("Professionals", old_admin_professionals_path, :class => "side_menu_link")                                         |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                         |
+---------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/professionals/edit.["OldAdmin::ProfessionalsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                                 >>
| [Escaped Output] form_for([:old_admin, Professional.find(params[:id])]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBui>>
| [Escaped Output] link_to("Show", old_admin_professional_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Professionals", old_admin_professionals_path, :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/professionals/index

+----------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                               |
+----------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] ((p.first_name + " ") + p.family_name)                                                              |
| [Escaped Output] p.place                                                                                             |
| [Escaped Output] p.city                                                                                              |
| [Escaped Output] p.state                                                                                             |
| [Escaped Output] p.country                                                                                           |
| [Escaped Output] link_to("Edit", edit_old_admin_professional_path(p))                                                |
| [Escaped Output] link_to("Show", old_admin_professional_path(p))                                                     |
| [Escaped Output] link_to("Destroy", [:old_admin, p], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Professional", new_old_admin_professional_path, :class => "side_menu_link")            |
| [Escaped Output] link_to("Professionals", old_admin_professionals_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                  |
+----------------------------------------------------------------------------------------------------------------------+

old_admin/professionals/index_students

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] user.email                                             |
| [Escaped Output] user.email                                             |
| [Escaped Output] link_to("Show User", old_admin_user_path(user))        |
| [Escaped Output] link_to("Show Professional", old_admin_user_path(pro)) |
| [Escaped Output] link_to("Back", old_admin_professionals_path)          |
+-------------------------------------------------------------------------+

old_admin/professionals/index_students.["OldAdmin::ProfessionalsController#index_students"]

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] user.email                                             |
| [Escaped Output] user.email                                             |
| [Escaped Output] link_to("Show User", old_admin_user_path(user))        |
| [Escaped Output] link_to("Show Professional", old_admin_user_path(pro)) |
| [Escaped Output] link_to("Back", old_admin_professionals_path)          |
+-------------------------------------------------------------------------+

old_admin/professionals/new

+---------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                      |
+---------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => f })                                                                 |
| [Escaped Output] form_for([:old_admin, @professional]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f }); end |
+---------------------------------------------------------------------------------------------------------------------------------------------+

old_admin/professionals/new.["OldAdmin::ProfessionalsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                                 >>
| [Escaped Output] form_for([:old_admin, Professional.new(params[:professional])]) do; [Escaped Output] render(partial => "shared/professional_form", { :f =>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/professionals/new.["OldAdmin::ProfessionalsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                                 >>
| [Escaped Output] form_for([:old_admin, Professional.new]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new }); e>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/professionals/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true })                                                            >>
| [Escaped Output] form_for([:old_admin, @professional]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true });>>
| [Escaped Output] link_to("Edit", edit_old_admin_professional_path(@professional), :class => "side_menu_link")                                             >>
| [Escaped Output] link_to("Professionals", old_admin_professionals_path, :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/professionals/show.["OldAdmin::ProfessionalsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new, :disabled => true })                                              >>
| [Escaped Output] form_for([:old_admin, Professional.find(params[:id])]) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBui>>
| [Escaped Output] link_to("Edit", edit_old_admin_professional_path(Professional.find(params[:id])), :class => "side_menu_link")                            >>
| [Escaped Output] link_to("Professionals", old_admin_professionals_path, :class => "side_menu_link")                                                       >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/profiles/index

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] p.user.email                               |
| [Escaped Output] p.optOutAll                                |
| [Escaped Output] p.optOutWeekly                             |
| [Escaped Output] p.handicap_country[(0..3)]                 |
| [Escaped Output] p.pro_id                                   |
| [Escaped Output] p.email_preferences_token[(0..3)]          |
| [Escaped Output] p.start_stage                              |
| [Escaped Output] optOutAll_link(p.user)                     |
| [Escaped Output] link_to("show", old_admin_profile_path(p)) |
+-------------------------------------------------------------+

old_admin/profiles/show

+------------------------------------------------------------------------------------------+
| Output                                                                                   |
+------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                  |
| [Escaped Output] @profile.user.email                                                     |
| [Escaped Output] @profile.optOutAll                                                      |
| [Escaped Output] @profile.exact_handicap                                                 |
| [Escaped Output] @profile.handicap_type                                                  |
| [Escaped Output] @profile.start_stage                                                    |
| [Escaped Output] @profile.provisional_handicap                                           |
| [Escaped Output] @profile.use_practice_score                                             |
| [Escaped Output] @profile.use_awareness                                                  |
| [Escaped Output] @profile.use_enjoyment                                                  |
| [Escaped Output] link_to("Back", old_admin_profiles_path(:time_frame => "Three Months")) |
+------------------------------------------------------------------------------------------+

old_admin/subscribers/_fields

+----------------------------------+
| Output                           |
+----------------------------------+
| [Escaped Output] f.input(:email) |
+----------------------------------+

old_admin/subscribers/_fields.["Template:old_admin/subscribers/_form"]

+----------------------------------+
| Output                           |
+----------------------------------+
| [Escaped Output] f.input(:email) |
+----------------------------------+

old_admin/subscribers/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @subscriber]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f =>>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/subscribers/_form.["OldAdmin::SubscribersController#create", "Template:old_admin/subscribers/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Subscriber.new(params[:subscriber])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(part>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/subscribers/_form.["OldAdmin::SubscribersController#edit", "Template:old_admin/subscribers/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Subscriber.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/subscribers/_form.["Template:old_admin/subscribers/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @subscriber]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f =>>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/subscribers/edit

+--------------------------------------------------------------------------+
| Output                                                                   |
+--------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                           |
| [Escaped Output] link_to("Show", old_admin_subscriber_path(@subscriber)) |
| [Escaped Output] link_to("Back", old_admin_subscribers_path)             |
+--------------------------------------------------------------------------+

old_admin/subscribers/edit.["OldAdmin::SubscribersController#edit"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                            |
| [Escaped Output] link_to("Show", old_admin_subscriber_path(Subscriber.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_subscribers_path)                              |
+-------------------------------------------------------------------------------------------+

old_admin/subscribers/index

+-------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                        |
+-------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] subscriber.email                                                                                             |
| [Escaped Output] subscriber.optOutAll                                                                                         |
| [Escaped Output] link_to("Toggle", toggle_optOutAll_old_admin_subscriber_path(subscriber))                                    |
| [Escaped Output] link_to("Show", old_admin_subscriber_path(subscriber))                                                       |
| [Escaped Output] link_to("Edit", edit_old_admin_subscriber_path(subscriber))                                                  |
| [Escaped Output] link_to("Destroy", [:old_admin, subscriber], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Subscriber", new_old_admin_subscriber_path)                                                     |
+-------------------------------------------------------------------------------------------------------------------------------+

old_admin/subscribers/index.["OldAdmin::SubscribersController#toggle_optOutAll"]

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] Subscriber.new.email                                                                                             |
| [Escaped Output] Subscriber.new.optOutAll                                                                                         |
| [Escaped Output] link_to("Toggle", toggle_optOutAll_old_admin_subscriber_path(Subscriber.new))                                    |
| [Escaped Output] link_to("Show", old_admin_subscriber_path(Subscriber.new))                                                       |
| [Escaped Output] link_to("Edit", edit_old_admin_subscriber_path(Subscriber.new))                                                  |
| [Escaped Output] link_to("Destroy", [:old_admin, Subscriber.new], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Subscriber", new_old_admin_subscriber_path)                                                         |
+-----------------------------------------------------------------------------------------------------------------------------------+

old_admin/subscribers/new

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})               |
| [Escaped Output] link_to("Back", old_admin_subscribers_path) |
+--------------------------------------------------------------+

old_admin/subscribers/new.["OldAdmin::SubscribersController#create"]

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})               |
| [Escaped Output] link_to("Back", old_admin_subscribers_path) |
+--------------------------------------------------------------+

old_admin/subscribers/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @subscriber]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f =>>>
| [Escaped Output] link_to("Edit", edit_old_admin_subscriber_path(@subscriber))                                                                             >>
| [Escaped Output] link_to("Back", old_admin_subscribers_path)                                                                                              >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/_fields

+---------------------------------+
| Output                          |
+---------------------------------+
| [Escaped Output] @tip.number    |
| [Escaped Output] f.input(:body) |
+---------------------------------+

old_admin/tips/_fields.["OldAdmin::TipsController#edit", "Template:old_admin/tips/edit", "Template:old_admin/tips/_form"]

+-----------------------------------------------+
| Output                                        |
+-----------------------------------------------+
| [Escaped Output] Tip.find(params[:id]).number |
| [Escaped Output] f.input(:body)               |
+-----------------------------------------------+

old_admin/tips/_fields.["Template:old_admin/tips/_form"]

+---------------------------------+
| Output                          |
+---------------------------------+
| [Escaped Output] @tip.number    |
| [Escaped Output] f.input(:body) |
+---------------------------------+

old_admin/tips/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @tip]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });[>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/_form.["OldAdmin::TipsController#edit", "Template:old_admin/tips/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Tip.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/_form.["Template:old_admin/tips/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @tip]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });[>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/edit

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})             |
| [Escaped Output] link_to("Show", old_admin_tip_path(@tip)) |
| [Escaped Output] link_to("Back", old_admin_tips_path)      |
+------------------------------------------------------------+

old_admin/tips/edit.["OldAdmin::TipsController#edit"]

+-----------------------------------------------------------------------------+
| Output                                                                      |
+-----------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                              |
| [Escaped Output] link_to("Show", old_admin_tip_path(Tip.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_tips_path)                       |
+-----------------------------------------------------------------------------+

old_admin/tips/index

+------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                 |
+------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] tip.number                                                                                            |
| [Escaped Output] tip.summary                                                                                           |
| [Escaped Output] link_to("Edit", edit_old_admin_tip_path(tip))                                                         |
| [Escaped Output] link_to("Move", move_old_admin_tip_path(tip))                                                         |
| [Escaped Output] link_to("Show", old_admin_tip_path(tip))                                                              |
| [Escaped Output] link_to("Destroy", [:old_admin, tip], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New Tip", new_old_admin_tip_path, :class => "side_menu_link")                                |
| [Escaped Output] link_to("Old Admin", "/old_admin/dashboards", :class => "side_menu_link")                             |
| [Escaped Output] link_to("Rails Admin", "/admin", :class => "side_menu_link")                                          |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                    |
+------------------------------------------------------------------------------------------------------------------------+

old_admin/tips/move

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] "Move tip #{@tip.number} (#{@tip.summary}) to "                                                                                          >>
| [Escaped Output] t.input(:target, :collection => Tip.selectors)                                                                                           >>
| [Escaped Output] t.submit("Update")                                                                                                                       >>
| [Escaped Output] simple_form_for(@tip, :url => move_update_old_admin_tip_path) do; [Escaped Output] t.input(:target, :collection => Tip.selectors);[Escape>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/move.["OldAdmin::TipsController#move"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] "Move tip #{Tip.find(params[:id]).number} (#{Tip.find(params[:id]).summary}) to "                                                        >>
| [Escaped Output] t.input(:target, :collection => Tip.selectors)                                                                                           >>
| [Escaped Output] t.submit("Update")                                                                                                                       >>
| [Escaped Output] simple_form_for(Tip.find(params[:id]), :url => move_update_old_admin_tip_path) do; [Escaped Output] t.input(:target, :collection => Tip.s>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] (Tip.count + 1)                                                                                                                          >>
| [Escaped Output] f.input(:body)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @tip]) do; [Escaped Output] f.error_notification;[Escaped Output] (Tip.count + 1);[Escaped Output] f.input(:>>
| [Escaped Output] link_to("Back", old_admin_tips_path)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/new.["OldAdmin::TipsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] (Tip.count + 1)                                                                                                                          >>
| [Escaped Output] f.input(:body)                                                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, Tip.new(params[:tip])]) do; [Escaped Output] f.error_notification;[Escaped Output] (Tip.count + 1);[Escaped >>
| [Escaped Output] link_to("Back", old_admin_tips_path)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/tips/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @tip]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f }); >>
| [Escaped Output] link_to("Edit", edit_old_admin_tip_path(@tip))                                                                                           >>
| [Escaped Output] link_to("Back", old_admin_tips_path)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/_fields

+--------------------------------------------------+
| Output                                           |
+--------------------------------------------------+
| [Escaped Output] f.input(:name)                  |
| [Escaped Output] f.input(:email)                 |
| [Escaped Output] f.input(:referral)              |
| [Escaped Output] f.input(:password)              |
| [Escaped Output] f.input(:password_confirmation) |
+--------------------------------------------------+

old_admin/users/_fields.["Template:old_admin/users/_form"]

+--------------------------------------------------+
| Output                                           |
+--------------------------------------------------+
| [Escaped Output] f.input(:name)                  |
| [Escaped Output] f.input(:email)                 |
| [Escaped Output] f.input(:referral)              |
| [Escaped Output] f.input(:password)              |
| [Escaped Output] f.input(:password_confirmation) |
+--------------------------------------------------+

old_admin/users/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/_form.["OldAdmin::UsersController#create", "Template:old_admin/users/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, User.new(params[:user])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fiel>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/_form.["OldAdmin::UsersController#edit", "Template:old_admin/users/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, User.friendly.find(params[:id])]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/_form.["Template:old_admin/users/edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for([:old_admin, @user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/attempts

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] @results.count                                 |
| [Escaped Output] "style='width: 65%; font-size: 8px'".html_safe |
| [Escaped Output] k                                              |
| [Escaped Output] email                                          |
| [Escaped Output] h(v)                                           |
+-----------------------------------------------------------------+

old_admin/users/attempts.["OldAdmin::UsersController#attempts"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] Analysis.new.attempts_to_pay_overview.count    |
| [Escaped Output] "style='width: 65%; font-size: 8px'".html_safe |
| [Escaped Output] k                                              |
| [Escaped Output] email                                          |
| [Escaped Output] h(v)                                           |
+-----------------------------------------------------------------+

old_admin/users/edit

+---------------------------------------------------------------------------------------+
| Output                                                                                |
+---------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                        |
| [Escaped Output] link_to("Show", old_admin_user_path(@user))                          |
| [Escaped Output] link_to("Back", old_admin_users_path(:time_frame => "Three Months")) |
+---------------------------------------------------------------------------------------+

old_admin/users/edit.["OldAdmin::UsersController#edit"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})                                         |
| [Escaped Output] link_to("Show", old_admin_user_path(User.friendly.find(params[:id]))) |
| [Escaped Output] link_to("Back", old_admin_users_path(:time_frame => "Three Months"))  |
+----------------------------------------------------------------------------------------+

old_admin/users/index

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @user_category                                                                                         |
| [Escaped Output] user.name                                                                                              |
| [Escaped Output] user.email                                                                                             |
| [Escaped Output] user.type                                                                                              |
| [Escaped Output] ((user.created_at.to_date.to_s + " ") + user.account.weekly_anniversary)                               |
| [Escaped Output] user.account.last_login.to_date                                                                        |
| [Escaped Output] user.microposts.count                                                                                  |
| [Escaped Output] link_to("Profile", old_admin_profile_path(user.profile))                                               |
| [Escaped Output] link_to("Acct", old_admin_account_path(user.account))                                                  |
| [Escaped Output] optOutAll_link(user)                                                                                   |
| [Escaped Output] link_to("Show", old_admin_user_path(user))                                                             |
| [Escaped Output] link_to("Edit", edit_old_admin_user_path(user))                                                        |
| [Escaped Output] link_to("Destroy", [:old_admin, user], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New User", new_old_admin_user_path)                                                           |
+-------------------------------------------------------------------------------------------------------------------------+

old_admin/users/index.["OldAdmin::UsersController#index_guests"]

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+

| [Escaped Output] user.name                                                                                              |
| [Escaped Output] user.email                                                                                             |
| [Escaped Output] user.type                                                                                              |
| [Escaped Output] ((user.created_at.to_date.to_s + " ") + user.account.weekly_anniversary)                               |
| [Escaped Output] user.account.last_login.to_date                                                                        |
| [Escaped Output] user.microposts.count                                                                                  |
| [Escaped Output] link_to("Profile", old_admin_profile_path(user.profile))                                               |
| [Escaped Output] link_to("Acct", old_admin_account_path(user.account))                                                  |
| [Escaped Output] optOutAll_link(user)                                                                                   |
| [Escaped Output] link_to("Show", old_admin_user_path(user))                                                             |
| [Escaped Output] link_to("Edit", edit_old_admin_user_path(user))                                                        |
| [Escaped Output] link_to("Destroy", [:old_admin, user], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New User", new_old_admin_user_path)                                                           |
+-------------------------------------------------------------------------------------------------------------------------+

old_admin/users/index.["OldAdmin::UsersController#index_students"]

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+

| [Escaped Output] user.name                                                                                              |
| [Escaped Output] user.email                                                                                             |
| [Escaped Output] user.type                                                                                              |
| [Escaped Output] ((user.created_at.to_date.to_s + " ") + user.account.weekly_anniversary)                               |
| [Escaped Output] user.account.last_login.to_date                                                                        |
| [Escaped Output] user.microposts.count                                                                                  |
| [Escaped Output] link_to("Profile", old_admin_profile_path(user.profile))                                               |
| [Escaped Output] link_to("Acct", old_admin_account_path(user.account))                                                  |
| [Escaped Output] optOutAll_link(user)                                                                                   |
| [Escaped Output] link_to("Show", old_admin_user_path(user))                                                             |
| [Escaped Output] link_to("Edit", edit_old_admin_user_path(user))                                                        |
| [Escaped Output] link_to("Destroy", [:old_admin, user], :method => :delete, :data => ({ :confirm => "Are you sure?" })) |
| [Escaped Output] link_to("New User", new_old_admin_user_path)                                                           |
+-------------------------------------------------------------------------------------------------------------------------+

old_admin/users/index_dormant

+------------------------------------------+
| Output                                   |
+------------------------------------------+
| [Escaped Output] user.name               |
| [Escaped Output] user.email              |
| [Escaped Output] user.referral           |
| [Escaped Output] user.created_at.to_date |
+------------------------------------------+

old_admin/users/index_dormant.["OldAdmin::UsersController#index_dormant"]

+------------------------------------------+
| Output                                   |
+------------------------------------------+
| [Escaped Output] user.name               |
| [Escaped Output] user.email              |
| [Escaped Output] user.referral           |
| [Escaped Output] user.created_at.to_date |
+------------------------------------------+

old_admin/users/new

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})         |
| [Escaped Output] link_to("Back", old_admin_users_path) |
+--------------------------------------------------------+

old_admin/users/new.["OldAdmin::UsersController#create"]

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] render(partial => "form", {})         |
| [Escaped Output] link_to("Back", old_admin_users_path) |
+--------------------------------------------------------+

old_admin/users/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] simple_form_for([:old_admin, @user]) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "fields", { :f => f });>>
| [Escaped Output] link_to("Edit", edit_old_admin_user_path(@user))                                                                                         >>
| [Escaped Output] link_to("Back", old_admin_users_path(:time_frame => "Three Months"))                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

old_admin/users/stats

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/users_stats", {}) |
+--------------------------------------------------------------+

old_admin/users/stats.["OldAdmin::UsersController#stats"]

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/users_stats", {}) |
+--------------------------------------------------------------+

pages/Terms

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] link_to("contact us", contact_us_path) |
+---------------------------------------------------------+

pages/_about

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] ((Time.now - Date.new(2012, 10, 12).to_time) / 1.years).floor |
| [Escaped Output] TGM_VERSION                                                   |
| [Escaped Output] tgm_version_text                                              |
+--------------------------------------------------------------------------------+

pages/_about.["Template:layouts/_footer"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] ((Time.now - Date.new(2012, 10, 12).to_time) / 1.years).floor |

| [Escaped Output] tgm_version_text                                              |
+--------------------------------------------------------------------------------+

pages/_feedback_form_ios_visitor

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Your Email:")                                                                                                 >>
| [Escaped Output] email_field_tag(:feedbackEmail, nil)                                                                                                     >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Send", :text_waiting => "Sending" }), :class => "etm15" })              >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] text_area_tag(:feedbackComment);[Escaped Output] label_tag(:feedbackEmail, ">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/_feedback_form_ios_visitor.["Template:pages/contact_us"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Your Email:")                                                                                                 >>
| [Escaped Output] email_field_tag(:feedbackEmail, nil)                                                                                                     >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Send", :text_waiting => "Sending" }), :class => "etm15" })              >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] text_area_tag(:feedbackComment);[Escaped Output] label_tag(:feedbackEmail, ">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/_feedback_form_unsignedin

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Your Email:")                                                                                                 >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Update", :text_waiting => "Updating" }) })                              >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/_feedback_form_unsignedin.["Template:pages/contact_us"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Your Email:")                                                                                                 >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Update", :text_waiting => "Updating" }) })                              >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/_welcome_text

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] calculator_welcome_text(@user.referral)                |
| [Escaped Output] link_to("here", secret_to_golf_path)                   |
| [Escaped Output] render(partial => "shared/current_challenge", {})      |
| [Escaped Output] tutorial_information.html_safe                         |
| [Escaped Output] render(partial => "shared/feedback_form_signedin", {}) |
+-------------------------------------------------------------------------+

pages/_welcome_text.["PagesController#home", "Template:pages/myhome"]

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] calculator_welcome_text(current_user.referral)         |
| [Escaped Output] link_to("here", secret_to_golf_path)                   |
| [Escaped Output] render(partial => "shared/current_challenge", {})      |
| [Escaped Output] tutorial_information.html_safe                         |
| [Escaped Output] render(partial => "shared/feedback_form_signedin", {}) |
+-------------------------------------------------------------------------+

pages/_welcome_text.["Template:pages/myhome"]

+-------------------------------------------------------------------------+
| Output                                                                  |
+-------------------------------------------------------------------------+
| [Escaped Output] calculator_welcome_text(@user.referral)                |
| [Escaped Output] link_to("here", secret_to_golf_path)                   |
| [Escaped Output] render(partial => "shared/current_challenge", {})      |
| [Escaped Output] tutorial_information.html_safe                         |
| [Escaped Output] render(partial => "shared/feedback_form_signedin", {}) |
+-------------------------------------------------------------------------+

pages/_welcome_to_app_users

+----------------------------------------------------------------+
| Output                                                         |
+----------------------------------------------------------------+
| [Escaped Output] bs_alert(:level => "info") do; [ignored]; end |
+----------------------------------------------------------------+

pages/_welcome_to_app_users.["Template:pages/myhome"]

+----------------------------------------------------------------+
| Output                                                         |
+----------------------------------------------------------------+
| [Escaped Output] bs_alert(:level => "info") do; [ignored]; end |
+----------------------------------------------------------------+

pages/about

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] render(partial => "pages/about", {}) |
+-------------------------------------------------------+

pages/about.["PagesController#about"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] render(partial => "pages/about", {}) |
+-------------------------------------------------------+

pages/beginner_golf

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("training aid", golf_training_aid_path)                     |
| [Escaped Output] link_to("training aid", golf_training_aid_path)                     |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "signup_button round") |
| [Escaped Output] advert_display(:bottom, @advert_hide)                               |
| [Escaped Output] render(partial => "shared/sidebars/standard_newsletter", {})        |
+--------------------------------------------------------------------------------------+

pages/beginner_golf.["PagesController#beginner_golf"]

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("training aid", golf_training_aid_path)                     |
| [Escaped Output] link_to("training aid", golf_training_aid_path)                     |
| [Escaped Output] link_to("Try it Now", signup_path, :class => "signup_button round") |
| [Escaped Output] advert_display(:bottom, @advert_hide)                               |
| [Escaped Output] render(partial => "shared/sidebars/standard_newsletter", {})        |
+--------------------------------------------------------------------------------------+

pages/boot_example

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "success") do; ; end                                                                                   >>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "info") do; ; end                                                                                      >>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "warning") do; ; end                                                                                   >>
| [Escaped Output] bs_alert(:id => "xyz1", :level => "danger") do; ; end                                                                                    >>
| [Escaped Output] render(partial => "shared/feedback_modal", {})                                                                                           >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Enter email")                                                                                           >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@user, :html => ({ :class => "form-inline" }), :wrapper => :inline_form) do; [Escaped Output] f.error_notification;[Escap>>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Email")                                                                                                 >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.input(:country_name, :as => :text)                                                                                                     >>
| [Escaped Output] f.input(:referral, :collection => (["Option one is this and that\u{2014}be sure to include why it's great", "Option two can be something >>
| [Escaped Output] f.input(:sex, :as => :radio_buttons, :collection => (["Male", "Female"]))                                                                >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@user, :html => ({ :class => "form-horizontal" }), :wrapper => :horizontal_form, :wrapper_mappings => ({ :check_boxes => >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Enter email")                                                                                           >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.input(:referral, :collection => (["Option one is this and that\u{2014}be sure to include why it's great", "Option two can be something >>
| [Escaped Output] f.input(:sex, :as => :radio_buttons, :collection => (["Male", "Female"]))                                                                >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@user) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:email, :placeholder => "Enter email");[Escaped>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/boot_example.["PagesController#boot_example"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "success") do; ; end                                                                                   >>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "info") do; ; end                                                                                      >>
| [Escaped Output] bs_alert(:id => "xyz2", :level => "warning") do; ; end                                                                                   >>
| [Escaped Output] bs_alert(:id => "xyz1", :level => "danger") do; ; end                                                                                    >>
| [Escaped Output] render(partial => "shared/feedback_modal", {})                                                                                           >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Enter email")                                                                                           >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(User.new, :html => ({ :class => "form-inline" }), :wrapper => :inline_form) do; [Escaped Output] f.error_notification;[Es>>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Email")                                                                                                 >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.input(:country_name, :as => :text)                                                                                                     >>
| [Escaped Output] f.input(:referral, :collection => (["Option one is this and that\u{2014}be sure to include why it's great", "Option two can be something >>
| [Escaped Output] f.input(:sex, :as => :radio_buttons, :collection => (["Male", "Female"]))                                                                >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(User.new, :html => ({ :class => "form-horizontal" }), :wrapper => :horizontal_form, :wrapper_mappings => ({ :check_boxes >>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] f.input(:email, :placeholder => "Enter email")                                                                                           >>
| [Escaped Output] f.input(:password, :placeholder => "Password")                                                                                           >>
| [Escaped Output] f.input(:referral, :collection => (["Option one is this and that\u{2014}be sure to include why it's great", "Option two can be something >>
| [Escaped Output] f.input(:sex, :as => :radio_buttons, :collection => (["Male", "Female"]))                                                                >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(User.new) do; [Escaped Output] f.error_notification;[Escaped Output] f.input(:email, :placeholder => "Enter email");[Esca>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/contact_us

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/feedback_form_signedin", {})   |
| [Escaped Output] render(partial => "pages/feedback_form_ios_visitor", {}) |
| [Escaped Output] render(partial => "pages/feedback_form_unsignedin", {})  |
+---------------------------------------------------------------------------+

pages/contact_us.["PagesController#contact_us"]

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/feedback_form_signedin", {})   |
| [Escaped Output] render(partial => "pages/feedback_form_ios_visitor", {}) |
| [Escaped Output] render(partial => "pages/feedback_form_unsignedin", {})  |
+---------------------------------------------------------------------------+

pages/facebook

+--------------------------------------------------+
| Output                                           |
+--------------------------------------------------+
| [Escaped Output] link_to("home page", root_path) |
+--------------------------------------------------+

pages/fb_improve_golf

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("golf_nuts_210.png", :alt => "analyze this", :class => "round")                                                                >>
| [Escaped Output] FreePeriod                                                                                                                               >>
| [Escaped Output] link_to("Free #{FreePeriod} Day Trial", signupFbImprove_path, :class => "signup_button round")                                           >>
| [Escaped Output] link_to("Read Case Study", tutorialCaseStudy_path, :class => "signup_button round")                                                      >>
| [Escaped Output] link_to("See Screen Shots", reportSample_path, :class => "signup_button round")                                                          >>
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :class => "round")                                                                >>
| [Escaped Output] link_to("Join Now", signupFbImprove_path, :class => "signup_button round")                                                               >>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:")                                                                                                      >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                                                        >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/fb_improve_golf.["PagesController#fb_improve_golf"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("golf_nuts_210.png", :alt => "analyze this", :class => "round")                                                                >>
| [Escaped Output] 10                                                                                                                                       >>
| [Escaped Output] link_to("Free #{10} Day Trial", signupFbImprove_path, :class => "signup_button round")                                                   >>
| [Escaped Output] link_to("Read Case Study", tutorialCaseStudy_path, :class => "signup_button round")                                                      >>
| [Escaped Output] link_to("See Screen Shots", reportSample_path, :class => "signup_button round")                                                          >>
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :class => "round")                                                                >>
| [Escaped Output] link_to("Join Now", signupFbImprove_path, :class => "signup_button round")                                                               >>
| [Escaped Output] image_tag("contact-us-thumb.jpg", :alt => "track handicap", :class => "round")                                                           >>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:")                                                                                                      >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                                                                        >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/golf_goals

+-----------------------------------------------------------------------------------------------------------+
| Output                                                                                                    |
+-----------------------------------------------------------------------------------------------------------+
| [Escaped Output] FreePeriod                                                                               |
| [Escaped Output] link_to("Try it Now", new_landing_path(:title => "Learn Now", :referal => "learn_golf")) |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                    |
+-----------------------------------------------------------------------------------------------------------+

pages/golf_goals.["PagesController#golf_goals"]

+-----------------------------------------------------------------------------------------------------------+
| Output                                                                                                    |
+-----------------------------------------------------------------------------------------------------------+
| [Escaped Output] 10                                                                                       |
| [Escaped Output] link_to("Try it Now", new_landing_path(:title => "Learn Now", :referal => "learn_golf")) |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                    |
+-----------------------------------------------------------------------------------------------------------+

pages/golf_training_aid

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Try it Now", signup_path, :class => "signup_button round") |
| [Escaped Output] render(partial => "feedback_form_unsignedin", {})                   |
| [Escaped Output] link_to("Full Swing Tips", fullswing_path)                          |
| [Escaped Output] link_to("Pitching Tips", pitching_path)                             |
| [Escaped Output] link_to("Chipping Tips", golf_chipping_tips_path)                   |
| [Escaped Output] link_to("Putting Tips", putting_path)                               |
| [Escaped Output] link_to("Bunker Play Tips", bunkers_path)                           |
| [Escaped Output] link_to("Mental Game Tips", mentalgame_path)                        |
| [Escaped Output] link_to("Diagnosis Tips", identifyWeaknesses_path)                  |
| [Escaped Output] link_to("Training Aids Tips", trainingaids_path)                    |
| [Escaped Output] link_to("Exercises Tips", exercises_path)                           |
+--------------------------------------------------------------------------------------+

pages/golf_training_aid.["PagesController#golf_training_aid"]

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Try it Now", signup_path, :class => "signup_button round") |
| [Escaped Output] render(partial => "feedback_form_unsignedin", {})                   |
| [Escaped Output] link_to("Full Swing Tips", fullswing_path)                          |
| [Escaped Output] link_to("Pitching Tips", pitching_path)                             |
| [Escaped Output] link_to("Chipping Tips", golf_chipping_tips_path)                   |
| [Escaped Output] link_to("Putting Tips", putting_path)                               |
| [Escaped Output] link_to("Bunker Play Tips", bunkers_path)                           |
| [Escaped Output] link_to("Mental Game Tips", mentalgame_path)                        |
| [Escaped Output] link_to("Diagnosis Tips", identifyWeaknesses_path)                  |
| [Escaped Output] link_to("Training Aids Tips", trainingaids_path)                    |
| [Escaped Output] link_to("Exercises Tips", exercises_path)                           |
+--------------------------------------------------------------------------------------+

pages/guest

+-----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] button_to("Try it for free", users_path, :method => "post", :class => "ordinary_button round") |
+-----------------------------------------------------------------------------------------------------------------+

pages/guest.["PagesController#guest"]

+-----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] button_to("Try it for free", users_path, :method => "post", :class => "ordinary_button round") |
+-----------------------------------------------------------------------------------------------------------------+

pages/handicap_explanation

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] link_to("Simple Stroke Control", "#ssc")         |
| [Escaped Output] render(partial => "handicaps/faq_questions", {}) |
| [Escaped Output] render(partial => "handicaps/faq_answers", {})   |
| [Escaped Output] advert_display(:bottom, @advert_hide)            |
+-------------------------------------------------------------------+

pages/handicap_explanation.["PagesController#handicap_explanation"]

+----------------------------------------------------------------------------------------+
| Output                                                                                 |
+----------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Simple Stroke Control", "#ssc")                              |
| [Escaped Output] render(partial => "handicaps/faq_questions", {})                      |
| [Escaped Output] render(partial => "handicaps/faq_answers", {})                        |
| [Escaped Output] advert_display(:bottom, :side => true, :bottom => true, :top => true) |
+----------------------------------------------------------------------------------------+

pages/help

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("tutorial", secret_to_golf_path)                                                        |
| [Escaped Output] link_to("Contact Us", contact_us_path, :class => "btn btn-primary", :data => spin_when_loading) |
| [Escaped Output] link_to("What is MyHome page?", homeHelp_path)                                                  |
| [Escaped Output] link_to("How do I post a game?", addPostHelp_path)                                              |
| [Escaped Output] link_to("How do I post a Practice Session?", postPracticeHelp_path)                             |
| [Escaped Output] render(partial => "handicaps/faq_questions", {})                                                |
| [Escaped Output] link_to("Why have a Secondary Focus for a Practice Cycle?", "#secondary")                       |
| [Escaped Output] link_to("How do I check my billing information?", "#billing")                                   |
| [Escaped Output] link_to("How do I change my email preferences?", "#EPreferences")                               |
| [Escaped Output] link_to("How do I upgrade my account?", "#upgrade")                                             |
| [Escaped Output] link_to("How do I cancel my subscription to Premium membership?", "#downgrade")                 |
| [Escaped Output] render(partial => "handicaps/faq_answers", {})                                                  |
| [Escaped Output] render(partial => "feedback_form_unsignedin", {})                                               |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                           |
+------------------------------------------------------------------------------------------------------------------+

pages/help.["PagesController#help"]

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("tutorial", secret_to_golf_path)                                                        |
| [Escaped Output] link_to("Contact Us", contact_us_path, :class => "btn btn-primary", :data => spin_when_loading) |
| [Escaped Output] link_to("What is MyHome page?", homeHelp_path)                                                  |
| [Escaped Output] link_to("How do I post a game?", addPostHelp_path)                                              |
| [Escaped Output] link_to("How do I post a Practice Session?", postPracticeHelp_path)                             |
| [Escaped Output] render(partial => "handicaps/faq_questions", {})                                                |
| [Escaped Output] link_to("Why have a Secondary Focus for a Practice Cycle?", "#secondary")                       |
| [Escaped Output] link_to("How do I check my billing information?", "#billing")                                   |
| [Escaped Output] link_to("How do I change my email preferences?", "#EPreferences")                               |
| [Escaped Output] link_to("How do I upgrade my account?", "#upgrade")                                             |
| [Escaped Output] link_to("How do I cancel my subscription to Premium membership?", "#downgrade")                 |
| [Escaped Output] render(partial => "handicaps/faq_answers", {})                                                  |
| [Escaped Output] render(partial => "feedback_form_unsignedin", {})                                               |
| [Escaped Output] advert_display(:bottom, :side => true, :bottom => true, :top => true)                           |
+------------------------------------------------------------------------------------------------------------------+

pages/home

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FreePeriod                                                                                                                               >>
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary", :id => "try-it-now")                                         >>
| [Escaped Output] render(partial => "shared/infographic", {})                                                                                              >>
| [Escaped Output] render(partial => "shared/reasons_why", { :referral => "main" })                                                                         >>
| [Escaped Output] image_tag("analysis-thumb.png", :alt => "analyze this", :class => "round")                                                               >>
| [Escaped Output] link_to("Free #{FreePeriod} Day Trial", signup_path)                                                                                     >>
| [Escaped Output] link_to("See More", golf_training_aid_path, :class => "btn btn-cta btn-cta-primary")                                                     >>
| [Escaped Output] image_tag("chart-thumb.png", :alt => "track handicap", :class => "round")                                                                >>
| [Escaped Output] link_to("Try it Now", signup_path, :class => "btn btn-cta btn-cta-primary")                                                              >>
| [Escaped Output] render(partial => "shared/newsletter_form", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/teachers", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/beginners", {})                                                                                       >>
| [Escaped Output] render(partial => "shared/sidebars/snappy_golf", {})                                                                                     >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/homeHelp

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)         |
| [Escaped Output] MaxPostsToPlot                       |
| [Escaped Output] link_to("here", secret_to_golf_path) |
+-------------------------------------------------------+

pages/jims_tours

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] link_to("good site", "http://www.cssfontstack.com/Web-Fonts#") |
+---------------------------------------------------------------------------------+

pages/jims_tours.["PagesController#jims_tours"]

+---------------------------------------------------------------------------------+
| Output                                                                          |
+---------------------------------------------------------------------------------+
| [Escaped Output] link_to("good site", "http://www.cssfontstack.com/Web-Fonts#") |
+---------------------------------------------------------------------------------+

pages/legal

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Site Rules", "#siteRules")                                                                                      |
| [Escaped Output] link_to("Privacy Policy", "#privacyPolicy")                                                                              |
| [Escaped Output] link_to("Cookies & Targeting", "#cookies")                                                                               |
| [Escaped Output] link_to("Terms of Service", "#termsOfService")                                                                           |
| [Escaped Output] link_to("Subscriber Agreement", "#subscriberAgreement")                                                                  |
| [Escaped Output] link_to("Teaching Professionals", "#teaching_professionals")                                                             |
| [Escaped Output] link_for_device("DoubleClick opt-out page", "https://www.google.com/settings/ads/onweb#display_optout")                  |
| [Escaped Output] link_for_device("Network Advertising Initiative opt-out page", "http://www.networkadvertising.org/managing/opt_out.asp") |
| [Escaped Output] link_to("support", contact_us_path)                                                                                      |
| [Escaped Output] link_to("contact us", contact_us_path)                                                                                   |
| [Escaped Output] link_to("contact the company", contact_us_path)                                                                          |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+

pages/legal.["PagesController#legal"]

+-------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Site Rules", "#siteRules")                                                                                      |
| [Escaped Output] link_to("Privacy Policy", "#privacyPolicy")                                                                              |
| [Escaped Output] link_to("Cookies & Targeting", "#cookies")                                                                               |
| [Escaped Output] link_to("Terms of Service", "#termsOfService")                                                                           |
| [Escaped Output] link_to("Subscriber Agreement", "#subscriberAgreement")                                                                  |
| [Escaped Output] link_to("Teaching Professionals", "#teaching_professionals")                                                             |
| [Escaped Output] link_for_device("DoubleClick opt-out page", "https://www.google.com/settings/ads/onweb#display_optout")                  |
| [Escaped Output] link_for_device("Network Advertising Initiative opt-out page", "http://www.networkadvertising.org/managing/opt_out.asp") |
| [Escaped Output] link_to("support", contact_us_path)                                                                                      |
| [Escaped Output] link_to("contact us", contact_us_path)                                                                                   |
| [Escaped Output] link_to("contact the company", contact_us_path)                                                                          |
| [Escaped Output] advert_display(:bottom, :side => true, :bottom => true, :top => true)                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------------+

pages/legalBeta

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] link_to("Terms and Condition", legal_path) |
+-------------------------------------------------------------+

pages/myhome

+------------------------------------------------------------------------------------------------------------+
| Output                                                                                                     |
+------------------------------------------------------------------------------------------------------------+
| [Escaped Output] early_bird_offer(@user)                                                                   |
| [Escaped Output] normal_offer(@user)                                                                       |
| [Escaped Output] render(partial => "graphs/overview_no_duration", { :graph => (@graph) })                  |
| [Escaped Output] render(partial => "microposts/microposts", {})                                            |
| [Escaped Output] render(partial => "welcome_to_app_users", {})                                             |
| [Escaped Output] render(partial => "welcome_text", {})                                                     |
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                 |
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                            |
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                  |
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                      |
| [Escaped Output] linkage_for_mental_game.html_safe                                                         |
| [Escaped Output] linkage_for_challenges.html_safe                                                          |
| [Escaped Output] linkage_if_setups_not_complete.html_safe                                                  |
| [Escaped Output] link_to("Distance Calculator", club_distance_calculator_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Analysis", report_path, :class => "side_menu_link")                              |
| [Escaped Output] link_to("Overall Progress", report_overall_path, :class => "side_menu_link")              |
| [Escaped Output] link_to("H'cap Certificate", print_handicaps_path, :class => "side_menu_link")            |
| [Escaped Output] link_to("Help", homeHelp_path, :class => "side_menu_link")                                |
| [Escaped Output] early_bird_js                                                                             |
+------------------------------------------------------------------------------------------------------------+

pages/myhome.["PagesController#home"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] early_bird_offer(current_user)                                                                                                           >>
| [Escaped Output] normal_offer(current_user)                                                                                                               >>
| [Escaped Output] render(partial => "graphs/overview_no_duration", { :graph => GraphLine.new_mental_posts("Default Period", current_user.games.includes(:us>>
| [Escaped Output] render(partial => "microposts/microposts", {})                                                                                           >>
| [Escaped Output] render(partial => "welcome_to_app_users", {})                                                                                            >>
| [Escaped Output] render(partial => "welcome_text", {})                                                                                                    >>
| [Escaped Output] link_to("eClub", eclubs_path, :class => "side_menu_link")                                                                                >>
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                                                                     >>
| [Escaped Output] linkage_for_mental_game.html_safe                                                                                                        >>
| [Escaped Output] linkage_for_challenges.html_safe                                                                                                         >>
| [Escaped Output] linkage_if_setups_not_complete.html_safe                                                                                                 >>
| [Escaped Output] link_to("Distance Calculator", club_distance_calculator_path, :class => "side_menu_link")                                                >>
| [Escaped Output] link_to("Analysis", report_path, :class => "side_menu_link")                                                                             >>
| [Escaped Output] link_to("Overall Progress", report_overall_path, :class => "side_menu_link")                                                             >>
| [Escaped Output] link_to("H'cap Certificate", print_handicaps_path, :class => "side_menu_link")                                                           >>
| [Escaped Output] link_to("Help", homeHelp_path, :class => "side_menu_link")                                                                               >>
| [Escaped Output] early_bird_js                                                                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/myhome_ios

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph) }) |
| [Escaped Output] render(partial => "shared/feed", {})                                       |
| [Escaped Output] link_to("Sign Out", signout_path)                                          |
+---------------------------------------------------------------------------------------------+

pages/pricing

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] Offer.new("annually").price                                                                                                              >>
| [Escaped Output] Offer.new("annually").price                                                                                                              >>
| [Escaped Output] Offer.new("monthly").price                                                                                                               >>
| [Escaped Output] guest_warning_text                                                                                                                       >>
| [Escaped Output] link_to("here", faq_pro_users_path(:anchor => "cost"))                                                                                   >>
| [Escaped Output] link_to("Sign Up Now", signup_path)                                                                                                      >>
| [Escaped Output] render(partial => "shared/pricing_table", {})                                                                                            >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/teachers", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/pricing.["PagesController#pricing"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] Offer.new("annually").price                                                                                                              >>
| [Escaped Output] Offer.new("annually").price                                                                                                              >>
| [Escaped Output] Offer.new("monthly").price                                                                                                               >>
| [Escaped Output] guest_warning_text                                                                                                                       >>
| [Escaped Output] link_to("here", faq_pro_users_path(:anchor => "cost"))                                                                                   >>
| [Escaped Output] link_to("Sign Up Now", signup_path)                                                                                                      >>
| [Escaped Output] render(partial => "shared/pricing_table", {})                                                                                            >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/teachers", {})                                                                                        >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/snappy_golf

+---------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] image_tag("friend_golf.jpg", :id => "friend-golf", :alt => "Golf Perfection", :size => "630x355", :class => "round") |
| [Escaped Output] lnk_for_inaugural_post("here")                                                                                       |
| [Escaped Output] link_to("The Golf Mentor", root_path)                                                                                |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) })                                             |
+---------------------------------------------------------------------------------------------------------------------------------------+

pages/snappy_golf.["PagesController#snappy_golf"]

+---------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                |
+---------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] image_tag("friend_golf.jpg", :id => "friend-golf", :alt => "Golf Perfection", :size => "630x355", :class => "round") |
| [Escaped Output] lnk_for_inaugural_post("here")                                                                                       |
| [Escaped Output] link_to("The Golf Mentor", root_path)                                                                                |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => ({ :snappyGolf => "t" }) })                               |
+---------------------------------------------------------------------------------------------------------------------------------------+

pages/temp

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                   |
| [Escaped Output] link_to("Print this Page", "#", :onclick => "javascript:print()")                                                |
| [Escaped Output] react_component("Pointer")                                                                                       |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive"), signup_path) |
+-----------------------------------------------------------------------------------------------------------------------------------+

pages/temp.["PagesController#temp"]

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] stylesheet_link_tag("print", :media => :print)                                                                   |
| [Escaped Output] link_to("Print this Page", "#", :onclick => "javascript:print()")                                                |
| [Escaped Output] react_component("Pointer")                                                                                       |
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf", :class => "img-responsive"), signup_path) |
+-----------------------------------------------------------------------------------------------------------------------------------+

pages/temp_jquery

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("link", "#traditional")                                                                                                          >>
| [Escaped Output] f.input(:my_professional)                                                                                                                >>
| [Escaped Output] f.input(:provisional_handicap, :inline_label => "I do have a handicap")                                                                  >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(@profile) do; [Escaped Output] f.input(:my_professional);[Escaped Output] f.input(:provisional_handicap, :inline_label =>>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/temp_jquery.["PagesController#temp_jquery"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("link", "#traditional")                                                                                                          >>
| [Escaped Output] f.input(:my_professional)                                                                                                                >>
| [Escaped Output] f.input(:provisional_handicap, :inline_label => "I do have a handicap")                                                                  >>
| [Escaped Output] f.button(:submit)                                                                                                                        >>
| [Escaped Output] simple_form_for(User.find_by_email("support@thegolfmentor.com").profile) do; [Escaped Output] f.input(:my_professional);[Escaped Output] >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pages/test_helpers

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] link_for_device("Good Read", about_path) |
+-----------------------------------------------------------+

pages/test_helpers.["PagesController#test_helpers"]

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] link_for_device("Good Read", about_path) |
+-----------------------------------------------------------+

pages/tutorialCaseStudy

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] link_to("sign up here", signup_path)                          |
| [Escaped Output] FreePeriod                                                    |
| [Escaped Output] link_to("here", reportSample_path)                            |
| [Escaped Output] advert_display(:bottom, @advert_hide)                         |
| [Escaped Output] link_to("Sign Up", signup_path, :class => "side_menu_link")   |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")            |
| [Escaped Output] link_to("Top Tips", reviews_path, :class => "side_menu_link") |
+--------------------------------------------------------------------------------+

password_resets/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] message                                                                                                                                  >>
| [Escaped Output] f.label(:password)                                                                                                                       >>
| [Escaped Output] f.password_field(:password)                                                                                                              >>
| [Escaped Output] f.label(:password_confirmation, "Confirm Password")                                                                                      >>
| [Escaped Output] f.password_field(:password_confirmation)                                                                                                 >>
| [Escaped Output] f.submit("Update", :class => "round")                                                                                                    >>
| [Escaped Output] form_for(@user, :url => password_reset_path(params[:id])) do; if @user.errors.any? then; for message = in @user.errors.full_messages do; >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

password_resets/edit.["PasswordResetsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] message                                                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:password_confirmation, "Confirm Password")                                                                        >>
| [Escaped Output] FormBuilder.new.password_field(:password_confirmation)                                                                                   >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "round")                                                                                      >>
| [Escaped Output] form_for(@user, :url => password_reset_path(params[:id])) do; if @user.errors.any? then; for message = in @user.errors.full_messages do; >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

password_resets/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:email)                                                                                                                        >>
| [Escaped Output] email_field_tag(:email, params[:email])                                                                                                  >>
| [Escaped Output] button_tag("Reset Password", :class => "btn btn-primary", :data => spin_when_loading)                                                    >>
| [Escaped Output] form_tag(password_resets_path, :method => :post) do; [Escaped Output] label_tag(:email);[Escaped Output] email_field_tag(:email, params[:>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

password_resets/new.["PasswordResetsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:email)                                                                                                                        >>
| [Escaped Output] email_field_tag(:email, params[:email])                                                                                                  >>
| [Escaped Output] button_tag("Reset Password", :class => "btn btn-primary", :data => spin_when_loading)                                                    >>
| [Escaped Output] form_tag(password_resets_path, :method => :post) do; [Escaped Output] label_tag(:email);[Escaped Output] email_field_tag(:email, params[:>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

password_resets/sets

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] message                                                                                                                                  >>
| [Escaped Output] f.label(:password)                                                                                                                       >>
| [Escaped Output] f.password_field(:password)                                                                                                              >>
| [Escaped Output] f.label(:password_confirmation, "Confirm Password")                                                                                      >>
| [Escaped Output] f.password_field(:password_confirmation)                                                                                                 >>
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@user, :url => sets_update_password_reset_path(params[:id])) do; if @user.errors.any? then; for message = in @user.errors.full_m>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

password_resets/sets.["PasswordResetsController#sets"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] content_for(:meta) do; [ignored]; end                                                                                                    >>
| [Escaped Output] message                                                                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:password_confirmation, "Confirm Password")                                                                        >>
| [Escaped Output] FormBuilder.new.password_field(:password_confirmation)                                                                                   >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(@user, :url => sets_update_password_reset_path(params[:id])) do; if @user.errors.any? then; for message = in @user.errors.full_m>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/_form

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] f.label(:end_date, "End Date for Practice Cycle")           |
| [Escaped Output] f.date_select(:end_date, :order => ([:month, :day, :year])) |
| [Escaped Output] f.label("Major Focus")                                      |
| [Escaped Output] f.select(:major_focus, aspects_of_practice)                 |
| [Escaped Output] f.label("Secondary Focus")                                  |
| [Escaped Output] f.select(:secondary_focus, aspects_of_practice)             |
| [Escaped Output] f.label(:duration_practice, "Total Practice Time")          |
| [Escaped Output] f.select(:duration_practice, durationList)                  |
| [Escaped Output] f.label(:no_lessons, "Number of Lessons")                   |
| [Escaped Output] f.select(:no_lessons, lesson_list)                          |
| [Escaped Output] f.label(:practice_comments, "Comments on Practice")         |
| [Escaped Output] f.text_area(:practice_comments)                             |
| [Escaped Output] f.label(:no_games, "Number of Games")                       |
| [Escaped Output] f.select(:no_games, gamesList)                              |
| [Escaped Output] f.label(:game_comments, "Comments on Games")                |
| [Escaped Output] f.text_area(:game_comments)                                 |
| [Escaped Output] f.hidden_field(:user_id)                                    |
+------------------------------------------------------------------------------+

plans/_form.["Template:plans/edit"]

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] f.label(:end_date, "End Date for Practice Cycle")           |
| [Escaped Output] f.date_select(:end_date, :order => ([:month, :day, :year])) |
| [Escaped Output] f.label("Major Focus")                                      |
| [Escaped Output] f.select(:major_focus, aspects_of_practice)                 |
| [Escaped Output] f.label("Secondary Focus")                                  |
| [Escaped Output] f.select(:secondary_focus, aspects_of_practice)             |
| [Escaped Output] f.label(:duration_practice, "Total Practice Time")          |
| [Escaped Output] f.select(:duration_practice, durationList)                  |
| [Escaped Output] f.label(:no_lessons, "Number of Lessons")                   |
| [Escaped Output] f.select(:no_lessons, lesson_list)                          |
| [Escaped Output] f.label(:practice_comments, "Comments on Practice")         |
| [Escaped Output] f.text_area(:practice_comments)                             |
| [Escaped Output] f.label(:no_games, "Number of Games")                       |
| [Escaped Output] f.select(:no_games, gamesList)                              |
| [Escaped Output] f.label(:game_comments, "Comments on Games")                |
| [Escaped Output] f.text_area(:game_comments)                                 |
| [Escaped Output] f.hidden_field(:user_id)                                    |
+------------------------------------------------------------------------------+

plans/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] for_student(@student)                                                                                                                    >>
| [Escaped Output] link_to("Update", "#plan_submit")                                                                                                        >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] f.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                                            >>
| [Escaped Output] form_for(@plan) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(partial >>
| [Escaped Output] link_to("Help", planEditHelp_path(:user_id => (@user)), :id => "edit_help", :class => "side_menu_link")                                  >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/edit.["PlansController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] for_student((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))))      >>
| [Escaped Output] link_to("Update", "#plan_submit")                                                                                                        >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "form", { :f => FormBuilder.new })                                                                                     >>
| [Escaped Output] FormBuilder.new.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                              >>
| [Escaped Output] form_for(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curre>>
| [Escaped Output] link_to("Help", planEditHelp_path(:user_id => (((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_>>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/editHelp

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "help_text", {})                          |
| [Escaped Output] render(partial => "shared/user_info", { :user => (@user) }) |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")          |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")    |
+------------------------------------------------------------------------------+

plans/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] for_student(@student)                                                                                                                    >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "form", { :f => f })                                                                                                   >>
| [Escaped Output] f.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                                            >>
| [Escaped Output] form_for(@plan) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(partial >>
| [Escaped Output] link_to("Help", planNewHelp_path(:user_id => (@user)), :id => "new_help", :class => "side_menu_link")                                    >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/new.["PlansController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] for_student((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))))      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "form", { :f => FormBuilder.new })                                                                                     >>
| [Escaped Output] FormBuilder.new.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                              >>
| [Escaped Output] form_for(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curre>>
| [Escaped Output] link_to("Help", planNewHelp_path(:user_id => (((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_i>>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/new.["PlansController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] for_student((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))))      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "form", { :f => FormBuilder.new })                                                                                     >>
| [Escaped Output] FormBuilder.new.button("Update", :type => :submit, :class => "btn btn-primary", :data => spin_when_loading)                              >>
| [Escaped Output] form_for(Plan.new) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Output>>
| [Escaped Output] link_to("Help", planNewHelp_path(:user_id => (((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_i>>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/newHelp

+------------------------------------------------------------------------------+
| Output                                                                       |
+------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "help_text", {})                          |
| [Escaped Output] render(partial => "shared/user_info", { :user => (@user) }) |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")          |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")    |
+------------------------------------------------------------------------------+

plans/show

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                        |
| [Escaped Output] for_student(@student)                                                                                         |
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                           |
| [Escaped Output] form_for(@plan) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object }); end |
| [Escaped Output] render(partial => "shared/plans_text", {})                                                                    |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                              |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                      |
| [Escaped Output] link_to("Edit Plan", edit_plan_path(@plan), :class => "side_menu_link")                                       |
| [Escaped Output] link_to("Make New Plan", planNew_path(:user_id => @user.id), :class => "side_menu_link")                      |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                            |
+--------------------------------------------------------------------------------------------------------------------------------+

plans/show.["PlansController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] for_student((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))))      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] form_for(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curre>>
| [Escaped Output] render(partial => "shared/plans_text", {})                                                                                               >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Edit Plan", edit_plan_path(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:>>
| [Escaped Output] link_to("Make New Plan", planNew_path(:user_id => ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_>>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

plans/show.["PlansController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] for_student((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))))      >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] form_for(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curre>>
| [Escaped Output] render(partial => "shared/plans_text", {})                                                                                               >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Edit Plan", edit_plan_path(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:>>
| [Escaped Output] link_to("Make New Plan", planNew_path(:user_id => ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_>>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_user_mailer/send_coupon

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] @name                                                                    |
| [Escaped Output] @pro_user.name                                                           |
| [Escaped Output] free_period_text                                                         |
| [Escaped Output] free_period_text                                                         |
| [Escaped Output] @code                                                                    |
| [Escaped Output] link_to("here", new_from_coupon_students_url(:authorisation => (@code))) |
| [Escaped Output] sponsor_name                                                             |
+-------------------------------------------------------------------------------------------+

pro_user_mailer/sets_password

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "profile_mailer/fancy_top", {})                                 |
| [Escaped Output] @pro_user.first_name                                                              |
| [Escaped Output] link_to("clicking here", sets_password_reset_url(@pro_user.password_reset_token)) |
| [Escaped Output] sets_password_reset_url(@pro_user.password_reset_token)                           |
| [Escaped Output] render(partial => "profile_mailer/fancy_bottom", {})                              |
+----------------------------------------------------------------------------------------------------+

pro_users/_contacts

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] contact.name                                                                                                                             >>
| [Escaped Output] contact.club                                                                                                                             >>
| [Escaped Output] (time_ago_in_words(contact.updated_at) + " ago")                                                                                         >>
| [Escaped Output] render(partial => "contacts/status_form", { :contact => contact })                                                                       >>
| [Escaped Output] link_to("View", contact_path(contact), :class => "btn btn-primary btn-xs", :id => "view_contact")                                        >>
| [Escaped Output] email_link(contact.email)                                                                                                                >>
| [Escaped Output] link_to("Delete", contact, :method => :delete, :data => ({ :confirm => ("Delete #{contact.name}?") }), :class => "btn btn-primary btn-xs">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/_contacts.["ProUsersController#dashboard", "Template:pro_users/dashboard"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] contact.name                                                                                                                             >>
| [Escaped Output] contact.club                                                                                                                             >>
| [Escaped Output] (time_ago_in_words(contact.updated_at) + " ago")                                                                                         >>
| [Escaped Output] render(partial => "contacts/status_form", { :contact => contact })                                                                       >>
| [Escaped Output] link_to("View", contact_path(contact), :class => "btn btn-primary btn-xs", :id => "view_contact")                                        >>
| [Escaped Output] email_link(contact.email)                                                                                                                >>
| [Escaped Output] link_to("Delete", contact, :method => :delete, :data => ({ :confirm => ("Delete #{contact.name}?") }), :class => "btn btn-primary btn-xs">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/_contacts.["Template:pro_users/dashboard"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] contact.name                                                                                                                             >>
| [Escaped Output] contact.club                                                                                                                             >>
| [Escaped Output] (time_ago_in_words(contact.updated_at) + " ago")                                                                                         >>
| [Escaped Output] render(partial => "contacts/status_form", { :contact => contact })                                                                       >>
| [Escaped Output] link_to("View", contact_path(contact), :class => "btn btn-primary btn-xs", :id => "view_contact")                                        >>
| [Escaped Output] email_link(contact.email)                                                                                                                >>
| [Escaped Output] link_to("Delete", contact, :method => :delete, :data => ({ :confirm => ("Delete #{contact.name}?") }), :class => "btn btn-primary btn-xs">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/_faq_signed_in

+--------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                             |
+--------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How do I use The Golf Mentor to recruit new clients?", "#new_clients")                   |
| [Escaped Output] link_to("What happens if a student does not want to use their Golf Mentor account?", "#no_usage") |
| [Escaped Output] link_to("What happens if a student does not want to receive emails?", "#no_emails")               |
| [Escaped Output] link_to("What happens if a student does not pay for platinum membership?", "#no_platinum")        |
| [Escaped Output] platinum_pricing                                                                                  |
+--------------------------------------------------------------------------------------------------------------------+

pro_users/_faq_signed_in.["Template:pro_users/_help_welcome"]

+--------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                             |
+--------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How do I use The Golf Mentor to recruit new clients?", "#new_clients")                   |
| [Escaped Output] link_to("What happens if a student does not want to use their Golf Mentor account?", "#no_usage") |
| [Escaped Output] link_to("What happens if a student does not want to receive emails?", "#no_emails")               |
| [Escaped Output] link_to("What happens if a student does not pay for platinum membership?", "#no_platinum")        |
| [Escaped Output] platinum_pricing                                                                                  |
+--------------------------------------------------------------------------------------------------------------------+

pro_users/_fields

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Conditions", legal_path, :target => "_blank")                                                   |
| [Escaped Output] content_for(:the_terms) do; [Escaped Output] link_to("Conditions", legal_path, :target => "_blank"); end |
| [Escaped Output] f.label(:email, "Email")                                                                                 |
| [Escaped Output] f.text_field(:email)                                                                                     |
| [Escaped Output] f.label(:password)                                                                                       |
| [Escaped Output] f.password_field(:password)                                                                              |
| [Escaped Output] f.check_box(:terms)                                                                                      |
| [Escaped Output] f.label(:terms, content_for(:the_terms))                                                                 |
| [Escaped Output] f.check_box(:qualification)                                                                              |
| [Escaped Output] f.label(:qualification, "I am a qualified golf teacher")                                                 |
| [Escaped Output] f.hidden_field(:referral)                                                                                |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                   |
| [Escaped Output] f.text_field(:authorisation)                                                                             |
+---------------------------------------------------------------------------------------------------------------------------+

pro_users/_fields.["ProUsersController#create", "Template:pro_users/new"]

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Conditions", legal_path, :target => "_blank")                                                   |
| [Escaped Output] content_for(:the_terms) do; [Escaped Output] link_to("Conditions", legal_path, :target => "_blank"); end |
| [Escaped Output] f.label(:email, "Email")                                                                                 |
| [Escaped Output] f.text_field(:email)                                                                                     |
| [Escaped Output] f.label(:password)                                                                                       |
| [Escaped Output] f.password_field(:password)                                                                              |
| [Escaped Output] f.check_box(:terms)                                                                                      |
| [Escaped Output] f.label(:terms, content_for(:the_terms))                                                                 |
| [Escaped Output] f.check_box(:qualification)                                                                              |
| [Escaped Output] f.label(:qualification, "I am a qualified golf teacher")                                                 |
| [Escaped Output] f.hidden_field(:referral)                                                                                |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                   |
| [Escaped Output] f.text_field(:authorisation)                                                                             |
+---------------------------------------------------------------------------------------------------------------------------+

pro_users/_fields.["ProUsersController#new", "Template:pro_users/new"]

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Conditions", legal_path, :target => "_blank")                                                   |
| [Escaped Output] content_for(:the_terms) do; [Escaped Output] link_to("Conditions", legal_path, :target => "_blank"); end |
| [Escaped Output] f.label(:email, "Email")                                                                                 |
| [Escaped Output] f.text_field(:email)                                                                                     |
| [Escaped Output] f.label(:password)                                                                                       |
| [Escaped Output] f.password_field(:password)                                                                              |
| [Escaped Output] f.check_box(:terms)                                                                                      |
| [Escaped Output] f.label(:terms, content_for(:the_terms))                                                                 |
| [Escaped Output] f.check_box(:qualification)                                                                              |
| [Escaped Output] f.label(:qualification, "I am a qualified golf teacher")                                                 |
| [Escaped Output] f.hidden_field(:referral)                                                                                |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                   |
| [Escaped Output] f.text_field(:authorisation)                                                                             |
+---------------------------------------------------------------------------------------------------------------------------+

pro_users/_fields.["Template:pro_users/_pro_user_signup_form"]

+---------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                    |
+---------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Conditions", legal_path, :target => "_blank")                                                   |
| [Escaped Output] content_for(:the_terms) do; [Escaped Output] link_to("Conditions", legal_path, :target => "_blank"); end |
| [Escaped Output] f.label(:email, "Email")                                                                                 |
| [Escaped Output] f.text_field(:email)                                                                                     |
| [Escaped Output] f.label(:password)                                                                                       |
| [Escaped Output] f.password_field(:password)                                                                              |
| [Escaped Output] f.check_box(:terms)                                                                                      |
| [Escaped Output] f.label(:terms, content_for(:the_terms))                                                                 |
| [Escaped Output] f.check_box(:qualification)                                                                              |
| [Escaped Output] f.label(:qualification, "I am a qualified golf teacher")                                                 |
| [Escaped Output] f.hidden_field(:referral)                                                                                |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                   |
| [Escaped Output] f.text_field(:authorisation)                                                                             |
+---------------------------------------------------------------------------------------------------------------------------+

pro_users/_help_welcome

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("new drill", new_drill_path)                                       |
| [Escaped Output] link_to("New Student", new_student_path)                                   |
| [Escaped Output] link_to("Invite Student", send_from_pro_coupons_path)                      |
| [Escaped Output] link_to("Edit Your Details", professional_path(current_user.professional)) |
| [Escaped Output] render(partial => "faq_signed_in", {})                                     |
+---------------------------------------------------------------------------------------------+

pro_users/_help_welcome.["Template:pro_users/help"]

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("new drill", new_drill_path)                                       |
| [Escaped Output] link_to("New Student", new_student_path)                                   |
| [Escaped Output] link_to("Invite Student", send_from_pro_coupons_path)                      |
| [Escaped Output] link_to("Edit Your Details", professional_path(current_user.professional)) |
| [Escaped Output] render(partial => "faq_signed_in", {})                                     |
+---------------------------------------------------------------------------------------------+

pro_users/_pricing

+---------------------------------------+
| Output                                |
+---------------------------------------+
| [Escaped Output] ProUser::Free_period |
+---------------------------------------+

pro_users/_pricing.["Template:centrals/pricing"]

+---------------------------------------+
| Output                                |
+---------------------------------------+
| [Escaped Output] ProUser::Free_period |
+---------------------------------------+

pro_users/_pro_user_signup_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.submit("Join Now", :id => "sign-up")                                                                                                   >>
| [Escaped Output] form_for(@pro_user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(part>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/_students

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] student.name                                                               |
| [Escaped Output] next_lesson_info(student)                                                  |
| [Escaped Output] student.current_handicap.round(1)                                          |
| [Escaped Output] student.goals.first.goal_score                                             |
| [Escaped Output] link_to("View", student_path(student), :class => "btn btn-primary btn-xs") |
| [Escaped Output] email_link(student.email)                                                  |
+---------------------------------------------------------------------------------------------+

pro_users/_students.["ProUsersController#dashboard", "Template:pro_users/dashboard"]

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] student.name                                                               |
| [Escaped Output] next_lesson_info(student)                                                  |
| [Escaped Output] student.current_handicap.round(1)                                          |
| [Escaped Output] student.goals.first.goal_score                                             |
| [Escaped Output] link_to("View", student_path(student), :class => "btn btn-primary btn-xs") |
| [Escaped Output] email_link(student.email)                                                  |
+---------------------------------------------------------------------------------------------+

pro_users/_students.["Template:pro_users/dashboard"]

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] student.name                                                               |
| [Escaped Output] next_lesson_info(student)                                                  |
| [Escaped Output] student.current_handicap.round(1)                                          |
| [Escaped Output] student.goals.first.goal_score                                             |
| [Escaped Output] link_to("View", student_path(student), :class => "btn btn-primary btn-xs") |
| [Escaped Output] email_link(student.email)                                                  |
+---------------------------------------------------------------------------------------------+

pro_users/dashboard

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("here", help_pro_users_path)                                                                                  |
| [Escaped Output] render(partial => "students", {})                                                                                     |
| [Escaped Output] render(partial => "contacts", {})                                                                                     |
| [Escaped Output] link_to("New Student", new_student_path, :class => "btn btn-info advanced_link")                                      |
| [Escaped Output] link_to("Invite Student", send_from_pro_coupons_path, :class => "btn btn-info advanced_link")                         |
| [Escaped Output] link_to("Edit My Details", edit_professional_path(current_user.professional), :class => "btn btn-info advanced_link") |
| [Escaped Output] link_to("New Contact", new_contact_path, :class => "side_menu_link")                                                  |
| [Escaped Output] link_to("My Drills", drills_path, :class => "side_menu_link")                                                         |
| [Escaped Output] link_to("My Details", professional_path(current_user.professional), :class => "side_menu_link")                       |
| [Escaped Output] link_to("Help - Dashboard", help_pro_users_path, :class => "side_menu_link")                                          |
+----------------------------------------------------------------------------------------------------------------------------------------+

pro_users/dashboard.["ProUsersController#dashboard"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("here", help_pro_users_path)                                                                                  |
| [Escaped Output] render(partial => "students", {})                                                                                     |
| [Escaped Output] render(partial => "contacts", {})                                                                                     |
| [Escaped Output] link_to("New Student", new_student_path, :class => "btn btn-info advanced_link")                                      |
| [Escaped Output] link_to("Invite Student", send_from_pro_coupons_path, :class => "btn btn-info advanced_link")                         |
| [Escaped Output] link_to("Edit My Details", edit_professional_path(current_user.professional), :class => "btn btn-info advanced_link") |
| [Escaped Output] link_to("New Contact", new_contact_path, :class => "side_menu_link")                                                  |
| [Escaped Output] link_to("My Drills", drills_path, :class => "side_menu_link")                                                         |
| [Escaped Output] link_to("My Details", professional_path(current_user.professional), :class => "side_menu_link")                       |
| [Escaped Output] link_to("Help - Dashboard", help_pro_users_path, :class => "side_menu_link")                                          |
+----------------------------------------------------------------------------------------------------------------------------------------+

pro_users/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "edit_fields", { :f => f })                                                                                            >>
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@pro_user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(part>>
| [Escaped Output] gravatar_for(@pro_user)                                                                                                                  >>
| [Escaped Output] link_to("here", legal_path)                                                                                                              >>
| [Escaped Output] link_to("here", legal_path(:anchor => "teaching_professionals"))                                                                         >>
| [Escaped Output] render(partial => "commission_declaration", {})                                                                                          >>
| [Escaped Output] link_to("Edit My Details", edit_professional_path(current_user.professional), :class => "side_menu_link")                                >>
| [Escaped Output] link_to("Billing", subscriptionShow_path, :class => "side_menu_link")                                                                    >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/edit.["ProUsersController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "edit_fields", { :f => FormBuilder.new })                                                                              >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(current_user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Ou>>
| [Escaped Output] gravatar_for(current_user)                                                                                                               >>
| [Escaped Output] link_to("here", legal_path)                                                                                                              >>
| [Escaped Output] link_to("here", legal_path(:anchor => "teaching_professionals"))                                                                         >>
| [Escaped Output] render(partial => "commission_declaration", {})                                                                                          >>
| [Escaped Output] link_to("Edit My Details", edit_professional_path(current_user.professional), :class => "side_menu_link")                                >>
| [Escaped Output] link_to("Billing", subscriptionShow_path, :class => "side_menu_link")                                                                    >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/faq

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("How does it work for a teacher?", "#teacher")                                                                                   >>
| [Escaped Output] link_to("How much extra time will this take?", "#extra_time")                                                                            >>
| [Escaped Output] link_to("How much does it cost?", "#cost")                                                                                               >>
| [Escaped Output] link_to("Why do students improve quicker?", "#quicker")                                                                                  >>
| [Escaped Output] link_to("How does it work for students?", "#student")                                                                                    >>
| [Escaped Output] link_to("Can I try out the student's experience?", "#experience")                                                                        >>
| [Escaped Output] Account::Pro_Free_Period                                                                                                                 >>
| [Escaped Output] txt_if_gt_free_period                                                                                                                    >>
| [Escaped Output] render(partial => "pricing", {})                                                                                                         >>
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                                                           >>
| [Escaped Output] link_to("here", users_path, :method => "post")                                                                                           >>
| [Escaped Output] link_to("Founder's Message", founders_message_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                   >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                                          >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/faq.["ProUsersController#faq"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("How does it work for a teacher?", "#teacher")                                                                                   >>
| [Escaped Output] link_to("How much extra time will this take?", "#extra_time")                                                                            >>
| [Escaped Output] link_to("How much does it cost?", "#cost")                                                                                               >>
| [Escaped Output] link_to("Why do students improve quicker?", "#quicker")                                                                                  >>
| [Escaped Output] link_to("How does it work for students?", "#student")                                                                                    >>
| [Escaped Output] link_to("Can I try out the student's experience?", "#experience")                                                                        >>
| [Escaped Output] Account::Pro_Free_Period                                                                                                                 >>
| [Escaped Output] txt_if_gt_free_period                                                                                                                    >>
| [Escaped Output] render(partial => "pricing", {})                                                                                                         >>
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                                                           >>
| [Escaped Output] link_to("here", users_path, :method => "post")                                                                                           >>
| [Escaped Output] link_to("Founder's Message", founders_message_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                   >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                                          >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/founders_message

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] link_to("Visit our FAQ", faq_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                                    >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/founders_message.["ProUsersController#founders_message"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] link_to("Visit our FAQ", faq_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                                    >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/help

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "help_welcome", {})                                                                  |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                       |
| [Escaped Output] link_to("Show Details", professional_path(current_user.professional), :class => "side_menu_link")      |
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link") |
+-------------------------------------------------------------------------------------------------------------------------+

pro_users/help.["ProUsersController#help"]

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "help_welcome", {})                                                                  |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                       |
| [Escaped Output] link_to("Show Details", professional_path(current_user.professional), :class => "side_menu_link")      |
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link") |
+-------------------------------------------------------------------------------------------------------------------------+

pro_users/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("here", signup_path)                                                                                                             >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] f.submit("Join Now", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_for(@pro_user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(part>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/new.["ProUsersController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("here", signup_path)                                                                                                             >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "fields", { :f => FormBuilder.new })                                                                                   >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :class => "btn btn-primary")                                                                          >>
| [Escaped Output] form_for(ProUser.new(params[:pro_user].merge(:name => "TBD"))) do; [Escaped Output] render(partial => "shared/error_messages", { :object >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/new.["ProUsersController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to("here", signup_path)                                                                                                             >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "fields", { :f => FormBuilder.new })                                                                                   >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :class => "btn btn-primary")                                                                          >>
| [Escaped Output] form_for(ProUser.new) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Out>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/teacher

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to(image_tag("circle_of_teaching.jpg", :alt => "Circle of Teaching\t", :id => "circle_of_teaching"), signup_path)                   >>
| [Escaped Output] link_to("Visit our FAQ", faq_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                                    >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                                          >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/teacher.["ProUsersController#teacher"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] link_to(image_tag("circle_of_teaching.jpg", :alt => "Circle of Teaching\t", :id => "circle_of_teaching"), signup_path)                   >>
| [Escaped Output] link_to("Visit our FAQ", faq_pro_users_path, :class => "btn btn-cta btn-cta-primary")                                                    >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary")                                                          >>
| [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_join_now")                                   >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] link_to("Join Now", new_pro_user_path, :class => "btn btn-cta btn-cta-primary", :id => "pro_j>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

pro_users/temp

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:email)                                                                     |
| [Escaped Output] f.input(:password)                                                                  |
| [Escaped Output] f.input(:terms, :as => :boolean, :label => content_for(:the_terms))                 |
| [Escaped Output] f.input(:qualification, :as => :boolean, :label => "I am a qualified golf teacher") |
| [Escaped Output] f.hidden_field(:referral)                                                           |
| [Escaped Output] f.input(:authorisation, :label => "Coupon Code")                                    |
+------------------------------------------------------------------------------------------------------+

professionals/edit

+-------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                        |
+-------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => f })                                                   |
| [Escaped Output] form_for(@professional) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f }); end |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                                |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                             |
| [Escaped Output] link_to("Help", help_professionals_path, :id => "help_pro", :class => "side_menu_link")                      |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                           |
+-------------------------------------------------------------------------------------------------------------------------------+

professionals/edit.["ProfessionalsController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                                 >>
| [Escaped Output] form_for(Professional.find(params[:id])) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new }); e>>
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                                                            >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help", help_professionals_path, :id => "help_pro", :class => "side_menu_link")                                                  >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

professionals/help

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                          |
| [Escaped Output] link_to("Show Details", professional_path(current_user.professional), :class => "side_menu_link")      |
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link") |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                       |
+-------------------------------------------------------------------------------------------------------------------------+

professionals/help.["ProfessionalsController#help"]

+-------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                  |
+-------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                          |
| [Escaped Output] link_to("Show Details", professional_path(current_user.professional), :class => "side_menu_link")      |
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link") |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                       |
+-------------------------------------------------------------------------------------------------------------------------+

professionals/new

+-------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                        |
+-------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => f })                                                   |
| [Escaped Output] form_for(@professional) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                             |
| [Escaped Output] link_to("Help", help_professionals_path, :class => "side_menu_link")                                         |
+-------------------------------------------------------------------------------------------------------------------------------+

professionals/new.["ProfessionalsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                                 >>
| [Escaped Output] form_for(Professional.new(params[:professional])) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.>>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Help", help_professionals_path, :class => "side_menu_link")                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

professionals/new.["ProfessionalsController#new"]

+------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new })                                                      |
| [Escaped Output] form_for(Professional.new) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new }); end |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                              |
| [Escaped Output] link_to("Help", help_professionals_path, :class => "side_menu_link")                                                          |
+------------------------------------------------------------------------------------------------------------------------------------------------+

professionals/show

+--------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                           |
+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                                          |
| [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true })                                                   |
| [Escaped Output] form_for(@professional) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true }); end |
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                                                   |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                |
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link")                          |
| [Escaped Output] link_to("Help", help_professionals_path, :class => "side_menu_link")                                                            |
+--------------------------------------------------------------------------------------------------------------------------------------------------+

professionals/show.["ProfessionalsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] notice                                                                                                                                   >>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new, :disabled => true })                                              >>
| [Escaped Output] form_for(Professional.find(params[:id])) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new, :dis>>
| [Escaped Output] render(partial => "shared/pro_user_info", {})                                                                                            >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Edit Details", edit_professional_path(current_user.professional), :class => "side_menu_link")                                   >>
| [Escaped Output] link_to("Help", help_professionals_path, :class => "side_menu_link")                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

professionals/show_for_student

+--------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                           |
+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true })                                                   |
| [Escaped Output] form_for(@professional) do; [Escaped Output] render(partial => "shared/professional_form", { :f => f, :disabled => true }); end |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                              |
+--------------------------------------------------------------------------------------------------------------------------------------------------+

professionals/show_for_student.["ProfessionalsController#show_for_student"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new, :disabled => true })                                              >>
| [Escaped Output] form_for(current_user.pro_user.professional) do; [Escaped Output] render(partial => "shared/professional_form", { :f => FormBuilder.new, >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profile_mailer/_email_bottom

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("The Golf Mentor", root_url, :target => "_blank")                |
| [Escaped Output] link_to("here", email_preferences_profiles_url, :target => "_blank")     |
| [Escaped Output] link_to("unsubscribe all", optOutAll_url(@user.profile.optOutAll_token)) |
+-------------------------------------------------------------------------------------------+

profile_mailer/_email_bottom.["Template:pro_user_mailer/sets_password", "Template:profile_mailer/_fancy_bottom"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("The Golf Mentor", root_url, :target => "_blank")                |
| [Escaped Output] link_to("here", email_preferences_profiles_url, :target => "_blank")     |
| [Escaped Output] link_to("unsubscribe all", optOutAll_url(@user.profile.optOutAll_token)) |
+-------------------------------------------------------------------------------------------+

profile_mailer/_email_upgrade_now_advert

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] h2_mailer("Upgrade Now").html_safe                                                    |
| [Escaped Output] paypal_payment_account_url(:id => "gold", :email => @user.email, :target => "_blank") |
| [Escaped Output] root_url                                                                              |
+--------------------------------------------------------------------------------------------------------+

profile_mailer/_email_upgrade_now_advert.["Template:profile_mailer/_weekly_report"]

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] h2_mailer("Upgrade Now").html_safe                                                    |
| [Escaped Output] paypal_payment_account_url(:id => "gold", :email => @user.email, :target => "_blank") |
| [Escaped Output] root_url                                                                              |
+--------------------------------------------------------------------------------------------------------+

profile_mailer/_fancy_bottom

+-----------------------------------------------------------------------+
| Output                                                                |
+-----------------------------------------------------------------------+
| [Escaped Output] root_url                                             |
| [Escaped Output] render(partial => "profile_mailer/email_bottom", {}) |
| [Escaped Output] Time.now.year                                        |
+-----------------------------------------------------------------------+

profile_mailer/_fancy_bottom.["Template:pro_user_mailer/sets_password"]

+-----------------------------------------------------------------------+
| Output                                                                |
+-----------------------------------------------------------------------+
| [Escaped Output] root_url                                             |
| [Escaped Output] render(partial => "profile_mailer/email_bottom", {}) |
| [Escaped Output] Time.now.year                                        |
+-----------------------------------------------------------------------+

profile_mailer/_fancy_top

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] root_url                      |
| [Escaped Output] addpost_url                   |
| [Escaped Output] post_practice_url             |
| [Escaped Output] urls_for_challenges.html_safe |
| [Escaped Output] contact_us_url                |
| [Escaped Output] root_url                      |
| [Escaped Output] message.subject               |
+------------------------------------------------+

profile_mailer/_fancy_top.["Template:pro_user_mailer/sets_password"]

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] root_url                      |
| [Escaped Output] addpost_url                   |
| [Escaped Output] post_practice_url             |
| [Escaped Output] urls_for_challenges.html_safe |
| [Escaped Output] contact_us_url                |
| [Escaped Output] root_url                      |
| [Escaped Output] message.subject               |
+------------------------------------------------+

profile_mailer/_weekly_report

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] h2_mailer("Progress in the Past Week").html_safe  |
| [Escaped Output] text_for_posts_in_past_week.html_safe             |
| [Escaped Output] addpost_url                                       |
| [Escaped Output] @plan.major_focus                                 |
| [Escaped Output] @plan.secondary_focus                             |
| [Escaped Output] @results_weekly[:best_mode]                       |
| [Escaped Output] @results_weekly[:weak_mode]                       |
| [Escaped Output] h2_mailer("Overall Progress").html_safe           |
| [Escaped Output] render(partial => "shared/report_overall", {})    |
| [Escaped Output] render(partial => "email_upgrade_now_advert", {}) |
+--------------------------------------------------------------------+

profile_mailer/_weekly_report.["Template:profile_mailer/weekly_report"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] h2_mailer("Progress in the Past Week").html_safe  |
| [Escaped Output] text_for_posts_in_past_week.html_safe             |
| [Escaped Output] addpost_url                                       |
| [Escaped Output] @plan.major_focus                                 |
| [Escaped Output] @plan.secondary_focus                             |
| [Escaped Output] @results_weekly[:best_mode]                       |
| [Escaped Output] @results_weekly[:weak_mode]                       |
| [Escaped Output] h2_mailer("Overall Progress").html_safe           |
| [Escaped Output] render(partial => "shared/report_overall", {})    |
| [Escaped Output] render(partial => "email_upgrade_now_advert", {}) |
+--------------------------------------------------------------------+

profile_mailer/broadcast_message

+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                                                                                        |
| [Escaped Output] @user.profile.filtered_first_name                                                                                                         |
| [Escaped Output] @body                                                                                                                                     |
| [Escaped Output] content_tag(:a, :href => "https://appsto.re/au/oDCNcb.i", :style => ("color: #{Mentor_green}; text-decoration: none")) do; [ignored]; end |
| [Escaped Output] render(partial => "fancy_bottom", {})                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+

profile_mailer/cancel_processing

+-----------------------------+
| Output                      |
+-----------------------------+
| [Escaped Output] @reference |
+-----------------------------+

profile_mailer/get_committment

+---------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                            |
+---------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                                                                               |
| [Escaped Output] @user.profile.filtered_first_name                                                                                                |
| [Escaped Output] Mentor_green                                                                                                                     |
| [Escaped Output] Offer.new("early_bird").price                                                                                                    |
| [Escaped Output] Offer.new("early_bird").monthly_discount                                                                                         |
| [Escaped Output] link_to("premium membership today", paypal_payment_account_url(:id => "early_bird", :email => @user.email), :target => "_blank") |
| [Escaped Output] Mentor_green                                                                                                                     |
| [Escaped Output] (Account::Get_commitment_early * 24)                                                                                             |
| [Escaped Output] Mentor_green                                                                                                                     |
| [Escaped Output] link_to("NOW!", paypal_payment_account_url(:id => "early_bird", :email => @user.email), :target => "_blank")                     |
| [Escaped Output] render(partial => "fancy_bottom", {})                                                                                            |
+---------------------------------------------------------------------------------------------------------------------------------------------------+

profile_mailer/message_from_pro

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})    |
| [Escaped Output] @user.name                            |
| [Escaped Output] @user.pro_user.name                   |
| [Escaped Output] simple_format(@message_text)          |
| [Escaped Output] render(partial => "email_bottom", {}) |
| [Escaped Output] render(partial => "fancy_bottom", {}) |
+--------------------------------------------------------+

profile_mailer/questions

+---------------------------------------------------------------------------------------------+
| Output                                                                                      |
+---------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                         |
| [Escaped Output] @user.profile.filtered_first_name                                          |
| [Escaped Output] Account::Questionaire_free_days                                            |
| [Escaped Output] link_to("here", edit_questionaire_url(@questionaire), :target => "_blank") |
| [Escaped Output] Account::Questionaire_free_days                                            |
| [Escaped Output] render(partial => "fancy_bottom", {})                                      |
+---------------------------------------------------------------------------------------------+

profile_mailer/refund_processing

+-----------------------------+
| Output                      |
+-----------------------------+
| [Escaped Output] @reference |
+-----------------------------+

profile_mailer/temp

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})    |
| [Escaped Output] render(partial => "fancy_bottom", {}) |
+--------------------------------------------------------+

profile_mailer/weekly_report

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})          |
| [Escaped Output] @user.profile.filtered_first_name           |
| [Escaped Output] warn_if_trial_ending.html_safe              |
| [Escaped Output] insert_email_promotion_if_needed(@tip_text) |
| [Escaped Output] render(partial => "weekly_report", {})      |
| [Escaped Output] render(partial => "fancy_bottom", {})       |
+--------------------------------------------------------------+

profile_mailer/welcome_message

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                                                                    |
| [Escaped Output] @user.profile.filtered_first_name                                                                                     |
| [Escaped Output] link_to("Golf Mentor", root_url, :target => "_blank")                                                                 |
| [Escaped Output] Mentor_green                                                                                                          |
| [Escaped Output] link_to("here", email_preferences_profiles_url(:token => @user.profile.email_preferences_token), :target => "_blank") |
| [Escaped Output] secret_to_golf_ebook_url(:email => @user.email)                                                                       |
| [Escaped Output] root_url                                                                                                              |
| [Escaped Output] Mentor_green                                                                                                          |
| [Escaped Output] link_to("here", secret_to_golf_ebook_url(:email => @user.email), :target => "_blank")                                 |
| [Escaped Output] link_to("The Golf Mentor", root_url, :target => "_blank")                                                             |
| [Escaped Output] text_if_provisional_handicap.html_safe                                                                                |
| [Escaped Output] render(partial => "fancy_bottom", {})                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+

profiles/_form

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] f.label(:handicap_type)                         |
| [Escaped Output] f.select(:handicap_type, handicap_country_list) |
+------------------------------------------------------------------+

profiles/_form.["Template:profiles/new"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] f.label(:handicap_type)                         |
| [Escaped Output] f.select(:handicap_type, handicap_country_list) |
+------------------------------------------------------------------+

profiles/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.input(:handicap_type, :collection => handicap_country_list)                                                                            >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] simple_form_for(@profile, :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] render(partial => "shared/error_>>
| [Escaped Output] current_user.profile.exact_handicap                                                                                                      >>
| [Escaped Output] current_user.microposts.calculate_conventional_handicap.round                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/edit.["ProfilesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.input(:handicap_type, :collection => handicap_country_list)                                                                            >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] simple_form_for(current_user.profile, :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] render(partial => "s>>
| [Escaped Output] current_user.profile.exact_handicap                                                                                                      >>
| [Escaped Output] current_user.microposts.calculate_conventional_handicap.round                                                                            >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/email_preferences

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.check_box(:weekly_update)                                                                                                              >>
| [Escaped Output] f.label(:weekly_update)                                                                                                                  >>
| [Escaped Output] f.check_box(:monthly_report)                                                                                                             >>
| [Escaped Output] f.label(:monthly_report)                                                                                                                 >>
| [Escaped Output] f.check_box(:promotional_emails)                                                                                                         >>
| [Escaped Output] f.label(:promotional_emails)                                                                                                             >>
| [Escaped Output] render(partial => "shared/submit_button", { :locals => ({ :f => f }) })                                                                  >>
| [Escaped Output] form_for(@profile, :url => email_preferences_update_profile_path(@profile)) do; [Escaped Output] f.check_box(:weekly_update);[Escaped Out>>
| [Escaped Output] f.input(:optOutAll, :label => "Unsubscribe me from all publications")                                                                    >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Opt Out All" }) })                                   >>
| [Escaped Output] simple_form_for(@profile, :url => email_preferences_update_profile_path(@profile)) do; [Escaped Output] f.input(:optOutAll, :label => "Un>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/email_preferences.["ProfilesController#email_preferences"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FormBuilder.new.check_box(:weekly_update)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:weekly_update)                                                                                                    >>
| [Escaped Output] FormBuilder.new.check_box(:monthly_report)                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:monthly_report)                                                                                                   >>
| [Escaped Output] FormBuilder.new.check_box(:promotional_emails)                                                                                           >>
| [Escaped Output] FormBuilder.new.label(:promotional_emails)                                                                                               >>
| [Escaped Output] render(partial => "shared/submit_button", { :locals => ({ :f => FormBuilder.new }) })                                                    >>
| [Escaped Output] form_for(current_user.profile, :url => email_preferences_update_profile_path(current_user.profile)) do; [Escaped Output] FormBuilder.new.>>
| [Escaped Output] FormBuilder.new.input(:optOutAll, :label => "Unsubscribe me from all publications")                                                      >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => FormBuilder.new, :text => "Opt Out All" }) })                     >>
| [Escaped Output] simple_form_for(current_user.profile, :url => email_preferences_update_profile_path(current_user.profile)) do; [Escaped Output] FormBuild>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/email_preferences.["ProfilesController#email_preferences_update"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] FormBuilder.new.check_box(:weekly_update)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:weekly_update)                                                                                                    >>
| [Escaped Output] FormBuilder.new.check_box(:monthly_report)                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:monthly_report)                                                                                                   >>
| [Escaped Output] FormBuilder.new.check_box(:promotional_emails)                                                                                           >>
| [Escaped Output] FormBuilder.new.label(:promotional_emails)                                                                                               >>
| [Escaped Output] render(partial => "shared/submit_button", { :locals => ({ :f => FormBuilder.new }) })                                                    >>
| [Escaped Output] form_for((Profile.find_by_id(params[:id]) or Profile.find_by_id(params[:id]).user.profile), :url => email_preferences_update_profile_path>>
| [Escaped Output] FormBuilder.new.input(:optOutAll, :label => "Unsubscribe me from all publications")                                                      >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => FormBuilder.new, :text => "Opt Out All" }) })                     >>
| [Escaped Output] simple_form_for((Profile.find_by_id(params[:id]) or Profile.find_by_id(params[:id]).user.profile), :url => email_preferences_update_profi>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/index

+-----------------------------------------------------------------------------------------+
| Output                                                                                  |
+-----------------------------------------------------------------------------------------+
| [Escaped Output] User.find_by_id(p.user_id).email                                       |
| [Escaped Output] p.optOutAll                                                            |
| [Escaped Output] p.optOutWeekly                                                         |
| [Escaped Output] p.handicap_country[(0..3)]                                             |
| [Escaped Output] p.pro_id                                                               |
| [Escaped Output] p.email_preferences_token[(0..3)]                                      |
| [Escaped Output] p.start_stage                                                          |
| [Escaped Output] committed(p)                                                           |
| [Escaped Output] focused(p)                                                             |
| [Escaped Output] link_to("OptOutAll", optOutAll_by_old_admin_profile_path(p))           |
| [Escaped Output] link_to("Edit", edit_profile_path(p))                                  |
| [Escaped Output] link_to("Destroy", p, :confirm => "Are you sure?", :method => :delete) |
| [Escaped Output] link_to("New Profile", new_profile_path)                               |
+-----------------------------------------------------------------------------------------+

profiles/new

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] render(partial => "form", {})  |
| [Escaped Output] link_to("Back", profiles_path) |
+-------------------------------------------------+

profiles/optOutAll

+-------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @user.email                                                                                      |
| [Escaped Output] link_to("here", email_preferences_profiles_url(:token => @user.profile.email_preferences_token)) |
+-------------------------------------------------------------------------------------------------------------------+

profiles/optOutWeekly

+------------------------------+
| Output                       |
+------------------------------+
| [Escaped Output] @user.email |
+------------------------------+

profiles/privacy_preferences

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/privacy_fields", {})                                                                                           >>
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@profile, :url => privacy_preferences_update_profile_path(@profile)) do; [Escaped Output] render(partial => "shared/privacy_fiel>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link"); end                               >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/privacy_preferences.["ProfilesController#privacy_preferences"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/privacy_fields", {})                                                                                           >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(current_user.profile, :url => privacy_preferences_update_profile_path(current_user.profile)) do; [Escaped Output] render(partial>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link"); end                               >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

profiles/show

+----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                         |
+----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                        |
| [Escaped Output] @profile.use_practice_score                                                                   |
| [Escaped Output] @profile.use_enjoyment                                                                        |
| [Escaped Output] @profile.use_awareness                                                                        |
| [Escaped Output] @profile.exact_handicap                                                                       |
| [Escaped Output] @profile.handicap_type                                                                        |
| [Escaped Output] @profile.start_stage                                                                          |
| [Escaped Output] @profile.provisional_handicap                                                                 |
| [Escaped Output] @user.name                                                                                    |
| [Escaped Output] @user.microposts.count                                                                        |
| [Escaped Output] link_to("Edit", edit_profile_path(@profile), :class => "ordinary_button round ")              |
| [Escaped Output] link_to("Back", :back, :class => "ordinary_button round ")                                    |
| [Escaped Output] link_to("Account Settings", edit_user_path(current_user), :class => "ordinary_button round ") |
+----------------------------------------------------------------------------------------------------------------+

questionaires/after_survey

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] radio_button_tag(:satisfaction, "Extremely Satisfied")                                                                                   >>
| [Escaped Output] label_tag(:satisfaction_xs, "Extremely Satisfied")                                                                                       >>
| [Escaped Output] radio_button_tag(:satisfaction, "Satisfied")                                                                                             >>
| [Escaped Output] label_tag(:satisfaction_s, "Satisfied")                                                                                                  >>
| [Escaped Output] radio_button_tag(:satisfaction, "Dissatisfied")                                                                                          >>
| [Escaped Output] label_tag(:satisfaction_d, "Dissatisfied")                                                                                               >>
| [Escaped Output] radio_button_tag(:satisfaction, "Extremely Dissatisfied")                                                                                >>
| [Escaped Output] label_tag(:satisfaction_xd, "Extremely Dissatisfied")                                                                                    >>
| [Escaped Output] text_area_tag(:survey_comment)                                                                                                           >>
| [Escaped Output] check_box_tag(:contact_is_OK)                                                                                                            >>
| [Escaped Output] label_tag(:contact_is_OK, "You can contact me about my response")                                                                        >>
| [Escaped Output] hidden_field(:user, :email)                                                                                                              >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag("/questionaires/after_survey_create", :method => "get") do; [Escaped Output] radio_button_tag(:satisfaction, "Extremely Satisfie>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

questionaires/after_survey.["QuestionairesController#after_survey"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] radio_button_tag(:satisfaction, "Extremely Satisfied")                                                                                   >>
| [Escaped Output] label_tag(:satisfaction_xs, "Extremely Satisfied")                                                                                       >>
| [Escaped Output] radio_button_tag(:satisfaction, "Satisfied")                                                                                             >>
| [Escaped Output] label_tag(:satisfaction_s, "Satisfied")                                                                                                  >>
| [Escaped Output] radio_button_tag(:satisfaction, "Dissatisfied")                                                                                          >>
| [Escaped Output] label_tag(:satisfaction_d, "Dissatisfied")                                                                                               >>
| [Escaped Output] radio_button_tag(:satisfaction, "Extremely Dissatisfied")                                                                                >>
| [Escaped Output] label_tag(:satisfaction_xd, "Extremely Dissatisfied")                                                                                    >>
| [Escaped Output] text_area_tag(:survey_comment)                                                                                                           >>
| [Escaped Output] check_box_tag(:contact_is_OK)                                                                                                            >>
| [Escaped Output] label_tag(:contact_is_OK, "You can contact me about my response")                                                                        >>
| [Escaped Output] hidden_field(:user, :email)                                                                                                              >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary")                                                                                        >>
| [Escaped Output] form_tag("/questionaires/after_survey_create", :method => "get") do; [Escaped Output] radio_button_tag(:satisfaction, "Extremely Satisfie>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

questionaires/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => q.object })                                                                      >>
| [Escaped Output] q.radio_button(:feature, "Mental Game")                                                                                                  >>
| [Escaped Output] q.label(:feature, "Mental Game Advice")                                                                                                  >>
| [Escaped Output] q.radio_button(:feature, "Video Tips")                                                                                                   >>
| [Escaped Output] q.label(:feature, "Video Tips")                                                                                                          >>
| [Escaped Output] q.radio_button(:feature, "Drills")                                                                                                       >>
| [Escaped Output] q.label(:feature, "Drills")                                                                                                              >>
| [Escaped Output] q.radio_button(:feature, "Swing Thoughts")                                                                                               >>
| [Escaped Output] q.label(:feature, "Swing Thoughts")                                                                                                      >>
| [Escaped Output] q.radio_button(:feature, "Do not care")                                                                                                  >>
| [Escaped Output] q.label(:feature, "Do not care")                                                                                                         >>
| [Escaped Output] q.radio_button(:ease, "Extremely Easy")                                                                                                  >>
| [Escaped Output] q.label(:ease, "Extremely Easy")                                                                                                         >>
| [Escaped Output] q.radio_button(:ease, "Easy")                                                                                                            >>
| [Escaped Output] q.label(:ease, "Easy")                                                                                                                   >>
| [Escaped Output] q.radio_button(:ease, "Do not care")                                                                                                     >>
| [Escaped Output] q.label(:ease, "Do not care")                                                                                                            >>
| [Escaped Output] q.radio_button(:ease, "Difficult to use")                                                                                                >>
| [Escaped Output] q.label(:ease, "Difficult to use")                                                                                                       >>
| [Escaped Output] q.radio_button(:speed, "Fast")                                                                                                           >>
| [Escaped Output] q.label(:speed, "Fast")                                                                                                                  >>
| [Escaped Output] q.radio_button(:speed, "OK")                                                                                                             >>
| [Escaped Output] q.label(:speed, "OK")                                                                                                                    >>
| [Escaped Output] q.radio_button(:speed, "Do not care")                                                                                                    >>
| [Escaped Output] q.label(:speed, "Do not care")                                                                                                           >>
| [Escaped Output] q.radio_button(:speed, "Too Slow")                                                                                                       >>
| [Escaped Output] q.label(:speed, "Too Slow")                                                                                                              >>
| [Escaped Output] q.radio_button(:tracker, "Yes")                                                                                                          >>
| [Escaped Output] q.label(:tracker, "Yes")                                                                                                                 >>
| [Escaped Output] q.radio_button(:tracker, "No")                                                                                                           >>
| [Escaped Output] q.label(:tracker, "No")                                                                                                                  >>
| [Escaped Output] q.radio_button(:tracker, "Do not care")                                                                                                  >>
| [Escaped Output] q.label(:tracker, "Do not care")                                                                                                         >>
| [Escaped Output] q.radio_button(:post, "Yes")                                                                                                             >>
| [Escaped Output] q.label(:post, "Yes")                                                                                                                    >>
| [Escaped Output] q.radio_button(:post, "No")                                                                                                              >>
| [Escaped Output] q.label(:post, "No")                                                                                                                     >>
| [Escaped Output] q.radio_button(:post, "Do not care")                                                                                                     >>
| [Escaped Output] q.label(:post, "Do not care")                                                                                                            >>
| [Escaped Output] q.radio_button(:handicap, "Yes")                                                                                                         >>
| [Escaped Output] q.label(:handicap, "Yes")                                                                                                                >>
| [Escaped Output] q.radio_button(:handicap, "satisfied")                                                                                                   >>
| [Escaped Output] q.label(:handicap, "I am satisfied with a Mentor Handicap")                                                                              >>
| [Escaped Output] q.radio_button(:handicap, "understand")                                                                                                  >>
| [Escaped Output] q.label(:handicap, "Yes, but understand only physical golf clubs can offer official handicaps")                                          >>
| [Escaped Output] q.radio_button(:handicap, "Do not care")                                                                                                 >>
| [Escaped Output] q.label(:handicap, "Do not care")                                                                                                        >>
| [Escaped Output] q.radio_button(:satisfaction, "Extremely Satisfied")                                                                                     >>
| [Escaped Output] q.label(:satisfaction, "Extremely Satisfied")                                                                                            >>
| [Escaped Output] q.radio_button(:satisfaction, "Satisfied")                                                                                               >>
| [Escaped Output] q.label(:satisfaction, "Satisfied")                                                                                                      >>
| [Escaped Output] q.radio_button(:satisfaction, "Do not care")                                                                                             >>
| [Escaped Output] q.label(:satisfaction, "Do not care")                                                                                                    >>
| [Escaped Output] q.radio_button(:satisfaction, "Dissatisfied")                                                                                            >>
| [Escaped Output] q.label(:satisfaction, "Dissatisfied")                                                                                                   >>
| [Escaped Output] q.text_area(:comment)                                                                                                                    >>
| [Escaped Output] q.check_box(:contact_is_OK)                                                                                                              >>
| [Escaped Output] q.label(:contact_is_OK, "You can contact me about my response")                                                                          >>
| [Escaped Output] q.submit("Update", :class => "btn btn-primary")                                                                                          >>
| [Escaped Output] form_for(@questionaire) do; [Escaped Output] render(partial => "shared/error_messages", { :object => q.object });[Escaped Output] q.radio>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

questionaires/edit.["QuestionairesController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Mental Game")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:feature, "Mental Game Advice")                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Video Tips")                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:feature, "Video Tips")                                                                                            >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Drills")                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:feature, "Drills")                                                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Swing Thoughts")                                                                                 >>
| [Escaped Output] FormBuilder.new.label(:feature, "Swing Thoughts")                                                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Do not care")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:feature, "Do not care")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Extremely Easy")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:ease, "Extremely Easy")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Easy")                                                                                              >>
| [Escaped Output] FormBuilder.new.label(:ease, "Easy")                                                                                                     >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Do not care")                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:ease, "Do not care")                                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Difficult to use")                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:ease, "Difficult to use")                                                                                         >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Fast")                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:speed, "Fast")                                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "OK")                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:speed, "OK")                                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Do not care")                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:speed, "Do not care")                                                                                             >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Too Slow")                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:speed, "Too Slow")                                                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "Yes")                                                                                            >>
| [Escaped Output] FormBuilder.new.label(:tracker, "Yes")                                                                                                   >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "No")                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:tracker, "No")                                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "Do not care")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:tracker, "Do not care")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "Yes")                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:post, "Yes")                                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "No")                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:post, "No")                                                                                                       >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "Do not care")                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:post, "Do not care")                                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "Yes")                                                                                           >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Yes")                                                                                                  >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "satisfied")                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:handicap, "I am satisfied with a Mentor Handicap")                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "understand")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Yes, but understand only physical golf clubs can offer official handicaps")                            >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "Do not care")                                                                                   >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Do not care")                                                                                          >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Extremely Satisfied")                                                                       >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Extremely Satisfied")                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Satisfied")                                                                                 >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Satisfied")                                                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Do not care")                                                                               >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Do not care")                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Dissatisfied")                                                                              >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Dissatisfied")                                                                                     >>
| [Escaped Output] FormBuilder.new.text_area(:comment)                                                                                                      >>
| [Escaped Output] FormBuilder.new.check_box(:contact_is_OK)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:contact_is_OK, "You can contact me about my response")                                                            >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for((Questionaire.find_by_id(params[:id]) or User.find_by_email("obromios@gmail.com").questionaires.build(:number => 0, :status => ">>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

questionaires/edit.["QuestionairesController#update"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Mental Game")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:feature, "Mental Game Advice")                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Video Tips")                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:feature, "Video Tips")                                                                                            >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Drills")                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:feature, "Drills")                                                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Swing Thoughts")                                                                                 >>
| [Escaped Output] FormBuilder.new.label(:feature, "Swing Thoughts")                                                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:feature, "Do not care")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:feature, "Do not care")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Extremely Easy")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:ease, "Extremely Easy")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Easy")                                                                                              >>
| [Escaped Output] FormBuilder.new.label(:ease, "Easy")                                                                                                     >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Do not care")                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:ease, "Do not care")                                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:ease, "Difficult to use")                                                                                  >>
| [Escaped Output] FormBuilder.new.label(:ease, "Difficult to use")                                                                                         >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Fast")                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:speed, "Fast")                                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "OK")                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:speed, "OK")                                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Do not care")                                                                                      >>
| [Escaped Output] FormBuilder.new.label(:speed, "Do not care")                                                                                             >>
| [Escaped Output] FormBuilder.new.radio_button(:speed, "Too Slow")                                                                                         >>
| [Escaped Output] FormBuilder.new.label(:speed, "Too Slow")                                                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "Yes")                                                                                            >>
| [Escaped Output] FormBuilder.new.label(:tracker, "Yes")                                                                                                   >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "No")                                                                                             >>
| [Escaped Output] FormBuilder.new.label(:tracker, "No")                                                                                                    >>
| [Escaped Output] FormBuilder.new.radio_button(:tracker, "Do not care")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:tracker, "Do not care")                                                                                           >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "Yes")                                                                                               >>
| [Escaped Output] FormBuilder.new.label(:post, "Yes")                                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "No")                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:post, "No")                                                                                                       >>
| [Escaped Output] FormBuilder.new.radio_button(:post, "Do not care")                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:post, "Do not care")                                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "Yes")                                                                                           >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Yes")                                                                                                  >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "satisfied")                                                                                     >>
| [Escaped Output] FormBuilder.new.label(:handicap, "I am satisfied with a Mentor Handicap")                                                                >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "understand")                                                                                    >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Yes, but understand only physical golf clubs can offer official handicaps")                            >>
| [Escaped Output] FormBuilder.new.radio_button(:handicap, "Do not care")                                                                                   >>
| [Escaped Output] FormBuilder.new.label(:handicap, "Do not care")                                                                                          >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Extremely Satisfied")                                                                       >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Extremely Satisfied")                                                                              >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Satisfied")                                                                                 >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Satisfied")                                                                                        >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Do not care")                                                                               >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Do not care")                                                                                      >>
| [Escaped Output] FormBuilder.new.radio_button(:satisfaction, "Dissatisfied")                                                                              >>
| [Escaped Output] FormBuilder.new.label(:satisfaction, "Dissatisfied")                                                                                     >>
| [Escaped Output] FormBuilder.new.text_area(:comment)                                                                                                      >>
| [Escaped Output] FormBuilder.new.check_box(:contact_is_OK)                                                                                                >>
| [Escaped Output] FormBuilder.new.label(:contact_is_OK, "You can contact me about my response")                                                            >>
| [Escaped Output] FormBuilder.new.submit("Update", :class => "btn btn-primary")                                                                            >>
| [Escaped Output] form_for(Questionaire.find_by_id(params[:id])) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.n>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

reports/_report

+------------------------------------------------------------------------------------+
| Output                                                                             |
+------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)                                      |
| [Escaped Output] star_rating(@results[:i_focus])                                   |
| [Escaped Output] @plan.major_focus                                                 |
| [Escaped Output] @plan.secondary_focus                                             |
| [Escaped Output] pluralize(@results[:j_prac], "session")                           |
| [Escaped Output] @results[:n_focus][0]                                             |
| [Escaped Output] star_rating(@results[:i_effort])                                  |
| [Escaped Output] pluralize((@plan.duration_practice.to_f / 60).round(1), "hour")   |
| [Escaped Output] pluralize(@results[:j_prac], "session")                           |
| [Escaped Output] pluralize((@results[:total_duration].to_f / 60).round(1), "hour") |
| [Escaped Output] star_rating(@results[:i_outcome])                                 |
| [Escaped Output] @results[:outcomes_mode]                                          |
| [Escaped Output] star_rating(@results[:i_result])                                  |
| [Escaped Output] pluralize(@results[:i_result], "star")                            |
| [Escaped Output] MaxStars                                                          |
| [Escaped Output] post.duration                                                     |
| [Escaped Output] post.focus                                                        |
| [Escaped Output] post.outcome                                                      |
| [Escaped Output] post.place                                                        |
| [Escaped Output] link_to("MyHome", root_path)                                      |
| [Escaped Output] pluralize(@results[:j_play], "game")                              |
| [Escaped Output] @results[:score_avg].round(1)                                     |
| [Escaped Output] @results[:best_mode]                                              |
| [Escaped Output] @results[:weak_mode]                                              |
| [Escaped Output] @results[:weak_mode]                                              |
| [Escaped Output] link_to("page", reviewsLookup(@results[:weak_mode][(0..3)]))      |
| [Escaped Output] post.score                                                        |
| [Escaped Output] post.place                                                        |
| [Escaped Output] post.best                                                         |
| [Escaped Output] post.weakest                                                      |
+------------------------------------------------------------------------------------+

reports/_report.["ReportsController#report", "Template:reports/report"]

+-------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                            |
+-------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)                                                                     |
| [Escaped Output] star_rating(Analysis.new.against_plan(current_user)[:i_focus])                                   |
| [Escaped Output] current_user.plans.first.major_focus                                                             |
| [Escaped Output] current_user.plans.first.secondary_focus                                                         |
| [Escaped Output] pluralize(Analysis.new.against_plan(current_user)[:j_prac], "session")                           |
| [Escaped Output] Analysis.new.against_plan(current_user)[:n_focus][0]                                             |
| [Escaped Output] star_rating(Analysis.new.against_plan(current_user)[:i_effort])                                  |
| [Escaped Output] pluralize((current_user.plans.first.duration_practice.to_f / 60).round(1), "hour")               |
| [Escaped Output] pluralize(Analysis.new.against_plan(current_user)[:j_prac], "session")                           |
| [Escaped Output] pluralize((Analysis.new.against_plan(current_user)[:total_duration].to_f / 60).round(1), "hour") |
| [Escaped Output] star_rating(Analysis.new.against_plan(current_user)[:i_outcome])                                 |
| [Escaped Output] Analysis.new.against_plan(current_user)[:outcomes_mode]                                          |
| [Escaped Output] star_rating(Analysis.new.against_plan(current_user)[:i_result])                                  |
| [Escaped Output] pluralize(Analysis.new.against_plan(current_user)[:i_result], "star")                            |
| [Escaped Output] 5                                                                                                |
| [Escaped Output] post.duration                                                                                    |
| [Escaped Output] post.focus                                                                                       |
| [Escaped Output] post.outcome                                                                                     |
| [Escaped Output] post.place                                                                                       |
| [Escaped Output] link_to("MyHome", root_path)                                                                     |
| [Escaped Output] pluralize(Analysis.new.against_plan(current_user)[:j_play], "game")                              |
| [Escaped Output] Analysis.new.against_plan(current_user)[:score_avg].round(1)                                     |
| [Escaped Output] Analysis.new.against_plan(current_user)[:best_mode]                                              |
| [Escaped Output] Analysis.new.against_plan(current_user)[:weak_mode]                                              |
| [Escaped Output] Analysis.new.against_plan(current_user)[:weak_mode]                                              |
| [Escaped Output] link_to("page", reviewsLookup(Analysis.new.against_plan(current_user)[:weak_mode][(0..3)]))      |
| [Escaped Output] post.score                                                                                       |
| [Escaped Output] post.place                                                                                       |
| [Escaped Output] post.best                                                                                        |
| [Escaped Output] post.weakest                                                                                     |
+-------------------------------------------------------------------------------------------------------------------+

reports/_report.["ReportsController#report_sample", "Template:reports/report_sample"]

+----------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                       |
+----------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)                                                                                                |
| [Escaped Output] star_rating(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:i_focus])                                   |
| [Escaped Output] User.find_by_email("david@example.com").plans.first.major_focus                                                             |
| [Escaped Output] User.find_by_email("david@example.com").plans.first.secondary_focus                                                         |
| [Escaped Output] pluralize(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:j_prac], "session")                           |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:n_focus][0]                                             |
| [Escaped Output] star_rating(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:i_effort])                                  |
| [Escaped Output] pluralize((User.find_by_email("david@example.com").plans.first.duration_practice.to_f / 60).round(1), "hour")               |
| [Escaped Output] pluralize(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:j_prac], "session")                           |
| [Escaped Output] pluralize((Analysis.new.against_plan(User.find_by_email("david@example.com"))[:total_duration].to_f / 60).round(1), "hour") |
| [Escaped Output] star_rating(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:i_outcome])                                 |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:outcomes_mode]                                          |
| [Escaped Output] star_rating(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:i_result])                                  |
| [Escaped Output] pluralize(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:i_result], "star")                            |
| [Escaped Output] 5                                                                                                                           |
| [Escaped Output] post.duration                                                                                                               |
| [Escaped Output] post.focus                                                                                                                  |
| [Escaped Output] post.outcome                                                                                                                |
| [Escaped Output] post.place                                                                                                                  |
| [Escaped Output] link_to("MyHome", root_path)                                                                                                |
| [Escaped Output] pluralize(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:j_play], "game")                              |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:score_avg].round(1)                                     |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:best_mode]                                              |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:weak_mode]                                              |
| [Escaped Output] Analysis.new.against_plan(User.find_by_email("david@example.com"))[:weak_mode]                                              |
| [Escaped Output] link_to("page", reviewsLookup(Analysis.new.against_plan(User.find_by_email("david@example.com"))[:weak_mode][(0..3)]))      |
| [Escaped Output] post.score                                                                                                                  |
| [Escaped Output] post.place                                                                                                                  |
| [Escaped Output] post.best                                                                                                                   |
| [Escaped Output] post.weakest                                                                                                                |
+----------------------------------------------------------------------------------------------------------------------------------------------+

reports/_report.["Template:reports/report"]

+------------------------------------------------------------------------------------+
| Output                                                                             |
+------------------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path)                                      |
| [Escaped Output] star_rating(@results[:i_focus])                                   |
| [Escaped Output] @plan.major_focus                                                 |
| [Escaped Output] @plan.secondary_focus                                             |
| [Escaped Output] pluralize(@results[:j_prac], "session")                           |
| [Escaped Output] @results[:n_focus][0]                                             |
| [Escaped Output] star_rating(@results[:i_effort])                                  |
| [Escaped Output] pluralize((@plan.duration_practice.to_f / 60).round(1), "hour")   |
| [Escaped Output] pluralize(@results[:j_prac], "session")                           |
| [Escaped Output] pluralize((@results[:total_duration].to_f / 60).round(1), "hour") |
| [Escaped Output] star_rating(@results[:i_outcome])                                 |
| [Escaped Output] @results[:outcomes_mode]                                          |
| [Escaped Output] star_rating(@results[:i_result])                                  |
| [Escaped Output] pluralize(@results[:i_result], "star")                            |
| [Escaped Output] 5                                                                 |
| [Escaped Output] post.duration                                                     |
| [Escaped Output] post.focus                                                        |
| [Escaped Output] post.outcome                                                      |
| [Escaped Output] post.place                                                        |
| [Escaped Output] link_to("MyHome", root_path)                                      |
| [Escaped Output] pluralize(@results[:j_play], "game")                              |
| [Escaped Output] @results[:score_avg].round(1)                                     |
| [Escaped Output] @results[:best_mode]                                              |
| [Escaped Output] @results[:weak_mode]                                              |
| [Escaped Output] @results[:weak_mode]                                              |
| [Escaped Output] link_to("page", reviewsLookup(@results[:weak_mode][(0..3)]))      |
| [Escaped Output] post.score                                                        |
| [Escaped Output] post.place                                                        |
| [Escaped Output] post.best                                                         |
| [Escaped Output] post.weakest                                                      |
+------------------------------------------------------------------------------------+

reports/report

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] datePretty(@plan.created_at)         |
| [Escaped Output] datePretty(@plan.end_date)           |
| [Escaped Output] render(partial => "report", {})      |
| [Escaped Output] link_to("here", report_overall_path) |
| [Escaped Output] link_to("MyHome", root_path)         |
+-------------------------------------------------------+

reports/report.["ReportsController#report"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] datePretty(current_user.plans.first.created_at) |
| [Escaped Output] datePretty(current_user.plans.first.end_date)   |
| [Escaped Output] render(partial => "report", {})                 |
| [Escaped Output] link_to("here", report_overall_path)            |
| [Escaped Output] link_to("MyHome", root_path)                    |
+------------------------------------------------------------------+

reports/report_overall

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] datePretty(@goal.created_at)                   |
| [Escaped Output] datePretty(@goal.goal_date)                    |
| [Escaped Output] datePretty(@goal.goal_date)                    |
| [Escaped Output] render(partial => "shared/report_overall", {}) |
| [Escaped Output] link_to("here", report_path)                   |
| [Escaped Output] link_to("MyHome", root_path)                   |
+-----------------------------------------------------------------+

reports/report_overall.["ReportsController#report_overall"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] datePretty(current_user.goals.first.created_at) |
| [Escaped Output] datePretty(current_user.goals.first.goal_date)  |
| [Escaped Output] datePretty(current_user.goals.first.goal_date)  |
| [Escaped Output] render(partial => "shared/report_overall", {})  |
| [Escaped Output] link_to("here", report_path)                    |
| [Escaped Output] link_to("MyHome", root_path)                    |
+------------------------------------------------------------------+

reports/report_overall_sample

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] datePretty(3.months.ago)                       |
| [Escaped Output] datePretty(3.months.from_now)                  |
| [Escaped Output] render(partial => "shared/report_overall", {}) |
| [Escaped Output] link_to("try out", signup_path)                |
| [Escaped Output] link_to("here", secret_to_golf_path)           |
+-----------------------------------------------------------------+

reports/report_overall_sample.["ReportsController#report_overall_sample"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] datePretty(3.months.ago)                       |
| [Escaped Output] datePretty(3.months.from_now)                  |
| [Escaped Output] render(partial => "shared/report_overall", {}) |
| [Escaped Output] link_to("try out", signup_path)                |
| [Escaped Output] link_to("here", secret_to_golf_path)           |
+-----------------------------------------------------------------+

reports/report_sample

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] datePretty(3.weeks.ago)                    |
| [Escaped Output] datePretty(1.week.from_now)                |
| [Escaped Output] render(partial => "report", {})            |
| [Escaped Output] link_to("here", report_overallSample_path) |
| [Escaped Output] link_to("try it out", signup_path)         |
| [Escaped Output] FreePeriod                                 |
+-------------------------------------------------------------+

reports/report_sample.["ReportsController#report_sample"]

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] datePretty(3.weeks.ago)                    |
| [Escaped Output] datePretty(1.week.from_now)                |
| [Escaped Output] render(partial => "report", {})            |
| [Escaped Output] link_to("here", report_overallSample_path) |
| [Escaped Output] link_to("try it out", signup_path)         |
| [Escaped Output] 10                                         |
+-------------------------------------------------------------+

reviews/_summary

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/newsletter_form", {}) |
| [Escaped Output] advert_display(:bottom, @advert_hide)           |
+------------------------------------------------------------------+

reviews/_summary.["Template:reviews/affiliate_test"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/newsletter_form", {}) |
| [Escaped Output] advert_display(:bottom, @advert_hide)           |
+------------------------------------------------------------------+

reviews/affiliate_test

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Test Page for Affiliate promotion")                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/affiliate_test.["ReviewsController#affiliate_test"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Test Page for Affiliate promotion")                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/bunkers

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Bunker Play Tips")                                        |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/bunkers.["ReviewsController#bunkers"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Bunker Play Tips")                                        |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/chipping

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Chipping Tips")                                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/chipping.["ReviewsController#golf_chipping_tips"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Chipping Tips")                                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/effective_swing

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("Effective Ways to Swing a Golf Club")                         |
| [Escaped Output] link_to("here", signup_path(:referral => "effective_swing"))             |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/effective_swing.["ReviewsController#effective_swing"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("Effective Ways to Swing a Golf Club")                         |
| [Escaped Output] link_to("here", signup_path(:referral => "effective_swing"))             |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/enjoying

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Tips for Enjoying Golf")                                      |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/enjoying.["ReviewsController#enjoying"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Tips for Enjoying Golf")                                      |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/exercises

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Exercises Tips")                                          |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/exercises.["ReviewsController#exercises"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Exercises Tips")                                          |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/full_swing

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Full Swing Tips")                                         |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] link_to("join", signup_path(:referral => "tips_fullswing"))              |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/full_swing.["ReviewsController#full_swing"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Full Swing Tips")                                         |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] link_to("join", signup_path(:referral => "tips_fullswing"))              |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/full_swing_a

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Full Swing Tips")                                         |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] link_to("join", signup_path(:referral => "tips_fullswing"))              |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/full_swing_a.["ReviewsController#full_swing_a"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Full Swing Tips")                                         |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] link_to("join", signup_path(:referral => "tips_fullswing"))              |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/golf_grip

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("How to Grip a Golf Club")                                     |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/golf_grip.["ReviewsController#golf_grip"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("How to Grip a Golf Club")                                     |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/identifyWeaknesses

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Diagnosis Tips")                                          |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/mentalgame

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Mental Game Tips")                                        |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/mentalgame.["ReviewsController#mentalgame"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Mental Game Tips")                                        |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/perfect_drive

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("Golf Driving Tips to Hit the Perfect Shot")                   |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/perfect_drive.["ReviewsController#perfect_drive"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] h1_insert("Golf Driving Tips to Hit the Perfect Shot")                   |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/pitching

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Pitching Tips")                                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/pitching.["ReviewsController#pitching"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Pitching Tips")                                           |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/putting

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Putting Tips")                                            |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/putting.["ReviewsController#putting"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Putting Tips")                                            |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/putting_a

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Putting Tips")                                            |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/putting_a.["ReviewsController#putting_a"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Putting Tips")                                            |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/reviews

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert("Top Tips Pages")                                                                                                              >>
| [Escaped Output] link_to("Join Today", signup_path(:referral => "tips_reviews"), :class => "btn btn-cta btn-cta-primary")                                 >>
| [Escaped Output] FreePeriod                                                                                                                               >>
| [Escaped Output] link_to("Learn More", root_path, :class => "btn btn-primary")                                                                            >>
| [Escaped Output] render(partial => "shared/top_tips", {})                                                                                                 >>
| [Escaped Output] link_to("contact us", contact_us_path)                                                                                                   >>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/beginners", {})                                                                                       >>
| [Escaped Output] render(partial => "shared/sidebars/teachers", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

reviews/reviews.["ReviewsController#reviews"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] h1_insert("Top Tips Pages")                                                                                                              >>
| [Escaped Output] link_to("Join Today", signup_path(:referral => "tips_reviews"), :class => "btn btn-cta btn-cta-primary")                                 >>
| [Escaped Output] 10                                                                                                                                       >>
| [Escaped Output] link_to("Learn More", root_path, :class => "btn btn-primary")                                                                            >>
| [Escaped Output] render(partial => "shared/top_tips", {})                                                                                                 >>
| [Escaped Output] link_to("contact us", contact_us_path)                                                                                                   >>
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                                    >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/beginners", {})                                                                                       >>
| [Escaped Output] render(partial => "shared/sidebars/teachers", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

reviews/training_aids

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Training Aids Tips")                                      |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

reviews/training_aids.["ReviewsController#training_aids"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert("Top Training Aids Tips")                                      |
| [Escaped Output] render(partial => "topSummary", {})                                      |
| [Escaped Output] render(partial => "summary", {})                                         |
| [Escaped Output] render(partial => "shared/sidebars/standard", { :object => (@sidebar) }) |
+-------------------------------------------------------------------------------------------+

sessions/_fields

+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:email, :input_html => ({ :value => (@email) }))                                                                          |
| [Escaped Output] f.input(:password)                                                                                                                |
| [Escaped Output] f.input(:remember_me, :as => :boolean)                                                                                            |
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Sign in", :text_waiting => "Signing In" }) }) |
+----------------------------------------------------------------------------------------------------------------------------------------------------+

sessions/_fields.["Ios::SessionsController#new", "Template:ios/sessions/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:email, :input_html => ({ :value => find_email_from_uuid }))                                                              |
| [Escaped Output] f.input(:password)                                                                                                                |
| [Escaped Output] f.input(:remember_me, :as => :boolean)                                                                                            |
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Sign in", :text_waiting => "Signing In" }) }) |
+----------------------------------------------------------------------------------------------------------------------------------------------------+

sessions/_fields.["Template:ios/sessions/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:email, :input_html => ({ :value => (@email) }))                                                                          |
| [Escaped Output] f.input(:password)                                                                                                                |
| [Escaped Output] f.input(:remember_me, :as => :boolean)                                                                                            |
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Sign in", :text_waiting => "Signing In" }) }) |
+----------------------------------------------------------------------------------------------------------------------------------------------------+

sessions/_form

+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:email, :input_html => ({ :value => (@email) }))                                                                          |
| [Escaped Output] f.input(:password)                                                                                                                |
| [Escaped Output] f.input(:remember_me, :as => :boolean)                                                                                            |
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Sign in", :text_waiting => "Signing In" }) }) |
+----------------------------------------------------------------------------------------------------------------------------------------------------+

sessions/new

+--------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fields", { :f => f })                                                                            |
| [Escaped Output] simple_form_for(:session, :url => sessions_path) do; [Escaped Output] render(partial => "fields", { :f => f }); end |
| [Escaped Output] link_to("Forgotten password?", new_password_reset_path)                                                             |
| [Escaped Output] link_to("Sign Up", signup_path)                                                                                     |
| [Escaped Output] link_to("Contact Us", contact_us_path(@user))                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------+

sessions/new.["SessionsController#new"]

+--------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fields", { :f => f })                                                                            |
| [Escaped Output] simple_form_for(:session, :url => sessions_path) do; [Escaped Output] render(partial => "fields", { :f => f }); end |
| [Escaped Output] link_to("Forgotten password?", new_password_reset_path)                                                             |
| [Escaped Output] link_to("Sign Up", signup_path)                                                                                     |
| [Escaped Output] link_to("Contact Us", contact_us_path(@user))                                                                       |
+--------------------------------------------------------------------------------------------------------------------------------------+

setups/_ebook_offer

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] image_tag("ebook_cover_thumb.png", :alt => "Free Ebook", :id => "ebook_offer") |
| [Escaped Output] Account::Secret_to_golf_price                                                  |
+-------------------------------------------------------------------------------------------------+

setups/_ebook_offer.["SetupsController#key_info", "Template:setups/key_info"]

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] image_tag("ebook_cover_thumb.png", :alt => "Free Ebook", :id => "ebook_offer") |
| [Escaped Output] 4.99                                                                           |
+-------------------------------------------------------------------------------------------------+

setups/_ebook_offer.["Template:setups/key_info"]

+-------------------------------------------------------------------------------------------------+
| Output                                                                                          |
+-------------------------------------------------------------------------------------------------+
| [Escaped Output] image_tag("ebook_cover_thumb.png", :alt => "Free Ebook", :id => "ebook_offer") |
| [Escaped Output] Account::Secret_to_golf_price                                                  |
+-------------------------------------------------------------------------------------------------+

setups/_mental_carousel

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] render(partial => "mental_game_1", {}) |
| [Escaped Output] render(partial => "mental_game_2", {}) |
| [Escaped Output] render(partial => "mental_game_3", {}) |
| [Escaped Output] render(partial => "mental_game_4", {}) |
| [Escaped Output] render(partial => "mental_game_5", {}) |
| [Escaped Output] render(partial => "mental_game_6", {}) |
+---------------------------------------------------------+

setups/_mental_game_2

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] MentalGame::Default_exercise_time |
+----------------------------------------------------+

setups/_mental_game_2.["SetupsController#mental_game", "Template:setups/mental_game", "Template:setups/_mental_slider"]

+--------------------+
| Output             |
+--------------------+
| [Escaped Output] 5 |
+--------------------+

setups/_mental_game_2.["Template:setups/_mental_carousel"]

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] MentalGame::Default_exercise_time |
+----------------------------------------------------+

setups/_mental_game_4

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] MentalGame.level_name(1)                     |
| [Escaped Output] MentalGame.level_name(MentalGame::Level_max) |
| [Escaped Output] number_to_word(MentalGame::Errors_pass)      |
| [Escaped Output] MentalGame::Errors_max                       |
| [Escaped Output] MentalGame::Errors_max                       |
+---------------------------------------------------------------+

setups/_mental_game_4.["SetupsController#mental_game", "Template:setups/mental_game", "Template:setups/_mental_slider"]

+-------------------------------------------+
| Output                                    |
+-------------------------------------------+
| [Escaped Output] MentalGame.level_name(1) |
| [Escaped Output] MentalGame.level_name(5) |
| [Escaped Output] number_to_word(2)        |
| [Escaped Output] 9                        |
| [Escaped Output] 9                        |
+-------------------------------------------+

setups/_mental_game_4.["Template:setups/_mental_carousel"]

+---------------------------------------------------------------+
| Output                                                        |
+---------------------------------------------------------------+
| [Escaped Output] MentalGame.level_name(1)                     |
| [Escaped Output] MentalGame.level_name(MentalGame::Level_max) |
| [Escaped Output] number_to_word(MentalGame::Errors_pass)      |
| [Escaped Output] MentalGame::Errors_max                       |
| [Escaped Output] MentalGame::Errors_max                       |
+---------------------------------------------------------------+

setups/_mental_game_6

+-----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("awareness exercise", counter_mental_games_path(@mental_game))                         |
| [Escaped Output] link_to("reminder sheet", pre_shot_mental_game_path(:id => @mental_game.id, :format => "pdf")) |
| [Escaped Output] MentalGame::Errors_max                                                                         |
| [Escaped Output] link_to("post", addpost_path)                                                                  |
| [Escaped Output] link_to("control panel", mental_game_path(@mental_game))                                       |
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                          |
| [Escaped Output] FreePeriod                                                                                     |
+-----------------------------------------------------------------------------------------------------------------+

setups/_mental_game_6.["SetupsController#mental_game", "Template:setups/mental_game", "Template:setups/_mental_slider"]

+-----------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                      |
+-----------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("awareness exercise", counter_mental_games_path(current_user.mental_game))                         |
| [Escaped Output] link_to("reminder sheet", pre_shot_mental_game_path(:id => current_user.mental_game.id, :format => "pdf")) |
| [Escaped Output] 9                                                                                                          |
| [Escaped Output] link_to("post", addpost_path)                                                                              |
| [Escaped Output] link_to("control panel", mental_game_path(current_user.mental_game))                                       |
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                                      |
| [Escaped Output] 10                                                                                                         |
+-----------------------------------------------------------------------------------------------------------------------------+

setups/_mental_game_6.["Template:setups/_mental_carousel"]

+-----------------------------------------------------------------------------------------------------------------+
| Output                                                                                                          |
+-----------------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("awareness exercise", counter_mental_games_path(@mental_game))                         |
| [Escaped Output] link_to("reminder sheet", pre_shot_mental_game_path(:id => @mental_game.id, :format => "pdf")) |
| [Escaped Output] MentalGame::Errors_max                                                                         |
| [Escaped Output] link_to("post", addpost_path)                                                                  |
| [Escaped Output] link_to("control panel", mental_game_path(@mental_game))                                       |
| [Escaped Output] link_to("FAQ", faq_mental_games_path)                                                          |
| [Escaped Output] 10                                                                                             |
+-----------------------------------------------------------------------------------------------------------------+

setups/_mental_slider

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] render(partial => "mental_game_1", {}) |
| [Escaped Output] render(partial => "mental_game_2", {}) |
| [Escaped Output] render(partial => "mental_game_3", {}) |
| [Escaped Output] render(partial => "mental_game_4", {}) |
| [Escaped Output] render(partial => "mental_game_5", {}) |
| [Escaped Output] render(partial => "mental_game_6", {}) |
+---------------------------------------------------------+

setups/_mental_slider.["Template:setups/mental_game"]

+---------------------------------------------------------+
| Output                                                  |
+---------------------------------------------------------+
| [Escaped Output] render(partial => "mental_game_1", {}) |
| [Escaped Output] render(partial => "mental_game_2", {}) |
| [Escaped Output] render(partial => "mental_game_3", {}) |
| [Escaped Output] render(partial => "mental_game_4", {}) |
| [Escaped Output] render(partial => "mental_game_5", {}) |
| [Escaped Output] render(partial => "mental_game_6", {}) |
+---------------------------------------------------------+

setups/commitment

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("aim_for_success.png", :size => "590x315", :alt => "Aim for Success")                                                          >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => (@email_list) })                                                                 >>
| [Escaped Output] label_tag(:strokes_improvement, "Strokes Improvement")                                                                                   >>
| [Escaped Output] select(:goal, :strokes_improvement, (1..30).to_a)                                                                                        >>
| [Escaped Output] label(:number_of_months, "Number of Months")                                                                                             >>
| [Escaped Output] select(:goal, :number_of_months, (1..12).to_a)                                                                                           >>
| [Escaped Output] label_tag(:halfway_reward, "Halfway Reward")                                                                                             >>
| [Escaped Output] text_field(:goal, :halfway_reward)                                                                                                       >>
| [Escaped Output] label(:final_reward, "Final Reward")                                                                                                     >>
| [Escaped Output] text_field(:goal, :final_reward)                                                                                                         >>
| [Escaped Output] render(partial => "shared/privacy_fields", {})                                                                                           >>
| [Escaped Output] friend_message_text                                                                                                                      >>
| [Escaped Output] label(:email_1, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_1)                                                                                                        >>
| [Escaped Output] label(:email_2, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_2)                                                                                                        >>
| [Escaped Output] label(:email_3, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_3)                                                                                                        >>
| [Escaped Output] button_tag("Commit", :class => "btn btn-primary", :data => spin_when_loading)                                                            >>
| [Escaped Output] form_tag(:controller => "setups", :action => "make_commitment") do; [Escaped Output] render(partial => "shared/error_messages", { :object>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/commitment.["SetupsController#commitment"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("aim_for_success.png", :size => "590x315", :alt => "Aim for Success")                                                          >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => EmailList.new })                                                                 >>
| [Escaped Output] label_tag(:strokes_improvement, "Strokes Improvement")                                                                                   >>
| [Escaped Output] select(:goal, :strokes_improvement, (1..30).to_a)                                                                                        >>
| [Escaped Output] label(:number_of_months, "Number of Months")                                                                                             >>
| [Escaped Output] select(:goal, :number_of_months, (1..12).to_a)                                                                                           >>
| [Escaped Output] label_tag(:halfway_reward, "Halfway Reward")                                                                                             >>
| [Escaped Output] text_field(:goal, :halfway_reward)                                                                                                       >>
| [Escaped Output] label(:final_reward, "Final Reward")                                                                                                     >>
| [Escaped Output] text_field(:goal, :final_reward)                                                                                                         >>
| [Escaped Output] render(partial => "shared/privacy_fields", {})                                                                                           >>
| [Escaped Output] friend_message_text                                                                                                                      >>
| [Escaped Output] label(:email_1, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_1)                                                                                                        >>
| [Escaped Output] label(:email_2, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_2)                                                                                                        >>
| [Escaped Output] label(:email_3, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_3)                                                                                                        >>
| [Escaped Output] button_tag("Commit", :class => "btn btn-primary", :data => spin_when_loading)                                                            >>
| [Escaped Output] form_tag(:controller => "setups", :action => "make_commitment") do; [Escaped Output] render(partial => "shared/error_messages", { :object>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/commitment.["SetupsController#make_commitment"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("aim_for_success.png", :size => "590x315", :alt => "Aim for Success")                                                          >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => EmailList.new(params[:email_list]) })                                            >>
| [Escaped Output] label_tag(:strokes_improvement, "Strokes Improvement")                                                                                   >>
| [Escaped Output] select(:goal, :strokes_improvement, (1..30).to_a)                                                                                        >>
| [Escaped Output] label(:number_of_months, "Number of Months")                                                                                             >>
| [Escaped Output] select(:goal, :number_of_months, (1..12).to_a)                                                                                           >>
| [Escaped Output] label_tag(:halfway_reward, "Halfway Reward")                                                                                             >>
| [Escaped Output] text_field(:goal, :halfway_reward)                                                                                                       >>
| [Escaped Output] label(:final_reward, "Final Reward")                                                                                                     >>
| [Escaped Output] text_field(:goal, :final_reward)                                                                                                         >>
| [Escaped Output] render(partial => "shared/privacy_fields", {})                                                                                           >>
| [Escaped Output] friend_message_text                                                                                                                      >>
| [Escaped Output] label(:email_1, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_1)                                                                                                        >>
| [Escaped Output] label(:email_2, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_2)                                                                                                        >>
| [Escaped Output] label(:email_3, "Friend's Email Address")                                                                                                >>
| [Escaped Output] text_field(:email_list, :email_3)                                                                                                        >>
| [Escaped Output] button_tag("Commit", :class => "btn btn-primary", :data => spin_when_loading)                                                            >>
| [Escaped Output] form_tag(:controller => "setups", :action => "make_commitment") do; [Escaped Output] render(partial => "shared/error_messages", { :object>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/commitmentPrint

+-------------------------------------------------------------------------------+
| Output                                                                        |
+-------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "goal_text", {})                           |
| [Escaped Output] @user.name                                                   |
| [Escaped Output] @user.microposts.count                                       |
| [Escaped Output] link_to("Next", setupThree_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", setupTwo_path, :class => "side_menu_link")   |
+-------------------------------------------------------------------------------+

setups/focus

+--------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                              |
| [Escaped Output] render(partial => "shared/challenges_text", {})                                                                     |
| [Escaped Output] form_tag("/make_focus", :method => "get") do; [Escaped Output] render(partial => "shared/challenges_text", {}); end |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                            |
| [Escaped Output] link_to("Why a Challenge?", (focusHelp_path + "#why"), :class => "side_menu_link", :target => "_blank")             |
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")               |
| [Escaped Output] link_to("Print Goals", print_show_goals_path, :class => "side_menu_link")                                           |
| [Escaped Output] link_to("Edit Goals", goaledit_path, :class => "side_menu_link")                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------+

setups/focus.["SetupsController#focus"]

+--------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                               |
+--------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] notice                                                                                                              |
| [Escaped Output] render(partial => "shared/challenges_text", {})                                                                     |
| [Escaped Output] form_tag("/make_focus", :method => "get") do; [Escaped Output] render(partial => "shared/challenges_text", {}); end |
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                            |
| [Escaped Output] link_to("Why a Challenge?", (focusHelp_path + "#why"), :class => "side_menu_link", :target => "_blank")             |
| [Escaped Output] link_to("Challenges FAQ", (focusHelp_path + "#faq"), :class => "side_menu_link", :target => "_blank")               |
| [Escaped Output] link_to("Print Goals", print_show_goals_path, :class => "side_menu_link")                                           |
| [Escaped Output] link_to("Edit Goals", goaledit_path, :class => "side_menu_link")                                                    |
+--------------------------------------------------------------------------------------------------------------------------------------+

setups/focusHelp

+--------------------------------------------------------------------------+
| Output                                                                   |
+--------------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/challenges_how_to_index", {}) |
| [Escaped Output] render(partial => "shared/challenges_how_to", {})       |
+--------------------------------------------------------------------------+

setups/key_info

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] text_if_free_trial(@user)                                                                                                                >>
| [Escaped Output] text_if_tracker_or_calculator(@user.referral)                                                                                            >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => (@profile) })                                                                    >>
| [Escaped Output] label_tag(:duration_practice, "Practice Time per Month")                                                                                 >>
| [Escaped Output] select(:plan, :duration_practice, forcedDurationList)                                                                                    >>
| [Escaped Output] label(:no_games, "Games per Month")                                                                                                      >>
| [Escaped Output] select(:plan, :no_games, forcedGamesList)                                                                                                >>
| [Escaped Output] label_tag(:handicap_type, "Handicap Type")                                                                                               >>
| [Escaped Output] select(:profile, :handicap_type, handicap_country_list)                                                                                  >>
| [Escaped Output] label_tag(:exact_handicap, "Handicap")                                                                                                   >>
| [Escaped Output] text_field(:profile, :exact_handicap, :size => 4)                                                                                        >>
| [Escaped Output] render(partial => "ebook_offer", {})                                                                                                     >>
| [Escaped Output] opt_in_field                                                                                                                             >>
| [Escaped Output] go_to_myhome_check_box(@user.referral)                                                                                                   >>
| [Escaped Output] button_tag("Update", :class => "btn btn-primary", :data => spin_when_loading)                                                            >>
| [Escaped Output] form_tag(:controller => "setups", :action => "key_infoCreate") do; [Escaped Output] render(partial => "shared/error_messages", { :object >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/key_info.["SetupsController#key_info"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] text_if_free_trial(current_user)                                                                                                         >>
| [Escaped Output] text_if_tracker_or_calculator(current_user.referral)                                                                                     >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => current_user.profile })                                                          >>
| [Escaped Output] label_tag(:duration_practice, "Practice Time per Month")                                                                                 >>
| [Escaped Output] select(:plan, :duration_practice, forcedDurationList)                                                                                    >>
| [Escaped Output] label(:no_games, "Games per Month")                                                                                                      >>
| [Escaped Output] select(:plan, :no_games, forcedGamesList)                                                                                                >>
| [Escaped Output] label_tag(:handicap_type, "Handicap Type")                                                                                               >>
| [Escaped Output] select(:profile, :handicap_type, handicap_country_list)                                                                                  >>
| [Escaped Output] label_tag(:exact_handicap, "Handicap")                                                                                                   >>
| [Escaped Output] text_field(:profile, :exact_handicap, :size => 4)                                                                                        >>
| [Escaped Output] render(partial => "ebook_offer", {})                                                                                                     >>
| [Escaped Output] opt_in_field                                                                                                                             >>
| [Escaped Output] go_to_myhome_check_box(current_user.referral)                                                                                            >>
| [Escaped Output] button_tag("Update", :class => "btn btn-primary", :data => spin_when_loading)                                                            >>
| [Escaped Output] form_tag(:controller => "setups", :action => "key_infoCreate") do; [Escaped Output] render(partial => "shared/error_messages", { :object >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/key_infoHelp

+---------------------------------------------------------------------------+
| Output                                                                    |
+---------------------------------------------------------------------------+
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link") |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")       |
+---------------------------------------------------------------------------+

setups/mental_game

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] number_to_word(@number_of_steps)                                                                                                         >>
| [Escaped Output] render(partial => "mental_slider", {})                                                                                                   >>
| [Escaped Output] d.button(:button, "Next", :class => "btn btn-primary btn-xs side_button", :data => spin_when_loading)                                    >>
| [Escaped Output] simple_form_for(@dummy, :url => mental_game_next_setups_path) do; [Escaped Output] d.button(:button, "Next", :class => "btn btn-primary b>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Mental Game", mental_game_path(@mental_game), :class => "side_menu_link")                                                       >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

setups/mental_game.["SetupsController#mental_game"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] number_to_word(6)                                                                                                                        >>
| [Escaped Output] render(partial => "mental_slider", {})                                                                                                   >>
| [Escaped Output] d.button(:button, "Next", :class => "btn btn-primary btn-xs side_button", :data => spin_when_loading)                                    >>
| [Escaped Output] simple_form_for("dummy variable", :url => mental_game_next_setups_path) do; [Escaped Output] d.button(:button, "Next", :class => "btn btn>>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Mental Game", mental_game_path(current_user.mental_game), :class => "side_menu_link")                                           >>
| [Escaped Output] advert_display("side", @advert_hide)                                                                                                     >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_challenges_how_to

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] link_to("required radius", "#required_radius") |
| [Escaped Output] link_to("required radius", "#required_radius") |
| [Escaped Output] link_to("required radius", "#required_radius") |
+-----------------------------------------------------------------+

shared/_challenges_how_to.["Template:setups/focusHelp"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] link_to("required radius", "#required_radius") |
| [Escaped Output] link_to("required radius", "#required_radius") |
| [Escaped Output] link_to("required radius", "#required_radius") |
+-----------------------------------------------------------------+

shared/_challenges_how_to_index

+--------------------------------------------------------------------------------------------+
| Output                                                                                     |
+--------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How to take a Fairway Challenge?", "#fairway_challenge")         |
| [Escaped Output] link_to("How to take an Approach Challenge?", "#approach_challenge")      |
| [Escaped Output] link_to("How to take a 'Near Green' Challenge?", "#near_green_challenge") |
| [Escaped Output] link_to("How to take an 'On Green' Challenge?", "#on_green_challenge")    |
| [Escaped Output] link_to("How do I measure the required radius?", "#required_radius")      |
| [Escaped Output] link_to("These challenges are too easy for me?", "#too_easy")             |
| [Escaped Output] link_to("These challenge is too hard for me?", "#too_hard")               |
+--------------------------------------------------------------------------------------------+

shared/_challenges_how_to_index.["Template:setups/focusHelp"]

+--------------------------------------------------------------------------------------------+
| Output                                                                                     |
+--------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("How to take a Fairway Challenge?", "#fairway_challenge")         |
| [Escaped Output] link_to("How to take an Approach Challenge?", "#approach_challenge")      |
| [Escaped Output] link_to("How to take a 'Near Green' Challenge?", "#near_green_challenge") |
| [Escaped Output] link_to("How to take an 'On Green' Challenge?", "#on_green_challenge")    |
| [Escaped Output] link_to("How do I measure the required radius?", "#required_radius")      |
| [Escaped Output] link_to("These challenges are too easy for me?", "#too_easy")             |
| [Escaped Output] link_to("These challenge is too hard for me?", "#too_hard")               |
+--------------------------------------------------------------------------------------------+

shared/_challenges_text

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] radio_button_tag(:shot, shot, false, :disabled => @user.challenges.finished?(shot)) |
| [Escaped Output] label_tag(:shot, ((("Level " + @next_levels[shot].to_s) + " ") + summary))          |
| [Escaped Output] text_to_describe_challenges(shot).html_safe                                         |
| [Escaped Output] radio_button_tag(:shot, "None", false)                                              |
| [Escaped Output] label_tag(:shot_later, "I will choose one later")                                   |
| [Escaped Output] button_tag("Update", :class => "btn btn-primary", :data => spin_when_loading)       |
+------------------------------------------------------------------------------------------------------+

shared/_challenges_text.["ChallengesController#new", "Template:challenges/new"]

+--------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                             |
+--------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] radio_button_tag(:shot, shot, false, :disabled => current_user.challenges.finished?(shot))        |
| [Escaped Output] label_tag(:shot, ((("Level " + current_user.challenges.next_levels[shot].to_s) + " ") + summary)) |
| [Escaped Output] text_to_describe_challenges(shot).html_safe                                                       |
| [Escaped Output] radio_button_tag(:shot, "None", false)                                                            |
| [Escaped Output] label_tag(:shot_later, "I will choose one later")                                                 |
| [Escaped Output] button_tag("Update", :class => "btn btn-primary", :data => spin_when_loading)                     |
+--------------------------------------------------------------------------------------------------------------------+

shared/_challenges_text.["Template:challenges/new"]

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] radio_button_tag(:shot, shot, false, :disabled => @user.challenges.finished?(shot)) |
| [Escaped Output] label_tag(:shot, ((("Level " + @next_levels[shot].to_s) + " ") + summary))          |
| [Escaped Output] text_to_describe_challenges(shot).html_safe                                         |
| [Escaped Output] radio_button_tag(:shot, "None", false)                                              |
| [Escaped Output] label_tag(:shot_later, "I will choose one later")                                   |
| [Escaped Output] button_tag("Update", :class => "btn btn-primary", :data => spin_when_loading)       |
+------------------------------------------------------------------------------------------------------+

shared/_comment_fields

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] f.label(:name, "Name")                |
| [Escaped Output] f.text_field(:name, :size => 30)      |
| [Escaped Output] f.label(:name, "Email")               |
| [Escaped Output] f.text_field(:email, :size => 30)     |
| [Escaped Output] f.label(:name, "Your Website")        |
| [Escaped Output] f.text_field(:website, :size => 30)   |
| [Escaped Output] f.label(:description, "Your Comment") |
| [Escaped Output] f.text_area(:your_comment)            |
| [Escaped Output] f.hidden_field(:article_id)           |
+--------------------------------------------------------+

shared/_comment_fields.["Template:articles/index"]

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] f.label(:name, "Name")                |
| [Escaped Output] f.text_field(:name, :size => 30)      |
| [Escaped Output] f.label(:name, "Email")               |
| [Escaped Output] f.text_field(:email, :size => 30)     |
| [Escaped Output] f.label(:name, "Your Website")        |
| [Escaped Output] f.text_field(:website, :size => 30)   |
| [Escaped Output] f.label(:description, "Your Comment") |
| [Escaped Output] f.text_area(:your_comment)            |
| [Escaped Output] f.hidden_field(:article_id)           |
+--------------------------------------------------------+

shared/_commit_approach

+----------------------------------------+
| Output                                 |
+----------------------------------------+
| [Escaped Output] @goal.practice_period |
| [Escaped Output] @goal.practice_period |
+----------------------------------------+

shared/_commit_approach.["GoalsController#show", "Template:goals/show", "Template:shared/_goal_text"]

+--------------------------------------------------------------------------------------------------+
| Output                                                                                           |
+--------------------------------------------------------------------------------------------------+
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).practice_period |
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).practice_period |
+--------------------------------------------------------------------------------------------------+

shared/_commit_approach.["GoalsController#update", "Template:goals/show", "Template:shared/_goal_text"]

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] current_user.goals.first.practice_period |
| [Escaped Output] current_user.goals.first.practice_period |
+-----------------------------------------------------------+

shared/_commit_approach.["StudentsController#show_goals", "Template:students/show_goals", "Template:shared/_goal_text"]

+--------------------------------------------------------------------------------------------------------------+
| Output                                                                                                       |
+--------------------------------------------------------------------------------------------------------------+
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.practice_period |
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.practice_period |
+--------------------------------------------------------------------------------------------------------------+

shared/_commit_approach.["Template:goals/show", "Template:shared/_goal_text"]

+----------------------------------------+
| Output                                 |
+----------------------------------------+
| [Escaped Output] @goal.practice_period |
| [Escaped Output] @goal.practice_period |
+----------------------------------------+

shared/_current_challenge

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] ((("Level " + @challenge.level.to_s) + " ") + Challenge.summaries[@challenge.shot]) |
| [Escaped Output] @challenge.description                                                              |
+------------------------------------------------------------------------------------------------------+

shared/_current_challenge.["ChallengesController#show", "Template:challenges/show"]

+----------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] ((("Level " + Challenge.find(params[:id]).level.to_s) + " ") + Challenge.summaries[Challenge.find(params[:id]).shot]) |
| [Escaped Output] Challenge.find(params[:id]).description                                                                               |
+----------------------------------------------------------------------------------------------------------------------------------------+

shared/_current_challenge.["ChallengesController#show_sample", "Template:challenges/show_sample"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] ((("Level " + User.find_by_email("david@example.com").challenges.find_active_one.level.to_s) + " ") + Challenge.summaries[User.find_by_em>>
| [Escaped Output] User.find_by_email("david@example.com").challenges.find_active_one.description                                                           >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_current_challenge.["PagesController#home", "Template:pages/myhome", "Template:pages/_welcome_text"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] ((("Level " + current_user.challenges.find_active_one.level.to_s) + " ") + Challenge.summaries[current_user.challenges.find_active_one.sh>>
| [Escaped Output] current_user.challenges.find_active_one.description                                                                                      >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_current_challenge.["Template:challenges/edit"]

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] ((("Level " + @challenge.level.to_s) + " ") + Challenge.summaries[@challenge.shot]) |
| [Escaped Output] @challenge.description                                                              |
+------------------------------------------------------------------------------------------------------+

shared/_error_messages

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] pluralize(object.errors.count, "error")        |
| [Escaped Output] object.class.to_s.underscore.humanize.downcase |
| [Escaped Output] message                                        |
+-----------------------------------------------------------------+

shared/_error_messages.["Template:announcements/new"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] pluralize(object.errors.count, "error")        |
| [Escaped Output] object.class.to_s.underscore.humanize.downcase |
| [Escaped Output] message                                        |
+-----------------------------------------------------------------+

shared/_feedback_form_signedin

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("contact-us-210.jpg", :alt => "track handicap", :class => "round")                                                             >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Send", :text_waiting => "Sending" }) })                                 >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] text_area_tag(:feedbackComment);[Escaped Output] render(partial => "shared/s>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_feedback_form_signedin.["Template:pages/_welcome_text"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] image_tag("contact-us-210.jpg", :alt => "track handicap", :class => "round")                                                             >>
| [Escaped Output] text_area_tag(:feedbackComment)                                                                                                          >>
| [Escaped Output] render(partial => "shared/submit_tag", { :locals => ({ :text => "Send", :text_waiting => "Sending" }) })                                 >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] text_area_tag(:feedbackComment);[Escaped Output] render(partial => "shared/s>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_feedback_modal

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedback_modal_comment)                                                                                                   >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:", :id => "feedback_modal_email")                                                                       >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary etm15")                                                                                  >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_feedback_modal.["Template:pages/boot_example"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:feedbackComment, "Comment:")                                                                                                  >>
| [Escaped Output] text_area_tag(:feedback_modal_comment)                                                                                                   >>
| [Escaped Output] label_tag(:feedbackEmail, "Email:", :id => "feedback_modal_email")                                                                       >>
| [Escaped Output] text_field_tag(:feedbackEmail, nil, :size => 15)                                                                                         >>
| [Escaped Output] submit_tag("Update", :class => "btn btn-primary etm15")                                                                                  >>
| [Escaped Output] form_tag("/feedback", :method => "get") do; [Escaped Output] label_tag(:feedbackComment, "Comment:");[Escaped Output] text_area_tag(:feed>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_goal_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:goal_score, "Target Score")                                                                                                     >>
| [Escaped Output] f.text_field(:goal_score, :size => 3)                                                                                                    >>
| [Escaped Output] f.label(:goal_date, "Goal Date")                                                                                                         >>
| [Escaped Output] f.date_select(:goal_date)                                                                                                                >>
| [Escaped Output] f.submit("Continue")                                                                                                                     >>
| [Escaped Output] form_for(@goal, :url => practice_path) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_goal_text

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] @goal.referenceScore                            |
| [Escaped Output] (@goal.referenceScore - @goal.goal_score)       |
| [Escaped Output] @goal.goal_date.strftime("%B")                  |
| [Escaped Output] @goal.goal_date.day                             |
| [Escaped Output] @goal.goal_date.year                            |
| [Escaped Output] @goal.practice_period                           |
| [Escaped Output] (@goal.practice_total / 60)                     |
| [Escaped Output] lesson_text(@goal.no_lessons)                   |
| [Escaped Output] pluralize(@goal.game_frequeny, "games")         |
| [Escaped Output] @goal.halfway_reward                            |
| [Escaped Output] @goal.final_reward                              |
| [Escaped Output] render(partial => "shared/commit_approach", {}) |
+------------------------------------------------------------------+

shared/_goal_text.["GoalsController#show", "Template:goals/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).referenceScore                                                           >>
| [Escaped Output] ((current_user.goals.first or Goal.find_by_id(params[:id].to_i)).referenceScore - (current_user.goals.first or Goal.find_by_id(params[:id>>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).goal_date.strftime("%B")                                                 >>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).goal_date.day                                                            >>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).goal_date.year                                                           >>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).practice_period                                                          >>
| [Escaped Output] ((current_user.goals.first or Goal.find_by_id(params[:id].to_i)).practice_total / 60)                                                    >>
| [Escaped Output] lesson_text((current_user.goals.first or Goal.find_by_id(params[:id].to_i)).no_lessons)                                                  >>
| [Escaped Output] pluralize((current_user.goals.first or Goal.find_by_id(params[:id].to_i)).game_frequeny, "games")                                        >>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).halfway_reward                                                           >>
| [Escaped Output] (current_user.goals.first or Goal.find_by_id(params[:id].to_i)).final_reward                                                             >>
| [Escaped Output] render(partial => "shared/commit_approach", {})                                                                                          >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_goal_text.["GoalsController#update", "Template:goals/show"]

+--------------------------------------------------------------------------------------------------+
| Output                                                                                           |
+--------------------------------------------------------------------------------------------------+
| [Escaped Output] current_user.goals.first.referenceScore                                         |
| [Escaped Output] (current_user.goals.first.referenceScore - current_user.goals.first.goal_score) |
| [Escaped Output] current_user.goals.first.goal_date.strftime("%B")                               |
| [Escaped Output] current_user.goals.first.goal_date.day                                          |
| [Escaped Output] current_user.goals.first.goal_date.year                                         |
| [Escaped Output] current_user.goals.first.practice_period                                        |
| [Escaped Output] (current_user.goals.first.practice_total / 60)                                  |
| [Escaped Output] lesson_text(current_user.goals.first.no_lessons)                                |
| [Escaped Output] pluralize(current_user.goals.first.game_frequeny, "games")                      |
| [Escaped Output] current_user.goals.first.halfway_reward                                         |
| [Escaped Output] current_user.goals.first.final_reward                                           |
| [Escaped Output] render(partial => "shared/commit_approach", {})                                 |
+--------------------------------------------------------------------------------------------------+

shared/_goal_text.["StudentsController#show_goals", "Template:students/show_goals"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.referenceScore                                               >>
| [Escaped Output] ((current_user or current_user.students.find_by_id(params[:id])).goals.first.referenceScore - (current_user or current_user.students.find>>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.goal_date.strftime("%B")                                     >>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.goal_date.day                                                >>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.goal_date.year                                               >>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.practice_period                                              >>
| [Escaped Output] ((current_user or current_user.students.find_by_id(params[:id])).goals.first.practice_total / 60)                                        >>
| [Escaped Output] lesson_text((current_user or current_user.students.find_by_id(params[:id])).goals.first.no_lessons)                                      >>
| [Escaped Output] pluralize((current_user or current_user.students.find_by_id(params[:id])).goals.first.game_frequeny, "games")                            >>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.halfway_reward                                               >>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).goals.first.final_reward                                                 >>
| [Escaped Output] render(partial => "shared/commit_approach", {})                                                                                          >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_goal_text.["Template:goals/show"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] @goal.referenceScore                            |
| [Escaped Output] (@goal.referenceScore - @goal.goal_score)       |
| [Escaped Output] @goal.goal_date.strftime("%B")                  |
| [Escaped Output] @goal.goal_date.day                             |
| [Escaped Output] @goal.goal_date.year                            |
| [Escaped Output] @goal.practice_period                           |
| [Escaped Output] (@goal.practice_total / 60)                     |
| [Escaped Output] lesson_text(@goal.no_lessons)                   |
| [Escaped Output] pluralize(@goal.game_frequeny, "games")         |
| [Escaped Output] @goal.halfway_reward                            |
| [Escaped Output] @goal.final_reward                              |
| [Escaped Output] render(partial => "shared/commit_approach", {}) |
+------------------------------------------------------------------+

shared/_infographic

+-------------------------------------------------------------------------------------------------------+
| Output                                                                                                |
+-------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf"), signup_path) |
+-------------------------------------------------------------------------------------------------------+

shared/_infographic.["Template:handicaps/show"]

+-------------------------------------------------------------------------------------------------------+
| Output                                                                                                |
+-------------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to(image_tag("infographic.png", :alt => "How to improve at Golf"), signup_path) |
+-------------------------------------------------------------------------------------------------------+

shared/_new_member_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:name, "Name")                                                                                                                   >>
| [Escaped Output] f.text_field(:name)                                                                                                                      >>
| [Escaped Output] f.label(:email, "Email")                                                                                                                 >>
| [Escaped Output] f.text_field(:email)                                                                                                                     >>
| [Escaped Output] f.label(:password)                                                                                                                       >>
| [Escaped Output] f.password_field(:password)                                                                                                              >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] f.submit("Join Now", :id => "sign-up")                                                                                                   >>
| [Escaped Output] form_for(@user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] f.label(:name, >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_new_member_form.["LandingsController#handicap_tracker", "Template:landings/handicap_tracker"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:name, "Name")                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email, "Email")                                                                                                   >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :id => "sign-up")                                                                                     >>
| [Escaped Output] form_for(User.new) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Output>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_new_member_form.["Template:landings/handicap_tracker"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] FormBuilder.new.label(:name, "Name")                                                                                                     >>
| [Escaped Output] FormBuilder.new.text_field(:name)                                                                                                        >>
| [Escaped Output] FormBuilder.new.label(:email, "Email")                                                                                                   >>
| [Escaped Output] FormBuilder.new.text_field(:email)                                                                                                       >>
| [Escaped Output] FormBuilder.new.label(:password)                                                                                                         >>
| [Escaped Output] FormBuilder.new.password_field(:password)                                                                                                >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join Now", :id => "sign-up")                                                                                     >>
| [Escaped Output] form_for(@user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Output] F>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_newsletter_form

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag("Email: ")                                                                                                                     >>
| [Escaped Output] email_field_tag(:email, nil, :size => 20, :placeholder => "jack@example.com")                                                            >>
| [Escaped Output] button_tag("Subscribe", :class => "btn btn-cta btn-cta-primary etm15")                                                                   >>
| [Escaped Output] form_tag(:controller => "subscribers", :action => "create", :method => "put") do; [Escaped Output] label_tag("Email: ");[Escaped Output] >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_newsletter_form.["Template:landings/driving_accuracy"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag("Email: ")                                                                                                                     >>
| [Escaped Output] email_field_tag(:email, nil, :size => 20, :placeholder => "jack@example.com")                                                            >>
| [Escaped Output] button_tag("Subscribe", :class => "btn btn-cta btn-cta-primary etm15")                                                                   >>
| [Escaped Output] form_tag(:controller => "subscribers", :action => "create", :method => "put") do; [Escaped Output] label_tag("Email: ");[Escaped Output] >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_plans_text

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] @plan.end_date.strftime("%B")                     |
| [Escaped Output] @plan.end_date.day                                |
| [Escaped Output] @plan.end_date.year                               |
| [Escaped Output] @plan.major_focus                                 |
| [Escaped Output] secondary_focus_text(@plan.secondary_focus)       |
| [Escaped Output] pluralize((@plan.duration_practice / 60), "hour") |
| [Escaped Output] lesson_text(@plan.no_lessons)                     |
| [Escaped Output] @plan.practice_comments                           |
| [Escaped Output] pluralize(@plan.no_games, "game")                 |
| [Escaped Output] @plan.game_comments                               |
+--------------------------------------------------------------------+

shared/_plans_text.["PlansController#create", "Template:plans/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] secondary_focus_text(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]>>
| [Escaped Output] pluralize((((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or cur>>
| [Escaped Output] lesson_text(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or cu>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] pluralize(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curr>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_plans_text.["PlansController#show", "Template:plans/show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] secondary_focus_text(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]>>
| [Escaped Output] pluralize((((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or cur>>
| [Escaped Output] lesson_text(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or cu>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
| [Escaped Output] pluralize(((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or curr>>
| [Escaped Output] ((Plan.find_by_id(params[:id]).user or (User.find_by_id(params[:user_id]) or User.find_by_id(params[:plan][:user_id]))) or current_user).>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/_plans_text.["StudentsController#myhome", "Template:students/myhome"]

+---------------------------------------------------------------------------------------+
| Output                                                                                |
+---------------------------------------------------------------------------------------+
| [Escaped Output] current_user.plans.first.end_date.strftime("%B")                     |
| [Escaped Output] current_user.plans.first.end_date.day                                |
| [Escaped Output] current_user.plans.first.end_date.year                               |
| [Escaped Output] current_user.plans.first.major_focus                                 |
| [Escaped Output] secondary_focus_text(current_user.plans.first.secondary_focus)       |
| [Escaped Output] pluralize((current_user.plans.first.duration_practice / 60), "hour") |
| [Escaped Output] lesson_text(current_user.plans.first.no_lessons)                     |
| [Escaped Output] current_user.plans.first.practice_comments                           |
| [Escaped Output] pluralize(current_user.plans.first.no_games, "game")                 |
| [Escaped Output] current_user.plans.first.game_comments                               |
+---------------------------------------------------------------------------------------+

shared/_plans_text.["Template:plans/show"]

+--------------------------------------------------------------------+
| Output                                                             |
+--------------------------------------------------------------------+
| [Escaped Output] @plan.end_date.strftime("%B")                     |
| [Escaped Output] @plan.end_date.day                                |
| [Escaped Output] @plan.end_date.year                               |
| [Escaped Output] @plan.major_focus                                 |
| [Escaped Output] secondary_focus_text(@plan.secondary_focus)       |
| [Escaped Output] pluralize((@plan.duration_practice / 60), "hour") |
| [Escaped Output] lesson_text(@plan.no_lessons)                     |
| [Escaped Output] @plan.practice_comments                           |
| [Escaped Output] pluralize(@plan.no_games, "game")                 |
| [Escaped Output] @plan.game_comments                               |
+--------------------------------------------------------------------+

shared/_privacy_fields

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] check_box(:profile, :show_goals, :checked => true)                       |
| [Escaped Output] check_box(:profile, :show_goals, :checked => false)                      |
| [Escaped Output] label(:show_goals, "Please allow others to see my goals")                |
| [Escaped Output] check_box(:profile, :show_name, :checked => true)                        |
| [Escaped Output] check_box(:profile, :show_name, :checked => false)                       |
| [Escaped Output] label(:show_name, "Please allow others to see my name on my goals page") |
+-------------------------------------------------------------------------------------------+

shared/_privacy_fields.["ProfilesController#privacy_preferences", "Template:profiles/privacy_preferences"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] check_box(:profile, :show_goals, :checked => true)                       |
| [Escaped Output] check_box(:profile, :show_goals, :checked => false)                      |
| [Escaped Output] label(:show_goals, "Please allow others to see my goals")                |
| [Escaped Output] check_box(:profile, :show_name, :checked => true)                        |
| [Escaped Output] check_box(:profile, :show_name, :checked => false)                       |
| [Escaped Output] label(:show_name, "Please allow others to see my name on my goals page") |
+-------------------------------------------------------------------------------------------+

shared/_privacy_fields.["Template:profiles/privacy_preferences"]

+-------------------------------------------------------------------------------------------+
| Output                                                                                    |
+-------------------------------------------------------------------------------------------+
| [Escaped Output] check_box(:profile, :show_goals, :checked => true)                       |
| [Escaped Output] check_box(:profile, :show_goals, :checked => false)                      |
| [Escaped Output] label(:show_goals, "Please allow others to see my goals")                |
| [Escaped Output] check_box(:profile, :show_name, :checked => true)                        |
| [Escaped Output] check_box(:profile, :show_name, :checked => false)                       |
| [Escaped Output] label(:show_name, "Please allow others to see my name on my goals page") |
+-------------------------------------------------------------------------------------------+

shared/_pro_user_info

+----------------------------------------------------------+
| Output                                                   |
+----------------------------------------------------------+
| [Escaped Output] gravatar_for(current_user, :size => 30) |
| [Escaped Output] current_user.name                       |
+----------------------------------------------------------+

shared/_pro_user_info.["Template:layouts/application"]

+----------------------------------------------------------+
| Output                                                   |
+----------------------------------------------------------+
| [Escaped Output] gravatar_for(current_user, :size => 30) |
| [Escaped Output] current_user.name                       |
+----------------------------------------------------------+

shared/_professional_form

+-------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                              |
+-------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(@professional.errors.count, "error")                                                                     |
| [Escaped Output] msg                                                                                                                |
| [Escaped Output] f.label(:first_name)                                                                                               |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => disabled)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                              |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => disabled)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                            |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => disabled) |
| [Escaped Output] f.label(:place)                                                                                                    |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => disabled)                  |
| [Escaped Output] f.label(:place_type)                                                                                               |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => disabled)                                       |
| [Escaped Output] f.label(:public_email)                                                                                             |
| [Escaped Output] f.text_field(:public_email, :disabled => disabled)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                                |
| [Escaped Output] f.text_field(:telephone, :disabled => disabled)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                               |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => disabled)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                     |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => disabled)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                     |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => disabled)                                            |
| [Escaped Output] f.label(:city)                                                                                                     |
| [Escaped Output] f.text_field(:city, :disabled => disabled)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                    |
| [Escaped Output] f.text_field(:state, :disabled => disabled)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                                 |
| [Escaped Output] f.text_field(:zip_code, :disabled => disabled)                                                                     |
| [Escaped Output] f.label(:country)                                                                                                  |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                                |
| [Escaped Output] f.label(:web_address)                                                                                              |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => disabled)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                    |
+-------------------------------------------------------------------------------------------------------------------------------------+

shared/_professional_form.["OldAdmin::ProfessionalsController#create", "Template:old_admin/professionals/new"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(Professional.new(params[:professional]).errors.count, "error")                                        |
| [Escaped Output] msg                                                                                                             |
| [Escaped Output] f.label(:first_name)                                                                                            |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                           |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                         |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => false) |
| [Escaped Output] f.label(:place)                                                                                                 |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => false)                  |
| [Escaped Output] f.label(:place_type)                                                                                            |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => false)                                       |
| [Escaped Output] f.label(:public_email)                                                                                          |
| [Escaped Output] f.text_field(:public_email, :disabled => false)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                             |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                            |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => false)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                  |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                  |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:city)                                                                                                  |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                 |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                              |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                                     |
| [Escaped Output] f.label(:country)                                                                                               |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                             |
| [Escaped Output] f.label(:web_address)                                                                                           |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => false)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+

shared/_professional_form.["OldAdmin::ProfessionalsController#new", "Template:old_admin/professionals/new"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(Professional.new.errors.count, "error")                                                               |
| [Escaped Output] msg                                                                                                             |
| [Escaped Output] f.label(:first_name)                                                                                            |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                           |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                         |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => false) |
| [Escaped Output] f.label(:place)                                                                                                 |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => false)                  |
| [Escaped Output] f.label(:place_type)                                                                                            |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => false)                                       |
| [Escaped Output] f.label(:public_email)                                                                                          |
| [Escaped Output] f.text_field(:public_email, :disabled => false)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                             |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                            |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => false)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                  |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                  |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:city)                                                                                                  |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                 |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                              |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                                     |
| [Escaped Output] f.label(:country)                                                                                               |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                             |
| [Escaped Output] f.label(:web_address)                                                                                           |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => false)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+

shared/_professional_form.["OldAdmin::ProfessionalsController#show", "Template:old_admin/professionals/show"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(Professional.find(params[:id]).errors.count, "error")                                                 |
| [Escaped Output] (Unresolved Model).new                                                                                          |
| [Escaped Output] f.label(:first_name)                                                                                            |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                           |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                         |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => false) |
| [Escaped Output] f.label(:place)                                                                                                 |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => false)                  |
| [Escaped Output] f.label(:place_type)                                                                                            |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => false)                                       |
| [Escaped Output] f.label(:public_email)                                                                                          |
| [Escaped Output] f.text_field(:public_email, :disabled => false)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                             |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                            |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => false)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                  |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                  |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:city)                                                                                                  |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                 |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                              |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                                     |
| [Escaped Output] f.label(:country)                                                                                               |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                             |
| [Escaped Output] f.label(:web_address)                                                                                           |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => false)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+

shared/_professional_form.["ProfessionalsController#show_for_student", "Template:professionals/show_for_student"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(current_user.pro_user.professional.errors.count, "error")                                             |
| [Escaped Output] msg                                                                                                             |
| [Escaped Output] f.label(:first_name)                                                                                            |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                           |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                         |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => false) |
| [Escaped Output] f.label(:place)                                                                                                 |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => false)                  |
| [Escaped Output] f.label(:place_type)                                                                                            |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => false)                                       |
| [Escaped Output] f.label(:public_email)                                                                                          |
| [Escaped Output] f.text_field(:public_email, :disabled => false)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                             |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                            |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => false)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                  |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                  |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:city)                                                                                                  |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                 |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                              |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                                     |
| [Escaped Output] f.label(:country)                                                                                               |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                             |
| [Escaped Output] f.label(:web_address)                                                                                           |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => false)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+

shared/_professional_form.["Template:old_admin/professionals/edit"]

+----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                           |
+----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] pluralize(@professional.errors.count, "error")                                                                  |
| [Escaped Output] msg                                                                                                             |
| [Escaped Output] f.label(:first_name)                                                                                            |
| [Escaped Output] f.text_field(:first_name, :size => 30, :disabled => false)                                                      |
| [Escaped Output] f.label(:family_name)                                                                                           |
| [Escaped Output] f.text_field(:family_name, :size => 30, :disabled => false)                                                     |
| [Escaped Output] f.label(:qualification)                                                                                         |
| [Escaped Output] f.text_field(:qualification, :size => 40, :placeholder => "Your qualification, e.g. USPGA", :disabled => false) |
| [Escaped Output] f.label(:place)                                                                                                 |
| [Escaped Output] f.text_field(:place, :size => 40, :placeholder => "Place where you teach", :disabled => false)                  |
| [Escaped Output] f.label(:place_type)                                                                                            |
| [Escaped Output] f.select(:place_type, ["Club", "Range", "Other"], {}, :disabled => false)                                       |
| [Escaped Output] f.label(:public_email)                                                                                          |
| [Escaped Output] f.text_field(:public_email, :disabled => false)                                                                 |
| [Escaped Output] f.label(:telephone)                                                                                             |
| [Escaped Output] f.text_field(:telephone, :disabled => false)                                                                    |
| [Escaped Output] f.label(:commission)                                                                                            |
| [Escaped Output] f.number_field(:commission, :max => 50, :min => 0, :disabled => false)                                          |
| [Escaped Output] f.label(:street_information_1)                                                                                  |
| [Escaped Output] f.text_field(:street_information_1, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:street_information_2)                                                                                  |
| [Escaped Output] f.text_field(:street_information_2, :size => 40, :disabled => false)                                            |
| [Escaped Output] f.label(:city)                                                                                                  |
| [Escaped Output] f.text_field(:city, :disabled => false)                                                                         |
| [Escaped Output] f.label(:state)                                                                                                 |
| [Escaped Output] f.text_field(:state, :disabled => false)                                                                        |
| [Escaped Output] f.label(:zip_code)                                                                                              |
| [Escaped Output] f.text_field(:zip_code, :disabled => false)                                                                     |
| [Escaped Output] f.label(:country)                                                                                               |
| [Escaped Output] f.country_select(:country, :priority_countries => (["AU", "US", "GB", "CA", "ZA"]))                             |
| [Escaped Output] f.label(:web_address)                                                                                           |
| [Escaped Output] f.text_field(:web_address, :placeholder => "Personal website", :size => 40, :disabled => false)                 |
| [Escaped Output] f.submit("Update", :class => "btn btn-primary")                                                                 |
+----------------------------------------------------------------------------------------------------------------------------------+

shared/_reasons_why

+--------------------------------------------------------------------------+
| Output                                                                   |
+--------------------------------------------------------------------------+
| [Escaped Output] FreePeriod                                              |
| [Escaped Output] link_to("Join Now", signup_path(:referral => referral)) |
+--------------------------------------------------------------------------+

shared/_reasons_why.["Template:handicaps/show"]

+--------------------------------------------------------------------------+
| Output                                                                   |
+--------------------------------------------------------------------------+
| [Escaped Output] 10                                                      |
| [Escaped Output] link_to("Join Now", signup_path(:referral => referral)) |
+--------------------------------------------------------------------------+

shared/_report_overall

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] h3_mailer("Amount of Effort").html_safe                       |
| [Escaped Output] star_rating(@results_overall[:iTry])                          |
| [Escaped Output] pluralize(@results_overall[:targetDuration].round(1), "hour") |
| [Escaped Output] pluralize(@results_overall[:actualDuration].round(1), "hour") |
| [Escaped Output] h3_mailer("Improvement in Handicap").html_safe                |
| [Escaped Output] pluralize(@results_overall[:provNumberOfGames], "game")       |
| [Escaped Output] ProvisionalLimit                                              |
| [Escaped Output] star_rating(@results_overall[:iProgress])                     |
| [Escaped Output] @goal.referenceScore                                          |
| [Escaped Output] @goal.goal_score                                              |
| [Escaped Output] @results_overall[:currentHandicap]                            |
| [Escaped Output] @results_overall[:bestScore].round                            |
| [Escaped Output] @goal.final_reward                                            |
| [Escaped Output] @goal.halfway_reward                                          |
+--------------------------------------------------------------------------------+

shared/_report_overall.["ReportsController#report_overall", "Template:reports/report_overall"]

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] h3_mailer("Amount of Effort").html_safe                                               |
| [Escaped Output] star_rating(Analysis.new.against_goals(current_user)[:iTry])                          |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:targetDuration].round(1), "hour") |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:actualDuration].round(1), "hour") |
| [Escaped Output] h3_mailer("Improvement in Handicap").html_safe                                        |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:provNumberOfGames], "game")       |
| [Escaped Output] 3                                                                                     |
| [Escaped Output] star_rating(Analysis.new.against_goals(current_user)[:iProgress])                     |
| [Escaped Output] current_user.goals.first.referenceScore                                               |
| [Escaped Output] current_user.goals.first.goal_score                                                   |
| [Escaped Output] Analysis.new.against_goals(current_user)[:currentHandicap]                            |
| [Escaped Output] Analysis.new.against_goals(current_user)[:bestScore].round                            |
| [Escaped Output] current_user.goals.first.final_reward                                                 |
| [Escaped Output] current_user.goals.first.halfway_reward                                               |
+--------------------------------------------------------------------------------------------------------+

shared/_report_overall.["ReportsController#report_overall_sample", "Template:reports/report_overall_sample"]

+-----------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                            |
+-----------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h3_mailer("Amount of Effort").html_safe                                                                          |
| [Escaped Output] star_rating(Analysis.new.against_goals(User.find_by_email("david@example.com"))[:iTry])                          |
| [Escaped Output] pluralize(Analysis.new.against_goals(User.find_by_email("david@example.com"))[:targetDuration].round(1), "hour") |
| [Escaped Output] pluralize(Analysis.new.against_goals(User.find_by_email("david@example.com"))[:actualDuration].round(1), "hour") |
| [Escaped Output] h3_mailer("Improvement in Handicap").html_safe                                                                   |
| [Escaped Output] pluralize(Analysis.new.against_goals(User.find_by_email("david@example.com"))[:provNumberOfGames], "game")       |
| [Escaped Output] 3                                                                                                                |
| [Escaped Output] star_rating(Analysis.new.against_goals(User.find_by_email("david@example.com"))[:iProgress])                     |
| [Escaped Output] User.find_by_email("david@example.com").goals.first.referenceScore                                               |
| [Escaped Output] User.find_by_email("david@example.com").goals.first.goal_score                                                   |
| [Escaped Output] Analysis.new.against_goals(User.find_by_email("david@example.com"))[:currentHandicap]                            |
| [Escaped Output] Analysis.new.against_goals(User.find_by_email("david@example.com"))[:bestScore].round                            |
| [Escaped Output] User.find_by_email("david@example.com").goals.first.final_reward                                                 |
| [Escaped Output] User.find_by_email("david@example.com").goals.first.halfway_reward                                               |
+-----------------------------------------------------------------------------------------------------------------------------------+

shared/_report_overall.["StudentsController#myhome", "Template:students/myhome"]

+--------------------------------------------------------------------------------------------------------+
| Output                                                                                                 |
+--------------------------------------------------------------------------------------------------------+
| [Escaped Output] h3_mailer("Amount of Effort").html_safe                                               |
| [Escaped Output] star_rating(Analysis.new.against_goals(current_user)[:iTry])                          |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:targetDuration].round(1), "hour") |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:actualDuration].round(1), "hour") |
| [Escaped Output] h3_mailer("Improvement in Handicap").html_safe                                        |
| [Escaped Output] pluralize(Analysis.new.against_goals(current_user)[:provNumberOfGames], "game")       |
| [Escaped Output] 3                                                                                     |
| [Escaped Output] star_rating(Analysis.new.against_goals(current_user)[:iProgress])                     |
| [Escaped Output] current_user.goal.referenceScore                                                      |
| [Escaped Output] current_user.goal.goal_score                                                          |
| [Escaped Output] Analysis.new.against_goals(current_user)[:currentHandicap]                            |
| [Escaped Output] Analysis.new.against_goals(current_user)[:bestScore].round                            |
| [Escaped Output] current_user.goal.final_reward                                                        |
| [Escaped Output] current_user.goal.halfway_reward                                                      |
+--------------------------------------------------------------------------------------------------------+

shared/_report_overall.["Template:profile_mailer/_weekly_report"]

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] h3_mailer("Amount of Effort").html_safe                       |
| [Escaped Output] star_rating(@results_overall[:iTry])                          |
| [Escaped Output] pluralize(@results_overall[:targetDuration].round(1), "hour") |
| [Escaped Output] pluralize(@results_overall[:actualDuration].round(1), "hour") |
| [Escaped Output] h3_mailer("Improvement in Handicap").html_safe                |
| [Escaped Output] pluralize(@results_overall[:provNumberOfGames], "game")       |
| [Escaped Output] 3                                                             |
| [Escaped Output] star_rating(@results_overall[:iProgress])                     |
| [Escaped Output] @goal.referenceScore                                          |
| [Escaped Output] @goal.goal_score                                              |
| [Escaped Output] @results_overall[:currentHandicap]                            |
| [Escaped Output] @results_overall[:bestScore].round                            |
| [Escaped Output] @goal.final_reward                                            |
| [Escaped Output] @goal.halfway_reward                                          |
+--------------------------------------------------------------------------------+

shared/_simple_submit_button

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.button(:button, text.html_safe, :class => "btn btn-primary", :name => "commit", :data => spin_when_loading) |
+--------------------------------------------------------------------------------------------------------------------------------+

shared/_simple_submit_button.["Ios::SessionsController#new", "Template:ios/sessions/new", "Template:sessions/_fields"]

+------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.button(:button, "Update".html_safe, :class => "btn btn-primary", :name => "commit", :data => spin_when_loading) |
+------------------------------------------------------------------------------------------------------------------------------------+

shared/_simple_submit_button.["ProfilesController#email_preferences", "Template:profiles/email_preferences"]

+--------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                           |
+--------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] FormBuilder.new.button(:button, "Update".html_safe, :class => "btn btn-primary", :name => "commit", :data => spin_when_loading) |
+--------------------------------------------------------------------------------------------------------------------------------------------------+

shared/_simple_submit_button.["Template:eclubs/_form"]

+------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.button(:button, "Update".html_safe, :class => "btn btn-primary", :name => "commit", :data => spin_when_loading) |
+------------------------------------------------------------------------------------------------------------------------------------+

shared/_submit_button

+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.button(text.html_safe, :type => :submit, :class => "btn btn-primary", :id => button_id, :name => "commit", :data => spin_when_loading) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+

shared/_submit_button.["Template:profiles/email_preferences"]

+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                  |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.button("Update".html_safe, :type => :submit, :class => "btn btn-primary", :id => nil, :name => "commit", :data => spin_when_loading) |
+---------------------------------------------------------------------------------------------------------------------------------------------------------+

shared/_submit_tag

+------------------------------------------------------------------------------------------------------+
| Output                                                                                               |
+------------------------------------------------------------------------------------------------------+
| [Escaped Output] button_tag(text.html_safe, :class => "btn btn-primary", :data => spin_when_loading) |
+------------------------------------------------------------------------------------------------------+

shared/_submit_tag.["Template:pages/_feedback_form_ios_visitor"]

+----------------------------------------------------------------------------------------------------------+
| Output                                                                                                   |
+----------------------------------------------------------------------------------------------------------+
| [Escaped Output] button_tag("Update".html_safe, :class => "btn btn-primary", :data => spin_when_loading) |
+----------------------------------------------------------------------------------------------------------+

shared/_top_tips

+----------------------------------------------------------------------+
| Output                                                               |
+----------------------------------------------------------------------+
| [Escaped Output] link_to("Full Swing Tips", fullswing_path)          |
| [Escaped Output] link_to("Pitching Tips", pitching_path)             |
| [Escaped Output] link_to("Chipping Tips", golf_chipping_tips_path)   |
| [Escaped Output] link_to("Putting Tips", putting_path)               |
| [Escaped Output] link_to("Bunker Play Tips", bunkers_path)           |
| [Escaped Output] link_to("Mental Game Tips", mentalgame_path)        |
| [Escaped Output] link_to("Diagnosis Tips", identifyWeaknesses_path)  |
| [Escaped Output] link_to("Enjoy Golf Tips", enjoying_path)           |
| [Escaped Output] link_to("Training Aids Tips", trainingaids_path)    |
| [Escaped Output] link_to("Exercises Tips", exercises_path)           |
| [Escaped Output] link_to("Golf Club Distances", club_distances_path) |
+----------------------------------------------------------------------+

shared/_top_tips.["Template:articles/index", "Template:shared/sidebars/_standard", "Template:shared/sidebars/_top_tips"]

+----------------------------------------------------------------------+
| Output                                                               |
+----------------------------------------------------------------------+
| [Escaped Output] link_to("Full Swing Tips", fullswing_path)          |
| [Escaped Output] link_to("Pitching Tips", pitching_path)             |
| [Escaped Output] link_to("Chipping Tips", golf_chipping_tips_path)   |
| [Escaped Output] link_to("Putting Tips", putting_path)               |
| [Escaped Output] link_to("Bunker Play Tips", bunkers_path)           |
| [Escaped Output] link_to("Mental Game Tips", mentalgame_path)        |
| [Escaped Output] link_to("Diagnosis Tips", identifyWeaknesses_path)  |
| [Escaped Output] link_to("Enjoy Golf Tips", enjoying_path)           |
| [Escaped Output] link_to("Training Aids Tips", trainingaids_path)    |
| [Escaped Output] link_to("Exercises Tips", exercises_path)           |
| [Escaped Output] link_to("Golf Club Distances", club_distances_path) |
+----------------------------------------------------------------------+

shared/_user_info

+-----------------------------------------------------+
| Output                                              |
+-----------------------------------------------------+
| [Escaped Output] gravatar_for(user, :size => 30)    |
| [Escaped Output] user.name                          |
| [Escaped Output] show_if_life_member(user)          |
| [Escaped Output] show_current_handicap(user)        |
| [Escaped Output] show_challenges_info(user)         |
| [Escaped Output] mental_game_level_descriptor(user) |
+-----------------------------------------------------+

shared/_user_info.["Template:layouts/application"]

+-------------------------------------------------------------+
| Output                                                      |
+-------------------------------------------------------------+
| [Escaped Output] gravatar_for(current_user, :size => 30)    |
| [Escaped Output] current_user.name                          |
| [Escaped Output] show_if_life_member(current_user)          |
| [Escaped Output] show_current_handicap(current_user)        |
| [Escaped Output] show_challenges_info(current_user)         |
| [Escaped Output] mental_game_level_descriptor(current_user) |
+-------------------------------------------------------------+

shared/_users_stats

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] User.count                                     |
| [Escaped Output] Subscriber.count                               |
| [Escaped Output] (Subscriber.count + User.count)                |
| [Escaped Output] DormantUser.count                              |
| [Escaped Output] Student.count                                  |
| [Escaped Output] ProUser.count                                  |
| [Escaped Output] User.players.count                             |
| [Escaped Output] "style='width: 65%; font-size: 8px'".html_safe |
| [Escaped Output] @results[:two_months_name]                     |
| [Escaped Output] @results[:last_month_name]                     |
| [Escaped Output] @results[:this_month_name]                     |
| [Escaped Output] k.capitalize                                   |
| [Escaped Output] h(@results[:all_time][k])                      |
| [Escaped Output] h(@results[:two_months][k])                    |
| [Escaped Output] h(@results[:last_month][k])                    |
| [Escaped Output] h(@results[:this_month][k])                    |
| [Escaped Output] h(@results[:past_week][k])                     |
+-----------------------------------------------------------------+

shared/_users_stats.["OldAdmin::UsersController#stats", "Template:old_admin/users/stats"]

+------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                       |
+------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] User.count                                                                                                  |
| [Escaped Output] Subscriber.count                                                                                            |
| [Escaped Output] (Subscriber.count + User.count)                                                                             |
| [Escaped Output] DormantUser.count                                                                                           |
| [Escaped Output] Student.count                                                                                               |
| [Escaped Output] ProUser.count                                                                                               |
| [Escaped Output] User.players.count                                                                                          |
| [Escaped Output] "style='width: 65%; font-size: 8px'".html_safe                                                              |
| [Escaped Output] (Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:two_months_name]  |
| [Escaped Output] (Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:last_month_name]  |
| [Escaped Output] (Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:this_month_name]  |
| [Escaped Output] k.capitalize                                                                                                |
| [Escaped Output] h((Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:all_time][k])   |
| [Escaped Output] h((Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:two_months][k]) |
| [Escaped Output] h((Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:last_month][k]) |
| [Escaped Output] h((Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:this_month][k]) |
| [Escaped Output] h((Analysis.new.monthly_overview(:all_time_calc => true) or Analysis.new.monthly_overview)[:past_week][k])  |
+------------------------------------------------------------------------------------------------------------------------------+

shared/_users_stats.["Template:old_admin/users/stats"]

+-----------------------------------------------------------------+
| Output                                                          |
+-----------------------------------------------------------------+
| [Escaped Output] User.count                                     |
| [Escaped Output] Subscriber.count                               |
| [Escaped Output] (Subscriber.count + User.count)                |
| [Escaped Output] DormantUser.count                              |
| [Escaped Output] Student.count                                  |
| [Escaped Output] ProUser.count                                  |
| [Escaped Output] User.players.count                             |
| [Escaped Output] "style='width: 65%; font-size: 8px'".html_safe |
| [Escaped Output] @results[:two_months_name]                     |
| [Escaped Output] @results[:last_month_name]                     |
| [Escaped Output] @results[:this_month_name]                     |
| [Escaped Output] k.capitalize                                   |
| [Escaped Output] h(@results[:all_time][k])                      |
| [Escaped Output] h(@results[:two_months][k])                    |
| [Escaped Output] h(@results[:last_month][k])                    |
| [Escaped Output] h(@results[:this_month][k])                    |
| [Escaped Output] h(@results[:past_week][k])                     |
+-----------------------------------------------------------------+

shared/js/_disable_transitions_if_test

+----------------------------------------------------+
| Output                                             |
+----------------------------------------------------+
| [Escaped Output] javascript_tag do; [ignored]; end |
+----------------------------------------------------+

shared/sidebars/_beginners

+------------------------------------------------------+
| Output                                               |
+------------------------------------------------------+
| [Escaped Output] beginner_golf_path                  |
| [Escaped Output] link_to("this", beginner_golf_path) |
+------------------------------------------------------+

shared/sidebars/_beginners.["Template:pages/home"]

+------------------------------------------------------+
| Output                                               |
+------------------------------------------------------+
| [Escaped Output] beginner_golf_path                  |
| [Escaped Output] link_to("this", beginner_golf_path) |
+------------------------------------------------------+

shared/sidebars/_learn_golf

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] learn_golf_landings_path                                                                        |
| [Escaped Output] button_to("Click Here!", learn_golf_landings_path, :method => :get, :id => "learn_golf_button") |
+------------------------------------------------------------------------------------------------------------------+

shared/sidebars/_learn_golf.["Template:articles/index", "Template:shared/sidebars/_standard"]

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] learn_golf_landings_path                                                                        |
| [Escaped Output] button_to("Click Here!", learn_golf_landings_path, :method => :get, :id => "learn_golf_button") |
+------------------------------------------------------------------------------------------------------------------+

shared/sidebars/_newsletter

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] root_path                                                                                                                                >>
| [Escaped Output] label_tag("Email: ")                                                                                                                     >>
| [Escaped Output] email_field_tag(:email, nil, :size => 20, :placeholder => "jack@example.com")                                                            >>
| [Escaped Output] button_tag("Subscribe!", :id => "newsletter")                                                                                            >>
| [Escaped Output] form_tag(:controller => "subscribers", :action => "create", :method => "put") do; [Escaped Output] label_tag("Email: ");[Escaped Output] >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_newsletter.["Template:articles/index", "Template:shared/sidebars/_standard"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] root_path                                                                                                                                >>
| [Escaped Output] label_tag("Email: ")                                                                                                                     >>
| [Escaped Output] email_field_tag(:email, nil, :size => 20, :placeholder => "jack@example.com")                                                            >>
| [Escaped Output] button_tag("Subscribe!", :id => "newsletter")                                                                                            >>
| [Escaped Output] form_tag(:controller => "subscribers", :action => "create", :method => "put") do; [Escaped Output] label_tag("Email: ");[Escaped Output] >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_promos

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] advert_display(:side, @advert_hide)       |
| [Escaped Output] consistent_golf_display(:side, @show_gif) |
| [Escaped Output] booking_display(:side, @advert_hide)      |
+------------------------------------------------------------+

shared/sidebars/_promos.["Template:articles/index", "Template:shared/sidebars/_standard"]

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] advert_display(:side, @advert_hide)       |
| [Escaped Output] consistent_golf_display(:side, @show_gif) |
| [Escaped Output] booking_display(:side, @advert_hide)      |
+------------------------------------------------------------+

shared/sidebars/_snappy_golf

+----------------------------------------------------------------------+
| Output                                                               |
+----------------------------------------------------------------------+
| [Escaped Output] snappy_golf_path                                    |
| [Escaped Output] link_to(raw("SnappyGolf&trade;"), snappy_golf_path) |
+----------------------------------------------------------------------+

shared/sidebars/_snappy_golf.["Template:pages/home"]

+----------------------------------------------------------------------+
| Output                                                               |
+----------------------------------------------------------------------+
| [Escaped Output] snappy_golf_path                                    |
| [Escaped Output] link_to(raw("SnappyGolf&trade;"), snappy_golf_path) |
+----------------------------------------------------------------------+

shared/sidebars/_standard

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/learn_golf", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/learn_golf", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard.["Template:articles/index"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/learn_golf", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/learn_golf", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_core

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/top_tips", {});[Escaped Output] render(partial => "shared/>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_core.["Template:handicaps/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/top_tips", {});[Escaped Output] render(partial => "shared/>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_core_ad

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/top_tips", {});[Escaped Output] render(partial => "shared/>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_core_ad.["Template:clubs/club_distances"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/top_tips", {});[Escaped Output] render(partial => "shared/>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_newsletter

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => sidebar })                                                                     >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_standard_newsletter.["Template:landings/videos"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/sidebars/newsletter", {})                                                                                      >>
| [Escaped Output] render(partial => "shared/sidebars/top_tips", {})                                                                                        >>
| [Escaped Output] render(partial => "shared/sidebars/videos", {})                                                                                          >>
| [Escaped Output] render(partial => "shared/sidebars/promos", { :sidebar => nil })                                                                         >>
| [Escaped Output] content_for(:side_bar) do; [Escaped Output] render(partial => "shared/sidebars/newsletter", {});[Escaped Output] render(partial => "share>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

shared/sidebars/_teachers

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] teacher_path                  |
| [Escaped Output] link_to("this", teacher_path) |
+------------------------------------------------+

shared/sidebars/_teachers.["Template:pages/home"]

+------------------------------------------------+
| Output                                         |
+------------------------------------------------+
| [Escaped Output] teacher_path                  |
| [Escaped Output] link_to("this", teacher_path) |
+------------------------------------------------+

shared/sidebars/_top_tips

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] reviews_path                             |
| [Escaped Output] render(partial => "shared/top_tips", {}) |
+-----------------------------------------------------------+

shared/sidebars/_top_tips.["Template:articles/index", "Template:shared/sidebars/_standard"]

+-----------------------------------------------------------+
| Output                                                    |
+-----------------------------------------------------------+
| [Escaped Output] reviews_path                             |
| [Escaped Output] render(partial => "shared/top_tips", {}) |
+-----------------------------------------------------------+

shared/sidebars/_videos

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] videos_landings_path                  |
| [Escaped Output] link_to("here", videos_landings_path) |
+--------------------------------------------------------+

shared/sidebars/_videos.["Template:articles/index", "Template:shared/sidebars/_standard"]

+--------------------------------------------------------+
| Output                                                 |
+--------------------------------------------------------+
| [Escaped Output] videos_landings_path                  |
| [Escaped Output] link_to("here", videos_landings_path) |
+--------------------------------------------------------+

students/_drills_retractable

+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] drill.name                                                                                                                               |
| [Escaped Output] datePretty(drill.created_at)                                                                                                             |
| [Escaped Output] link_to("Retract", drill, :method => :delete, :data => ({ :confirm => ("Retract #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+

students/_drills_retractable.["StudentsController#show_drills", "Template:students/show_drills"]

+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] drill.name                                                                                                                               |
| [Escaped Output] datePretty(drill.created_at)                                                                                                             |
| [Escaped Output] link_to("Retract", drill, :method => :delete, :data => ({ :confirm => ("Retract #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+

students/_drills_retractable.["Template:students/show"]

+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                    |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] drill.name                                                                                                                               |
| [Escaped Output] datePretty(drill.created_at)                                                                                                             |
| [Escaped Output] link_to("Retract", drill, :method => :delete, :data => ({ :confirm => ("Retract #{drill.name}?") }), :class => "btn btn-primary btn-xs") |
+-----------------------------------------------------------------------------------------------------------------------------------------------------------+

students/_fields

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] student.input(:email, :placeholder => "Student's email address")                                                                         >>
| [Escaped Output] detail.input(:first_name, :placeholder => "Student's first name")                                                                        >>
| [Escaped Output] detail.input(:family_name, :placeholder => "Student's family name")                                                                      >>
| [Escaped Output] detail.input(:id, :as => :hidden)                                                                                                        >>
| [Escaped Output] student.simple_fields_for(:detail) do; [Escaped Output] detail.input(:first_name, :placeholder => "Student's first name");[Escaped Output>>
| [Escaped Output] plan.input(:duration_practice, :collection => forcedDurationList, :label => "Practice Time per Month", :include_blank => false)          >>
| [Escaped Output] plan.input(:no_games, :collection => forcedGamesList, :label => "Games per Month", :include_blank => false)                              >>
| [Escaped Output] plan.input(:no_lessons, :collection => lesson_list, :selected => 4, :label => "Lessons per Month", :include_blank => false)              >>
| [Escaped Output] student.simple_fields_for(:plans) do; [Escaped Output] plan.input(:duration_practice, :collection => forcedDurationList, :label => "Pract>>
| [Escaped Output] profile.input(:handicap_country, :collection => handicap_country_list, :selected => "Mentor Handicap", :label => "Handicap Type")        >>
| [Escaped Output] profile.input(:exact_handicap, :label => "Estimated Handicap", :input_html => ({ :min => 0, :max => 99 }))                               >>
| [Escaped Output] student.simple_fields_for(:profile) do; [Escaped Output] profile.input(:handicap_country, :collection => handicap_country_list, :selected>>
| [Escaped Output] goal.input(:strokes_improvement, :collection => (1..30).to_a, :selected => 5, :hint => "number of strokes to improve")                   >>
| [Escaped Output] goal.input(:number_of_months, :collection => (1..12).to_a, :selected => 6, :hint => "number of months to achieve improvement")           >>
| [Escaped Output] student.simple_fields_for(:goals) do; [Escaped Output] goal.input(:strokes_improvement, :collection => (1..30).to_a, :selected => 5, :hin>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/_fields.["Template:students/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] student.input(:email, :placeholder => "Student's email address")                                                                         >>
| [Escaped Output] detail.input(:first_name, :placeholder => "Student's first name")                                                                        >>
| [Escaped Output] detail.input(:family_name, :placeholder => "Student's family name")                                                                      >>
| [Escaped Output] detail.input(:id, :as => :hidden)                                                                                                        >>
| [Escaped Output] student.simple_fields_for(:detail) do; [Escaped Output] detail.input(:first_name, :placeholder => "Student's first name");[Escaped Output>>
| [Escaped Output] plan.input(:duration_practice, :collection => forcedDurationList, :label => "Practice Time per Month", :include_blank => false)          >>
| [Escaped Output] plan.input(:no_games, :collection => forcedGamesList, :label => "Games per Month", :include_blank => false)                              >>
| [Escaped Output] plan.input(:no_lessons, :collection => lesson_list, :selected => 4, :label => "Lessons per Month", :include_blank => false)              >>
| [Escaped Output] student.simple_fields_for(:plans) do; [Escaped Output] plan.input(:duration_practice, :collection => forcedDurationList, :label => "Pract>>
| [Escaped Output] profile.input(:handicap_country, :collection => handicap_country_list, :selected => "Mentor Handicap", :label => "Handicap Type")        >>
| [Escaped Output] profile.input(:exact_handicap, :label => "Estimated Handicap", :input_html => ({ :min => 0, :max => 99 }))                               >>
| [Escaped Output] student.simple_fields_for(:profile) do; [Escaped Output] profile.input(:handicap_country, :collection => handicap_country_list, :selected>>
| [Escaped Output] goal.input(:strokes_improvement, :collection => (1..30).to_a, :selected => 5, :hint => "number of strokes to improve")                   >>
| [Escaped Output] goal.input(:number_of_months, :collection => (1..12).to_a, :selected => 6, :hint => "number of months to achieve improvement")           >>
| [Escaped Output] student.simple_fields_for(:goals) do; [Escaped Output] goal.input(:strokes_improvement, :collection => (1..30).to_a, :selected => 5, :hin>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/myhome

+----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                             |
+----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph) })                                                        |
| [Escaped Output] calculator_welcome_text(@user.referral)                                                                                           |
| [Escaped Output] link_to("here", secret_to_golf_path)                                                                                              |
| [Escaped Output] datePretty(@goal.created_at)                                                                                                      |
| [Escaped Output] datePretty(@goal.goal_date)                                                                                                       |
| [Escaped Output] datePretty(@goal.goal_date)                                                                                                       |
| [Escaped Output] render(partial => "shared/report_overall", {})                                                                                    |
| [Escaped Output] @user.pro_user.name                                                                                                               |
| [Escaped Output] @user.pro_user.email                                                                                                              |
| [Escaped Output] link_to("Full Details", show_for_student_professional_path(@user.pro_user.professional), :class => "btn btn-info")                |
| [Escaped Output] render(partial => "drills/drills", {})                                                                                            |
| [Escaped Output] render(partial => "shared/plans_text", {})                                                                                        |
| [Escaped Output] linkage_for_mental_game("btn btn-info advanced_link").html_safe                                                                   |
| [Escaped Output] linkage_for_challenges("btn btn-info advanced_link").html_safe                                                                    |
| [Escaped Output] linkage_if_setups_not_complete("btn btn-info advanced_link").html_safe                                                            |
| [Escaped Output] link_to("Analysis", report_path, :class => "btn btn-info advanced_link")                                                          |
| [Escaped Output] link_to("Overall Progress", report_overall_path, :class => "btn btn-info advanced_link")                                          |
| [Escaped Output] link_to("H'cap Certificate", print_handicaps_path(:format => "pdf"), :target => "_blank", :class => "btn btn-info advanced_link") |
| [Escaped Output] advert_display(:bottom, @advert_hide)                                                                                             |
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                                                                    |
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                                                          |
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                                                              |
| [Escaped Output] link_to("Help", homeHelp_path, :class => "side_menu_link")                                                                        |
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                            |
+----------------------------------------------------------------------------------------------------------------------------------------------------+

students/myhome.["StudentsController#myhome"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_posts_with_target(cookies[:graph_duration], current_user.gam>>
| [Escaped Output] calculator_welcome_text(current_user.referral)                                                                                           >>
| [Escaped Output] link_to("here", secret_to_golf_path)                                                                                                     >>
| [Escaped Output] datePretty(current_user.goal.created_at)                                                                                                 >>
| [Escaped Output] datePretty(current_user.goal.goal_date)                                                                                                  >>
| [Escaped Output] datePretty(current_user.goal.goal_date)                                                                                                  >>
| [Escaped Output] render(partial => "shared/report_overall", {})                                                                                           >>
| [Escaped Output] current_user.pro_user.name                                                                                                               >>
| [Escaped Output] current_user.pro_user.email                                                                                                              >>
| [Escaped Output] link_to("Full Details", show_for_student_professional_path(current_user.pro_user.professional), :class => "btn btn-info")                >>
| [Escaped Output] render(partial => "drills/drills", {})                                                                                                   >>
| [Escaped Output] render(partial => "shared/plans_text", {})                                                                                               >>
| [Escaped Output] linkage_for_mental_game("btn btn-info advanced_link").html_safe                                                                          >>
| [Escaped Output] linkage_for_challenges("btn btn-info advanced_link").html_safe                                                                           >>
| [Escaped Output] linkage_if_setups_not_complete("btn btn-info advanced_link").html_safe                                                                   >>
| [Escaped Output] link_to("Analysis", report_path, :class => "btn btn-info advanced_link")                                                                 >>
| [Escaped Output] link_to("Overall Progress", report_overall_path, :class => "btn btn-info advanced_link")                                                 >>
| [Escaped Output] link_to("H'cap Certificate", print_handicaps_path(:format => "pdf"), :target => "_blank", :class => "btn btn-info advanced_link")        >>
| [Escaped Output] advert_display(:bottom, :top => true)                                                                                                    >>
| [Escaped Output] link_to("Post Game", addpost_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Post Practice", post_practice_path, :class => "side_menu_link")                                                                 >>
| [Escaped Output] link_to("Post Lesson", post_lesson_path, :class => "side_menu_link")                                                                     >>
| [Escaped Output] link_to("Help", homeHelp_path, :class => "side_menu_link")                                                                               >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "fields", { :student => student })                                                                                     >>
| [Escaped Output] student.submit("Update", :class => "btn btn-primary")                                                                                    >>
| [Escaped Output] simple_form_for(@student, :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fields", { :student => stud>>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new.["StudentsController#create"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "fields", { :student => student })                                                                                     >>
| [Escaped Output] student.submit("Update", :class => "btn btn-primary")                                                                                    >>
| [Escaped Output] simple_form_for(build_student(params[:student]), :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fiel>>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new.["StudentsController#new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "fields", { :student => student })                                                                                     >>
| [Escaped Output] student.submit("Update", :class => "btn btn-primary")                                                                                    >>
| [Escaped Output] simple_form_for(Student.new, :html => ({ :class => "form-horizontal" })) do; [Escaped Output] render(partial => "fields", { :student => s>>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new_from_coupon

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] student.input(:email)                                                                                                                    >>
| [Escaped Output] student.input(:password)                                                                                                                 >>
| [Escaped Output] student.input(:authorisation)                                                                                                            >>
| [Escaped Output] detail.input(:first_name)                                                                                                                >>
| [Escaped Output] detail.input(:family_name)                                                                                                               >>
| [Escaped Output] student.simple_fields_for(:detail) do; [Escaped Output] detail.input(:first_name);[Escaped Output] detail.input(:family_name); end       >>
| [Escaped Output] student.submit("Join Now", :class => "btn btn-primary")                                                                                  >>
| [Escaped Output] simple_form_for(@student, :url => create_from_coupon_students_path, :method => :post, :html => ({ :class => "form-horizontal" })) do; [Es>>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new_from_coupon.["StudentsController#create_from_coupon"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] student.input(:email)                                                                                                                    >>
| [Escaped Output] student.input(:password)                                                                                                                 >>
| [Escaped Output] student.input(:authorisation)                                                                                                            >>
| [Escaped Output] detail.input(:first_name)                                                                                                                >>
| [Escaped Output] detail.input(:family_name)                                                                                                               >>
| [Escaped Output] student.simple_fields_for(:detail) do; [Escaped Output] detail.input(:first_name);[Escaped Output] detail.input(:family_name); end       >>
| [Escaped Output] student.submit("Join Now", :class => "btn btn-primary")                                                                                  >>
| [Escaped Output] simple_form_for(Coupon.find_by_code(params[:student][:authorisation]).pro_user.students.build(params[:student].merge(:name => "TBD")), :u>>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new_from_coupon.["StudentsController#new_from_coupon"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] student.input(:email)                                                                                                                    >>
| [Escaped Output] student.input(:password)                                                                                                                 >>
| [Escaped Output] student.input(:authorisation)                                                                                                            >>
| [Escaped Output] detail.input(:first_name)                                                                                                                >>
| [Escaped Output] detail.input(:family_name)                                                                                                               >>
| [Escaped Output] student.simple_fields_for(:detail) do; [Escaped Output] detail.input(:first_name);[Escaped Output] detail.input(:family_name); end       >>
| [Escaped Output] student.submit("Join Now", :class => "btn btn-primary")                                                                                  >>
| [Escaped Output] simple_form_for(Student.new, :url => create_from_coupon_students_path, :method => :post, :html => ({ :class => "form-horizontal" })) do; >>
| [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link")                                                                >>
| [Escaped Output] link_to("Help", key_infoHelp_path, :class => "side_menu_link")                                                                           >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", main_app.dashboard_path, :class => "side_menu_link");[Escaped Output] l>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new_message

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @student.name                                                                                                                            >>
| [Escaped Output] f.input(:subject, :input_html => ({ :size => 59 }))                                                                                      >>
| [Escaped Output] f.input(:message, :as => :text)                                                                                                          >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary")                                                                                 >>
| [Escaped Output] simple_form_for(@student, :url => create_message_student_path(@student), :html => ({ :class => "form-horizontal" })) do; [Escaped Output]>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/new_message.["StudentsController#new_message"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).name                                                                     >>
| [Escaped Output] f.input(:subject, :input_html => ({ :size => 59 }))                                                                                      >>
| [Escaped Output] f.input(:message, :as => :text)                                                                                                          >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary")                                                                                 >>
| [Escaped Output] simple_form_for((current_user or current_user.students.find_by_id(params[:id])), :url => create_message_student_path((current_user or cur>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @student.name                                                                                                                            >>
| [Escaped Output] gravatar_for(@student, :size => 30)                                                                                                      >>
| [Escaped Output] show_current_handicap(@student)                                                                                                          >>
| [Escaped Output] show_challenges_info(@student)                                                                                                           >>
| [Escaped Output] mental_game_level_descriptor(@student)                                                                                                   >>
| [Escaped Output] show_lessons(@student)                                                                                                                   >>
| [Escaped Output] last_lesson(@student)                                                                                                                    >>
| [Escaped Output] next_lesson_info(@student)                                                                                                               >>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => (@graph) })                                                               >>
| [Escaped Output] render(partial => "drills_retractable", {})                                                                                              >>
| [Escaped Output] link_to("Assign Drill", show_drills_student_path(@student))                                                                              >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Assign Drill", show_drills_student_path(@student), :class => "side_menu_link")                                                  >>
| [Escaped Output] link_to("View Posts", show_myhome_student_path(@student), :class => "side_menu_link")                                                    >>
| [Escaped Output] link_to("Plan", plan_path(@student.plans.first), :class => "side_menu_link")                                                             >>
| [Escaped Output] link_to("Details", detail_path(@student.detail), :class => "side_menu_link")                                                             >>
| [Escaped Output] link_to("Goals", show_goals_student_path(@student), :class => "side_menu_link")                                                          >>
| [Escaped Output] link_to("Email", new_message_student_path(@student.id), :class => "side_menu_link")                                                      >>
| [Escaped Output] link_to("Unlink", unlink_student_path(@student.id), :method => :delete, :data => ({ :confirm => "Are you sure?" }), :class => "side_menu_>>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link");[Escaped Output] link_to("A>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show.["StudentsController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).name                                                                     >>
| [Escaped Output] gravatar_for((current_user or current_user.students.find_by_id(params[:id])), :size => 30)                                               >>
| [Escaped Output] show_current_handicap((current_user or current_user.students.find_by_id(params[:id])))                                                   >>
| [Escaped Output] show_challenges_info((current_user or current_user.students.find_by_id(params[:id])))                                                    >>
| [Escaped Output] mental_game_level_descriptor((current_user or current_user.students.find_by_id(params[:id])))                                            >>
| [Escaped Output] show_lessons((current_user or current_user.students.find_by_id(params[:id])))                                                            >>
| [Escaped Output] last_lesson((current_user or current_user.students.find_by_id(params[:id])))                                                             >>
| [Escaped Output] next_lesson_info((current_user or current_user.students.find_by_id(params[:id])))                                                        >>
| [Escaped Output] render(partial => "graphs/overview_with_duration", { :graph => GraphLine.new_posts_with_target(cookies[:graph_duration], (current_user or>>
| [Escaped Output] render(partial => "drills_retractable", {})                                                                                              >>
| [Escaped Output] link_to("Assign Drill", show_drills_student_path((current_user or current_user.students.find_by_id(params[:id]))))                       >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Assign Drill", show_drills_student_path((current_user or current_user.students.find_by_id(params[:id]))), :class => "side_menu_l>>
| [Escaped Output] link_to("View Posts", show_myhome_student_path((current_user or current_user.students.find_by_id(params[:id]))), :class => "side_menu_lin>>
| [Escaped Output] link_to("Plan", plan_path((current_user or current_user.students.find_by_id(params[:id])).plans.first), :class => "side_menu_link")      >>
| [Escaped Output] link_to("Details", detail_path((current_user or current_user.students.find_by_id(params[:id])).detail), :class => "side_menu_link")      >>
| [Escaped Output] link_to("Goals", show_goals_student_path((current_user or current_user.students.find_by_id(params[:id]))), :class => "side_menu_link")   >>
| [Escaped Output] link_to("Email", new_message_student_path((current_user or current_user.students.find_by_id(params[:id])).id), :class => "side_menu_link">>
| [Escaped Output] link_to("Unlink", unlink_student_path((current_user or current_user.students.find_by_id(params[:id])).id), :method => :delete, :data => (>>
| [Escaped Output] content_for(:side_menu) do; [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link");[Escaped Output] link_to("A>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show_drills

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @student.name                                                                                                                            >>
| [Escaped Output] f.input(:name, :collection => (@drills_names))                                                                                           >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary", :id => "drill_submit")                                                          >>
| [Escaped Output] simple_form_for(@drill, :url => add_drill_student_path, :method => :post, :html => ({ :class => "form-horizontal" })) do; [Escaped Output>>
| [Escaped Output] render(partial => "drills_retractable", {})                                                                                              >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show_drills.["StudentsController#show_drills"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).name                                                                     >>
| [Escaped Output] f.input(:name, :collection => current_user.drills.pluck(:name, :name))                                                                   >>
| [Escaped Output] f.button(:submit, "Update", :class => "btn btn-primary", :id => "drill_submit")                                                          >>
| [Escaped Output] simple_form_for(Drill.new, :url => add_drill_student_path, :method => :post, :html => ({ :class => "form-horizontal" })) do; [Escaped Out>>
| [Escaped Output] render(partial => "drills_retractable", {})                                                                                              >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
| [Escaped Output] link_to("Help - Drills", help_drills_path, :class => "side_menu_link")                                                                   >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show_goals

+--------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                         |
+--------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] @student.name                                                                                                 |
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                           |
| [Escaped Output] form_for(@goal) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object }); end |
| [Escaped Output] render(partial => "shared/goal_text", {})                                                                     |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                              |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                            |
+--------------------------------------------------------------------------------------------------------------------------------+

students/show_goals.["StudentsController#show_goals"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).name                                                                     >>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] form_for((current_user or current_user.students.find_by_id(params[:id])).goals.first) do; [Escaped Output] render(partial => "shared/erro>>
| [Escaped Output] render(partial => "shared/goal_text", {})                                                                                                >>
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                                         >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

students/show_myhome

+--------------------------------------------------------------------------------------+
| Output                                                                               |
+--------------------------------------------------------------------------------------+
| [Escaped Output] @student.name                                                       |
| [Escaped Output] render(partial => "microposts/microposts", { :user => (@student) }) |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")    |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                  |
+--------------------------------------------------------------------------------------+

students/show_myhome.["StudentsController#show_myhome"]

+---------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                      |
+---------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] (current_user or current_user.students.find_by_id(params[:id])).name                                                       |
| [Escaped Output] render(partial => "microposts/microposts", { :user => ((current_user or current_user.students.find_by_id(params[:id]))) }) |
| [Escaped Output] link_to("Dashboard", dashboard_path, :class => "side_menu_link")                                                           |
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                         |
+---------------------------------------------------------------------------------------------------------------------------------------------+

subscriber_mailer/_email_bottom

+-----------------------------------------------------------------------------------------+
| Output                                                                                  |
+-----------------------------------------------------------------------------------------+
| [Escaped Output] link_to("The Golf Mentor", root_url, :target => "_blank")              |
| [Escaped Output] link_to("here", optOutAll_subscriber_url(@subscriber.optOutAll_token)) |
+-----------------------------------------------------------------------------------------+

subscriber_mailer/_email_bottom.["Template:subscriber_mailer/_fancy_bottom"]

+-----------------------------------------------------------------------------------------+
| Output                                                                                  |
+-----------------------------------------------------------------------------------------+
| [Escaped Output] link_to("The Golf Mentor", root_url, :target => "_blank")              |
| [Escaped Output] link_to("here", optOutAll_subscriber_url(@subscriber.optOutAll_token)) |
+-----------------------------------------------------------------------------------------+

subscriber_mailer/_email_try_it_now_advert

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] signup_url(:referral => "subscriber_email", :target => "_blank") |
| [Escaped Output] root_url                                                         |
+-----------------------------------------------------------------------------------+

subscriber_mailer/_email_try_it_now_advert.["Template:subscriber_mailer/_fancy_bottom"]

+-----------------------------------------------------------------------------------+
| Output                                                                            |
+-----------------------------------------------------------------------------------+
| [Escaped Output] signup_url(:referral => "subscriber_email", :target => "_blank") |
| [Escaped Output] root_url                                                         |
+-----------------------------------------------------------------------------------+

subscriber_mailer/_fancy_bottom

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] root_url                                         |
| [Escaped Output] render(partial => "email_try_it_now_advert", {}) |
| [Escaped Output] render(partial => "email_bottom", {})            |
| [Escaped Output] Time.now.year                                    |
+-------------------------------------------------------------------+

subscriber_mailer/_fancy_bottom.["Template:subscriber_mailer/broadcast_message"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] root_url                                         |
| [Escaped Output] render(partial => "email_try_it_now_advert", {}) |
| [Escaped Output] render(partial => "email_bottom", {})            |
| [Escaped Output] Time.now.year                                    |
+-------------------------------------------------------------------+

subscriber_mailer/_fancy_top

+----------------------------------+
| Output                           |
+----------------------------------+
| [Escaped Output] root_url        |
| [Escaped Output] message.subject |
+----------------------------------+

subscriber_mailer/_fancy_top.["Template:subscriber_mailer/broadcast_message"]

+----------------------------------+
| Output                           |
+----------------------------------+
| [Escaped Output] root_url        |
| [Escaped Output] message.subject |
+----------------------------------+

subscriber_mailer/broadcast_message

+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                                                                                        |
| [Escaped Output] @body                                                                                                                                     |
| [Escaped Output] content_tag(:a, :href => "https://appsto.re/au/oDCNcb.i", :style => ("color: #{Mentor_green}; text-decoration: none")) do; [ignored]; end |
| [Escaped Output] render(partial => "fancy_bottom", {})                                                                                                     |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+

subscriber_mailer/notify_new_subscriber

+------------------------------------+
| Output                             |
+------------------------------------+
| [Escaped Output] @subscriber.email |
| [Escaped Output] @status           |
+------------------------------------+

subscriber_mailer/weekly_newsletter

+------------------------------------------------------------------------+
| Output                                                                 |
+------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                    |
| [Escaped Output] @tip_text                                             |
| [Escaped Output] FreePeriod                                            |
| [Escaped Output] link_to("now", signup_url(:referral => "newsletter")) |
| [Escaped Output] render(partial => "fancy_bottom", {})                 |
+------------------------------------------------------------------------+

subscriber_mailer/welcome_message

+------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "fancy_top", {})                                                                                |
| [Escaped Output] link_to("Golf Mentor", root_url, :target => "_blank")                                                             |
| [Escaped Output] link_to("here", optOutAll_subscriber_url(@subscriber.optOutAll_token))                                            |
| [Escaped Output] link_to(image_tag("ebook_cover_thumb.png", :alt => "Free Ebook"), secret_to_golf_ebook_path, :target => "_blank") |
| [Escaped Output] link_to("here", secret_to_golf_ebook_path, :target => "_blank")                                                   |
| [Escaped Output] render(partial => "fancy_bottom", {})                                                                             |
+------------------------------------------------------------------------------------------------------------------------------------+

subscribers/google_opt_out

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:optOutEmail, "Email:")                                                                                                        >>
| [Escaped Output] email_field_tag(:optOutEmail)                                                                                                            >>
| [Escaped Output] submit_tag("Opt Out", :class => "btn btn-primary etm15")                                                                                 >>
| [Escaped Output] form_tag(google_optOutAll_subscribers_path, :method => :post) do; [Escaped Output] label_tag(:optOutEmail, "Email:");[Escaped Output] ema>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

subscribers/google_opt_out.["SubscribersController#google_opt_out"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:optOutEmail, "Email:")                                                                                                        >>
| [Escaped Output] email_field_tag(:optOutEmail)                                                                                                            >>
| [Escaped Output] submit_tag("Opt Out", :class => "btn btn-primary etm15")                                                                                 >>
| [Escaped Output] form_tag(google_optOutAll_subscribers_path, :method => :post) do; [Escaped Output] label_tag(:optOutEmail, "Email:");[Escaped Output] ema>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

subscribers/learn_golf

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                               |
| [Escaped Output] FreePeriod                                                                                      |
| [Escaped Output] link_to("Join Today", signup_path(:referral => "learn_golf"), :class => "call_to_action round") |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                  |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                               |
+------------------------------------------------------------------------------------------------------------------+

subscribers/learn_golf.["SubscribersController#learn_golf"]

+------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                           |
+------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] h1_insert_landing                                                                               |
| [Escaped Output] 10                                                                                              |
| [Escaped Output] link_to("Join Today", signup_path(:referral => "learn_golf"), :class => "call_to_action round") |
| [Escaped Output] image_tag("infographic.png", :alt => "How to improve at Golf")                                  |
| [Escaped Output] render(partial => "shared/sidebars/standard", {})                                               |
+------------------------------------------------------------------------------------------------------------------+

subscribers/new

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/newsletter_form", {}) |
+------------------------------------------------------------------+

subscribers/new.["SubscribersController#new"]

+------------------------------------------------------------------+
| Output                                                           |
+------------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/newsletter_form", {}) |
+------------------------------------------------------------------+

subscribers/optOutAll

+------------------------------------+
| Output                             |
+------------------------------------+
| [Escaped Output] @subscriber.email |
+------------------------------------+

templates/chartview

+------------------------------------------------------------+
| Output                                                     |
+------------------------------------------------------------+
| [Escaped Output] @title                                    |
| [Escaped Output] url_for(:action => "getchart", :img => i) |
+------------------------------------------------------------+

user_mailer/change_password

+---------------------------------------------------------------------------------------------------+
| Output                                                                                            |
+---------------------------------------------------------------------------------------------------+
| [Escaped Output] render(partial => "profile_mailer/fancy_top", {})                                |
| [Escaped Output] @student.first_name                                                              |
| [Escaped Output] @student.pro_user.name                                                           |
| [Escaped Output] link_to("clicking here", sets_password_reset_url(@student.password_reset_token)) |
| [Escaped Output] sets_password_reset_url(@student.password_reset_token)                           |
| [Escaped Output] render(partial => "profile_mailer/fancy_bottom", {})                             |
+---------------------------------------------------------------------------------------------------+

user_mailer/notify_add_tip

+--------------------------------------------+
| Output                                     |
+--------------------------------------------+
| [Escaped Output] "Errors = #{@error_text}" |
| [Escaped Output] "Tip = #{@tip_text}"      |
+--------------------------------------------+

user_mailer/notify_feedback

+-------------------------------------------------+
| Output                                          |
+-------------------------------------------------+
| [Escaped Output] @comment                       |
| [Escaped Output] feedback_footer(@email, @user) |
+-------------------------------------------------+

user_mailer/notify_subscription

+------------------------------+
| Output                       |
+------------------------------+
| [Escaped Output] @user.email |
| [Escaped Output] @status     |
+------------------------------+

user_mailer/password_reset

+----------------------------------------------------------------------------------------------------+
| Output                                                                                             |
+----------------------------------------------------------------------------------------------------+
| [Escaped Output] link_to("Reset my password", edit_password_reset_url(@user.password_reset_token)) |
+----------------------------------------------------------------------------------------------------+

user_mailer/send_chris_overview

+--------------------------------------------------------------+
| Output                                                       |
+--------------------------------------------------------------+
| [Escaped Output] render(partial => "shared/users_stats", {}) |
+--------------------------------------------------------------+

user_mailer/send_chris_response

+----------------------------------------+
| Output                                 |
+----------------------------------------+
| [Escaped Output] @number               |
| [Escaped Output] @user.name            |
| [Escaped Output] @user.email           |
| [Escaped Output] k.capitalize          |
| [Escaped Output] v                     |
| [Escaped Output] @responses["comment"] |
+----------------------------------------+

user_mailer/send_coupon

+--------------------------------------------------------------------------------+
| Output                                                                         |
+--------------------------------------------------------------------------------+
| [Escaped Output] @name                                                         |
| [Escaped Output] sponsor_name                                                  |
| [Escaped Output] free_period_text                                              |
| [Escaped Output] free_period_text                                              |
| [Escaped Output] @code                                                         |
| [Escaped Output] link_to("here", coupon_signup_url(:authorisation => (@code))) |
| [Escaped Output] sponsor_name                                                  |
+--------------------------------------------------------------------------------+

user_mailer/send_friend_message

+--------------------------------------+
| Output                               |
+--------------------------------------+
| [Escaped Output] friend_message_text |
+--------------------------------------+

users/_edit_fields

+------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                                                                                                |
| [Escaped Output] f.input(:sex, :collection => (["", "Male", "Female"]))                                                                        |
| [Escaped Output] f.input(:password)                                                                                                            |
| [Escaped Output] f.input(:age, :collection => (["", "13-19 yrs", "20-29 yrs", "30-39 yrs", "40-49 yrs", "50-59 yrs", "60-69 yrs", "70+ yrs"])) |
| [Escaped Output] f.input(:password_confirmation, :label => "Confirmation")                                                                     |
| [Escaped Output] f.input(:country_name, :priority => (["AU", "US", "GB", "CA", "ZA"]))                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------+

users/_edit_fields.["Template:users/edit"]

+------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                                                                                                |
| [Escaped Output] f.input(:sex, :collection => (["", "Male", "Female"]))                                                                        |
| [Escaped Output] f.input(:password)                                                                                                            |
| [Escaped Output] f.input(:age, :collection => (["", "13-19 yrs", "20-29 yrs", "30-39 yrs", "40-49 yrs", "50-59 yrs", "60-69 yrs", "70+ yrs"])) |
| [Escaped Output] f.input(:password_confirmation, :label => "Confirmation")                                                                     |
| [Escaped Output] f.input(:country_name, :priority => (["AU", "US", "GB", "CA", "ZA"]))                                                         |
+------------------------------------------------------------------------------------------------------------------------------------------------+

users/_edit_gravatar

+--------------------------------------+
| Output                               |
+--------------------------------------+
| [Escaped Output] gravatar_for(@user) |
+--------------------------------------+

users/_edit_gravatar.["Template:users/edit"]

+--------------------------------------+
| Output                               |
+--------------------------------------+
| [Escaped Output] gravatar_for(@user) |
+--------------------------------------+

users/_edit_gravatar.["UsersController#edit", "Template:users/edit"]

+---------------------------------------------+
| Output                                      |
+---------------------------------------------+
| [Escaped Output] gravatar_for(current_user) |
+---------------------------------------------+

users/_edit_gravatar.["UsersController#update", "Template:users/edit"]

+----------------------------------------------------------------+
| Output                                                         |
+----------------------------------------------------------------+
| [Escaped Output] gravatar_for(User.friendly.find(params[:id])) |
+----------------------------------------------------------------+

users/_fields

+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                              |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.label(:name, "Name")                                                                                                             |
| [Escaped Output] f.text_field(:name)                                                                                                                |
| [Escaped Output] f.label(:email, "Email")                                                                                                           |
| [Escaped Output] f.email_field(:email)                                                                                                              |
| [Escaped Output] f.label(:password)                                                                                                                 |
| [Escaped Output] f.password_field(:password)                                                                                                        |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                                             |
| [Escaped Output] f.text_field(:authorisation)                                                                                                       |
| [Escaped Output] f.label(:age, "Age")                                                                                                               |
| [Escaped Output] f.select(:age, ageList)                                                                                                            |
| [Escaped Output] f.label(:sex, "Sex")                                                                                                               |
| [Escaped Output] f.select(:sex, [["", ""], ["Male", "Male"], ["Female", "Female"]])                                                                 |
| [Escaped Output] f.label(:country_name, "Country")                                                                                                  |
| [Escaped Output] f.select(:country_name, [["", ""], ["Australia"], ["Canada"], ["South Africa"], ["United Kingdom"], ["United States"], ["Other"]]) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+

users/_fields.["Template:users/new_guest_convert"]

+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                              |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.label(:name, "Name")                                                                                                             |
| [Escaped Output] f.text_field(:name)                                                                                                                |
| [Escaped Output] f.label(:email, "Email")                                                                                                           |
| [Escaped Output] f.email_field(:email)                                                                                                              |
| [Escaped Output] f.label(:password)                                                                                                                 |
| [Escaped Output] f.password_field(:password)                                                                                                        |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                                             |
| [Escaped Output] f.text_field(:authorisation)                                                                                                       |
| [Escaped Output] f.label(:age, "Age")                                                                                                               |
| [Escaped Output] f.select(:age, ageList)                                                                                                            |
| [Escaped Output] f.label(:sex, "Sex")                                                                                                               |
| [Escaped Output] f.select(:sex, [["", ""], ["Male", "Male"], ["Female", "Female"]])                                                                 |
| [Escaped Output] f.label(:country_name, "Country")                                                                                                  |
| [Escaped Output] f.select(:country_name, [["", ""], ["Australia"], ["Canada"], ["South Africa"], ["United Kingdom"], ["United States"], ["Other"]]) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+

users/_fields.["UsersController#new_guest_convert", "Template:users/new_guest_convert"]

+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                              |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] f.label(:name, "Name")                                                                                                             |
| [Escaped Output] f.text_field(:name)                                                                                                                |
| [Escaped Output] f.label(:email, "Email")                                                                                                           |
| [Escaped Output] f.email_field(:email)                                                                                                              |
| [Escaped Output] f.label(:password)                                                                                                                 |
| [Escaped Output] f.password_field(:password)                                                                                                        |
| [Escaped Output] f.label(:authorisation, "Coupon Code")                                                                                             |
| [Escaped Output] f.text_field(:authorisation)                                                                                                       |
| [Escaped Output] f.label(:age, "Age")                                                                                                               |
| [Escaped Output] f.select(:age, ageList)                                                                                                            |
| [Escaped Output] f.label(:sex, "Sex")                                                                                                               |
| [Escaped Output] f.select(:sex, [["", ""], ["Male", "Male"], ["Female", "Female"]])                                                                 |
| [Escaped Output] f.label(:country_name, "Country")                                                                                                  |
| [Escaped Output] f.select(:country_name, [["", ""], ["Australia"], ["Canada"], ["South Africa"], ["United Kingdom"], ["United States"], ["Other"]]) |
+-----------------------------------------------------------------------------------------------------------------------------------------------------+

users/_simple_fields

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                   |
| [Escaped Output] f.input(:email)                                  |
| [Escaped Output] f.input(:password)                               |
| [Escaped Output] f.input(:authorisation, :label => "Coupon Code") |
+-------------------------------------------------------------------+

users/_simple_fields.["Ios::UsersController#create", "Template:ios/users/new"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                   |
| [Escaped Output] f.input(:email)                                  |
| [Escaped Output] f.input(:password)                               |
| [Escaped Output] f.input(:authorisation, :label => "Coupon Code") |
+-------------------------------------------------------------------+

users/_simple_fields.["Ios::UsersController#new", "Template:ios/users/new"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                   |
| [Escaped Output] f.input(:email)                                  |
| [Escaped Output] f.input(:password)                               |
| [Escaped Output] f.input(:authorisation, :label => "Coupon Code") |
+-------------------------------------------------------------------+

users/_simple_fields.["Template:ios/users/new"]

+-------------------------------------------------------------------+
| Output                                                            |
+-------------------------------------------------------------------+
| [Escaped Output] f.input(:name)                                   |
| [Escaped Output] f.input(:email)                                  |
| [Escaped Output] f.input(:password)                               |
| [Escaped Output] f.input(:authorisation, :label => "Coupon Code") |
+-------------------------------------------------------------------+

users/_user

+------------------------------------------------------------------------------------------------------------------------------------------+
| Output                                                                                                                                   |
+------------------------------------------------------------------------------------------------------------------------------------------+
| [Escaped Output] gravatar_for(user, :size => 30)                                                                                         |
| [Escaped Output] link_to(user.name, user)                                                                                                |
| [Escaped Output] user.email                                                                                                              |
| [Escaped Output] link_to("delete", user, :method => :delete, :data => ({ :confirm => "You sure?", :title => ("Delete #{user.email}") })) |
+------------------------------------------------------------------------------------------------------------------------------------------+

users/_user_submit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for(@user) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simple_fields", { :f => f });[>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/_user_submit.["Template:users/new"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for(@user) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simple_fields", { :f => f });[>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/_user_submit.["UsersController#new_tracker", "Template:users/new_tracker"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] f.error_notification                                                                                                                     >>
| [Escaped Output] render(partial => "users/simple_fields", { :f => f })                                                                                    >>
| [Escaped Output] link_to("Terms and Conditions", legal_path)                                                                                              >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f, :text => "Join Now", :text_waiting => "Joining" }) })          >>
| [Escaped Output] simple_form_for(User.new) do; [Escaped Output] f.error_notification;[Escaped Output] render(partial => "users/simple_fields", { :f => f }>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/edit

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "edit_fields", { :f => f })                                                                                            >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] simple_form_for(@user, :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] render(partial => "shared/error_mes>>
| [Escaped Output] render(partial => "edit_gravatar", {})                                                                                                   >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Privacy", privacy_preferences_profiles_path, :class => "side_menu_link")                                                        >>
| [Escaped Output] link_to("Email Preferences", email_preferences_profiles_path, :class => "side_menu_link")                                                >>
| [Escaped Output] link_to("Handicap", edit_profile_path(@user.profile), :class => "side_menu_link")                                                        >>
| [Escaped Output] link_to("Billing", subscriptionShow_path, :class => "side_menu_link")                                                                    >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/edit.["UsersController#edit"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "edit_fields", { :f => f })                                                                                            >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] simple_form_for(current_user, :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] render(partial => "shared/er>>
| [Escaped Output] render(partial => "edit_gravatar", {})                                                                                                   >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Privacy", privacy_preferences_profiles_path, :class => "side_menu_link")                                                        >>
| [Escaped Output] link_to("Email Preferences", email_preferences_profiles_path, :class => "side_menu_link")                                                >>
| [Escaped Output] link_to("Handicap", edit_profile_path(current_user.profile), :class => "side_menu_link")                                                 >>
| [Escaped Output] link_to("Billing", subscriptionShow_path, :class => "side_menu_link")                                                                    >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/edit.["UsersController#update"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "edit_fields", { :f => f })                                                                                            >>
| [Escaped Output] render(partial => "shared/simple_submit_button", { :locals => ({ :f => f }) })                                                           >>
| [Escaped Output] simple_form_for(User.friendly.find(params[:id]), :defaults => ({ :placeholder => false, :hint => false })) do; [Escaped Output] render(pa>>
| [Escaped Output] render(partial => "edit_gravatar", {})                                                                                                   >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("Privacy", privacy_preferences_profiles_path, :class => "side_menu_link")                                                        >>
| [Escaped Output] link_to("Email Preferences", email_preferences_profiles_path, :class => "side_menu_link")                                                >>
| [Escaped Output] link_to("Handicap", edit_profile_path(User.friendly.find(params[:id]).profile), :class => "side_menu_link")                              >>
| [Escaped Output] link_to("Billing", subscriptionShow_path, :class => "side_menu_link")                                                                    >>
| [Escaped Output] link_to("Back", :back, :class => "side_menu_link")                                                                                       >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/google_opt_out

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:optOutEmail, "Email:")                                                                                                        >>
| [Escaped Output] email_field_tag(:optOutEmail)                                                                                                            >>
| [Escaped Output] submit_tag("Opt Out", :class => "btn btn-primary etm15")                                                                                 >>
| [Escaped Output] form_tag(google_optOutAll_users_path, :method => :post) do; [Escaped Output] label_tag(:optOutEmail, "Email:");[Escaped Output] email_fie>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/google_opt_out.["UsersController#google_opt_out"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] label_tag(:optOutEmail, "Email:")                                                                                                        >>
| [Escaped Output] email_field_tag(:optOutEmail)                                                                                                            >>
| [Escaped Output] submit_tag("Opt Out", :class => "btn btn-primary etm15")                                                                                 >>
| [Escaped Output] form_tag(google_optOutAll_users_path, :method => :post) do; [Escaped Output] label_tag(:optOutEmail, "Email:");[Escaped Output] email_fie>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/mcapSet

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] f.label(:score1, "Score")                                                                                                                >>
| [Escaped Output] f.select(:score1, scoresForcedList)                                                                                                      >>
| [Escaped Output] f.label(:score2, "Score")                                                                                                                >>
| [Escaped Output] f.select(:score2, scoresForcedList)                                                                                                      >>
| [Escaped Output] f.label(:score3, "Score")                                                                                                                >>
| [Escaped Output] f.select(:score3, scoresForcedList)                                                                                                      >>
| [Escaped Output] f.label(:score4, "Score")                                                                                                                >>
| [Escaped Output] f.select(:score4, scoresForcedList)                                                                                                      >>
| [Escaped Output] f.label(:score5, "Score")                                                                                                                >>
| [Escaped Output] f.select(:score5, scoresForcedList)                                                                                                      >>
| [Escaped Output] f.submit("Next")                                                                                                                         >>
| [Escaped Output] form_for(@user, :url => mcapSetCreate_path) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Esc>>
| [Escaped Output] @user.name                                                                                                                               >>
| [Escaped Output] @user.microposts.count                                                                                                                   >>
| [Escaped Output] link_to("Next", mcapSetCreate_path, :class => "side_menu_link")                                                                          >>
| [Escaped Output] link_to("Help", mcapSetHelp_path, :class => "side_menu_link")                                                                            >>
| [Escaped Output] link_to("Cancel", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/new

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] FreePeriod                           |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new.["UsersController#new"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] 10                                   |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_coupon

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] link_to("here", signup_path)         |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_coupon.["UsersController#new_coupon"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] link_to("here", signup_path)         |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_fb_improve

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] FreePeriod                           |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_fb_improve.["UsersController#new_fb_improve"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] 10                                   |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_guest_convert

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => f.object })                                                                      >>
| [Escaped Output] render(partial => "fields", { :f => f })                                                                                                 >>
| [Escaped Output] radio_button_tag(:fee, "annually", true)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("annually").price} per year")                                                            >>
| [Escaped Output] radio_button_tag(:fee, "monthly", false)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("monthly").price} per month")                                                            >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] f.hidden_field(:referral)                                                                                                                >>
| [Escaped Output] f.submit("Join", :class => "round")                                                                                                      >>
| [Escaped Output] form_for(@user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => f.object });[Escaped Output] render(partial >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/new_guest_convert.["UsersController#new_guest_convert"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "fields", { :f => FormBuilder.new })                                                                                   >>
| [Escaped Output] radio_button_tag(:fee, "annually", true)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("annually").price} per year")                                                            >>
| [Escaped Output] radio_button_tag(:fee, "monthly", false)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("monthly").price} per month")                                                            >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join", :class => "round")                                                                                        >>
| [Escaped Output] form_for(User.new) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Output>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/new_guest_convert.["UsersController#render_referral_template"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object })                                                        >>
| [Escaped Output] render(partial => "fields", { :f => FormBuilder.new })                                                                                   >>
| [Escaped Output] radio_button_tag(:fee, "annually", true)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("annually").price} per year")                                                            >>
| [Escaped Output] radio_button_tag(:fee, "monthly", false)                                                                                                 >>
| [Escaped Output] label_tag(:fee, "Subscription of US$#{Offer.new("monthly").price} per month")                                                            >>
| [Escaped Output] link_to("Terms and Conditions", legal_path, :target => "_blank")                                                                         >>
| [Escaped Output] FormBuilder.new.hidden_field(:referral)                                                                                                  >>
| [Escaped Output] FormBuilder.new.submit("Join", :class => "round")                                                                                        >>
| [Escaped Output] form_for(@user) do; [Escaped Output] render(partial => "shared/error_messages", { :object => FormBuilder.new.object });[Escaped Output] r>>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/new_ios

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_landing

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] FreePeriod                           |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_landing.["UsersController#new_landing"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] 10                                   |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_tracker

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] FreePeriod                           |
| [Escaped Output] FreePeriod                           |
| [Escaped Output] link_to("here", pricing_path)        |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/new_tracker.["UsersController#new_tracker"]

+-------------------------------------------------------+
| Output                                                |
+-------------------------------------------------------+
| [Escaped Output] 10                                   |
| [Escaped Output] 10                                   |
| [Escaped Output] link_to("here", pricing_path)        |
| [Escaped Output] render(partial => "user_submit", {}) |
+-------------------------------------------------------+

users/settings

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] gravatar_for(@user)                                                                                                                      >>
| [Escaped Output] @user.name                                                                                                                               >>
| [Escaped Output] @user.email                                                                                                                              >>
| [Escaped Output] title                                                                                                                                    >>
| [Escaped Output] bs_list_group_link(:url => paths[i]) do; [Escaped Output] title; end                                                                     >>
| [Escaped Output] bs_list_group do; titles.each_with_index do; [Escaped Output] bs_list_group_link(:url => paths[i]) do; [Escaped Output] title; end; end; >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/settings.["UsersController#settings"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] gravatar_for(current_user)                                                                                                               >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] current_user.email                                                                                                                       >>
| [Escaped Output] title                                                                                                                                    >>
| [Escaped Output] bs_list_group_link(:url => paths[i]) do; [Escaped Output] title; end                                                                     >>
| [Escaped Output] bs_list_group do; titles.each_with_index do; [Escaped Output] bs_list_group_link(:url => paths[i]) do; [Escaped Output] title; end; end; >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/show

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] @user.email                                                                                                                              >>
| [Escaped Output] link_to("#{@user.name} has no Profile", users_path, :class => "wider_button round")                                                      >>
| [Escaped Output] link_to("Delete #{@user.name}'s Profile", @user.profile, :method => :delete, :confirm => "You sure?", :title => ("Delete #{@user.name} Pr>>
| [Escaped Output] link_to("No Goals", @users, :class => "wider_button round")                                                                              >>
| [Escaped Output] link_to("Delete Latest of #{@user.goals.count} Goal", @user.goals.first, :method => :delete, :confirm => "You sure?", :title => ("Delete >>
| [Escaped Output] link_to("No Plans", users_path, :class => "wider_button round")                                                                          >>
| [Escaped Output] link_to("Delete Latest of #{@user.plans.count} Plan", @user.plans.first, :method => :delete, :confirm => "You sure?", :title => ("Delete >>
| [Escaped Output] link_to("No Microposts", users_path, :class => "wider_button round")                                                                     >>
| [Escaped Output] link_to("Delete Latest of #{@user.microposts.count} Micropost", @user.microposts.first, :method => :delete, :confirm => "You sure?", :tit>>
| [Escaped Output] gravatar_for(current_user)                                                                                                               >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] link_to("Users", users_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>

users/show.["UsersController#show"]

+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| Output                                                                                                                                                    >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>
| [Escaped Output] User.friendly.find(params[:id]).email                                                                                                    >>
| [Escaped Output] link_to("#{User.friendly.find(params[:id]).name} has no Profile", users_path, :class => "wider_button round")                            >>
| [Escaped Output] link_to("Delete #{User.friendly.find(params[:id]).name}'s Profile", User.friendly.find(params[:id]).profile, :method => :delete, :confirm>>
| [Escaped Output] link_to("No Goals", @users, :class => "wider_button round")                                                                              >>
| [Escaped Output] link_to("Delete Latest of #{User.friendly.find(params[:id]).goals.count} Goal", User.friendly.find(params[:id]).goals.first, :method => :>>
| [Escaped Output] link_to("No Plans", users_path, :class => "wider_button round")                                                                          >>
| [Escaped Output] link_to("Delete Latest of #{User.friendly.find(params[:id]).plans.count} Plan", User.friendly.find(params[:id]).plans.first, :method => :>>
| [Escaped Output] link_to("No Microposts", users_path, :class => "wider_button round")                                                                     >>
| [Escaped Output] link_to("Delete Latest of #{User.friendly.find(params[:id]).microposts.count} Micropost", User.friendly.find(params[:id]).microposts.firs>>
| [Escaped Output] gravatar_for(current_user)                                                                                                               >>
| [Escaped Output] current_user.name                                                                                                                        >>
| [Escaped Output] link_to("Users", users_path, :class => "side_menu_link")                                                                                 >>
| [Escaped Output] link_to("MyHome", root_path, :class => "side_menu_link")                                                                                 >>
+----------------------------------------------------------------------------------------------------------------------------------------------------------->>




+Errors+

+----------------------------------------------------------------------------------------------------------------------+------------------------------------>>
| Error                                                                                                                | Location                           >>
+----------------------------------------------------------------------------------------------------------------------+------------------------------------>>
| /Users/Chris/Documents/Sites/golf_mentor/app/helpers/profile_mailer_helper.rb:1 :: parse error on value ":" (tCOLON) | Could not parse /Users/Chris/Docume>>
| /Users/Chris/Documents/Sites/golf_mentor/app/helpers/profiles_helper.rb:1 :: parse error on value ":" (tCOLON)       | Could not parse /Users/Chris/Docume>>
+----------------------------------------------------------------------------------------------------------------------+------------------------------------>>


View Warnings:

+------------+--------------------------------------------------+----------------------+-------------------------------------------------------------------->>
| Confidence | Template                                         | Warning Type         | Message                                                            >>
+------------+--------------------------------------------------+----------------------+-------------------------------------------------------------------->>
| Medium     | reports/_report (Template:reports/report_sample) | Cross Site Scripting | Unsafe model attribute in link_to href near line 69: link_to("page">>
+------------+--------------------------------------------------+----------------------+-------------------------------------------------------------------->>

